/* =========================================================
   Root Variables
========================================================= */

:root {
  --browser-color: #222;

  /* Animation settings */
  --breathe-duration: 3s;
  --animation-duration: 1s;
  --animation-delay-step: 0.2s;
  --animation-speed: 0.5s;
  --animation-easing: linear;
  --max-duration: 5.5s;
  --max-delay: 3s;
  --min-duration: 0.5s;
  --max-duration: 2.5s;

  /* Arrow colors */
  --arrow-off-color: var(--color-3);
  --arrow-on-color: var(--color-1);

  /* Light panel settings */
  --circle-size: 0.65em;

  /* Grid settings */
  --columns: 10;
  --rows: 12;
  --gap: 15px;

  /* Carousel settings */
  --carousel-depth: 10em;

  /* Miscellaneous */
  --off-color: rgb(89, 89, 89);

  /* Intro sequence variables */
  --intro-bg: #1b1c1c;
  --intro-text: #9ce0a9;
  --intro-glow: rgba(156, 224, 169, 0.3);
  --scan-line-color: rgba(140, 255, 170, 0.03);

  /* Clock variables */
  --clock-size: 100%;
  --dot-size: 2px;
  --stroke-width: 1px;
  --hand-stroke-width: 1px;

  /* Speech bubble colors */
  --speech-bg: var(--color-4);
  --speech-text: var(--color-1);
  --speech-border: var(--color-2);

  /* Base Intensity Controls (min: 0.1, max: 5.0, default: 2.0) */
  --crt-intensity: 3;
  --crt-brightness: 2; /* min: 0.5, max: 3.0 */
  --crt-contrast: 2; /* min: 0.8, max: 4.0 */

  /* Color and Glow Settings */
  --crt-primary-color: 156, 224, 169;
  --ambient-glow: rgba(0, 0, 0, 0.466); /* min: 0.05, max: 0.6 */

  /* Animation Timing (in seconds) */
  --flicker-speed: 0.01s; /* min: 0.05s, max: 2.0s */
  --scanline-speed: 10s; /* min: 1s, max: 10s */

  /* Effect Intensities */
  --scanline-opacity: 0.4; /* min: 0.2, max: 0.9 */
  --flicker-opacity: 0.9; /* min: 0.3, max: 1.0 */
  --glow-strength: 5vh; /* min: 10px, max: 100px */
  --glow-spread: 25vh; /* min: 30px, max: 200px */

  /* Derived Calculations */
  --glow-inner: calc(var(--glow-strength) * var(--crt-intensity));
  --glow-outer: calc(var(--glow-spread) * var(--crt-intensity));

  /* CRT Effect Controls */
  --jitter-intensity: 0.45; /* min: 0.1, max: 2.0 */

  /* Content Flicker Controls */
  --content-flicker-speed: calc(var(--flicker-speed) * 1.5);
  --content-flicker-opacity: 0.85;
  --content-flicker-variance: 0.1;

  /* Cockpit Vibration Controls */
  --cockpit-translate-min: -1px;
  --cockpit-translate-max: 1px;
  --cockpit-rotate-min: -0.1deg;
  --cockpit-rotate-max: 0.3deg;


  /* Overall animation settings */
  --starship-movement-duration: 30s;
  --z-movement-duration: 20s; /* Separate duration for z-movement */

  /* Page â€“ Translate */
  --default-page-translate-z: -30px;
  --page-translate-z: -70px;
  --page-rotate-x: 6deg;
  --page-rotate-y: 4deg;

  /* Widget  */
  --widget-animation-duration: 1.5s;
  
}


svg path {
  vector-effect: non-scaling-stroke;
}

svg{
  shape-rendering: geometricPrecision;
}

* {
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  -webkit-font-smoothing: antialiasing;
  text-rendering: antialiasing;
  margin: 0;
  padding: 0;
}


body {
  font-variant-ligatures: common-ligatures;
  text-rendering: geometricPrecision;
  word-spacing: 0.04em;
  overflow: hidden;
  min-height: 100svh;
  overscroll-behavior: none; /* Prevent overscroll */
  pointer-events: all;
}

/******************
 * MARQUEE EFFECT *
 ******************/

.marquee-content {
  display: flex;
  align-items: center;
  flex-direction: row;
  white-space: nowrap;
  animation: marquee-animation-horizontal 15s steps(60) infinite;
  will-change: transform;
}

.marquee-content.vertical {
  animation: marquee-animation-vertical 20s steps(20) infinite;
}

.marquee-content::after {
  content: "";
}

@keyframes marquee-animation-horizontal {
  0% {
    transform: translateX(0);
  }

  100% {
    transform: translateX(-50%);
  }
}

@keyframes marquee-animation-vertical {
  0% {
    transform: translateY(0);
  }

  100% {
    transform: translateY(-50%);
  }
}

/*********************
 * PATTERN MOVEMENTS *
 *********************/

.pattern-wrapper > .pattern-vertical {
  animation: scroll-vertical 1s steps(5) infinite;
}

.pattern-wrapper > .pattern {
  animation: scroll-horizontal 5s steps(5) infinite;
}

@keyframes scroll-horizontal {
  0%,
  100% {
    transform: translateX(0%);
  }
  50% {
    transform: translateX(-50%);
  }
}

@keyframes scroll-vertical {
  0% {
    transform: translateY(0%);
  }
  100% {
    transform: translateY(-50%);
  }
}


/******************
 * PROJECT IMAGES *
 ******************/
 .portfolio-card__image {
  background-size: 400% 100%;       
  background-position: 0 0;
}

.portfolio-card:hover > .portfolio-card__image{
  animation: playSprite 1s steps(3) infinite;
}

@keyframes playSprite {
  0% { background-position: 0% 0; }
  100%   { background-position: 100% 0; }

}
/******************
 * WIDGET EFFECTS *
 ******************/




@keyframes widgetIntro {
  0% {
    opacity: 0;
  }
  25% {
    opacity: 0.8;
  }
  50% {
    opacity: 0.3;
  }
  75% {
    opacity: 0.7;
  }
  100% {
    opacity: 1;
  }
}

@keyframes widgetOutro {
  0% {
    opacity: 1;
  }
  25% {
    opacity: 0.4;
  }
  50% {
    opacity: 0.8;
  }
  75% {
    opacity: 0.6;
  }
  100% {
    opacity: 0;
  }
}

.widget-flicker {
  animation: flicker var(--animation-duration) steps(4) infinite;
}

.widget-hidden {
  opacity:0;
}

.widget-intro {
  animation: widgetIntro var(--widget-animation-duration) steps(4) forwards;
}

.widget-outro {
  animation: widgetOutro var(--widget-animation-duration) steps(4) forwards;
}

/********************
 * ARROWS ANIMATION *
 ********************/

/* Arrows Widget Movement */
.arrow--svg {
  animation: flash-arrows var(--animation-duration) linear infinite;
}

/* Show all arrows on large screens */
.widget-arrows .arrow--svg:nth-child(n) {
  display: inline-block;
}

/* Medium screen (hide one arrow) */
@media (max-width: 1200px) {
  .widget-arrows .arrow--svg:nth-child(5) {
    display: none;
  }
}

/* Small screen (hide two arrows) */
@media (max-width: 768px) {
  .widget-arrows .arrow--svg:nth-child(4),
  .widget-arrows .arrow--svg:nth-child(5) {
    display: none;
  }
}

/* Keyframes for switching each arrow on and off */
@keyframes flash-arrows {
  0%,
  19.99% {
    color: var(--arrow-off-color); /* "Off" state */
  }
  20%,
  39.99% {
    color: var(--arrow-on-color); /* "On" state */
  }
  40%,
  100% {
    color: var(--arrow-off-color); /* Return to "Off" state */
  }
}

/* Define animation delay for each arrow to stagger the flash */
.widget-arrows .arrow--svg:nth-child(1) {
  animation-delay: 0s;
}
.widget-arrows .arrow--svg:nth-child(2) {
  animation-delay: var(--animation-delay-step);
}
.widget-arrows .arrow--svg:nth-child(3) {
  animation-delay: calc(var(--animation-delay-step) * 2);
}
.widget-arrows .arrow--svg:nth-child(4) {
  animation-delay: calc(var(--animation-delay-step) * 3);
}
.widget-arrows .arrow--svg:nth-child(5) {
  animation-delay: calc(var(--animation-delay-step) * 4);
}

/*******************
 * TEXT PROCESSORS *
 *******************/

.processor-animation {
  white-space: pre;
}

.processor-animation.tight-spacing {
  letter-spacing: -1px;
}

/**************
 * LIGHT GRID *
 **************/

.light-grid {
  display: grid;
  grid-template-columns: repeat(var(--columns), 1fr);
  grid-template-rows: repeat(var(--rows), 1fr);
  gap: var(--gap);
  width: 100%;
  height: 100%;
}

.light-grid__circle {
  width: 0.65em;
  height: 0.65em;
  background-color: var(--color-3); /* Use off color initially */
  border-radius: 10em;
  animation: flicker 3s steps(6) infinite;
  aspect-ratio: 1 / 1;
  opacity: 1;
  will-change: opacity;
}

@keyframes flicker {
  0% {
    opacity: 0.1;
  }
  50% {
    opacity: 1;
  }
  100% {
    opacity: 0.1;
  }
}

/************
 * MINI MAP *
 ************/

.cursor-dot {
  animation: cursor-dot-blink 1.5s infinite;
}

@keyframes cursor-dot-blink {
  0%,
  50%,
  100% {
    opacity: 1;
  }
  25%,
  75% {
    opacity: 0;
  }
}

/***************************
 * ROTATING CUBE ANIMATION *
 ***************************/

.cube {
  --cube-size: 9em;
  position: absolute;
  width: var(--cube-size);
  height: var(--cube-size);
  transform-style: preserve-3d;
  animation: rotate-cube 5s infinite steps(30);
}

.cube-face {
  position: absolute;
  width: var(--cube-size);
  height: var(--cube-size);
  border: 1px solid var(--color-2);
}
.cube-face:nth-child(1) {
  transform: rotateY(0deg) translateZ(calc(var(--cube-size) / 2));
}
.cube-face:nth-child(2) {
  transform: rotateY(90deg) translateZ(calc(var(--cube-size) / 2));
}
.cube-face:nth-child(3) {
  transform: rotateY(180deg) translateZ(calc(var(--cube-size) / 2));
}
.cube-face:nth-child(4) {
  transform: rotateY(-90deg) translateZ(calc(var(--cube-size) / 2));
}
.cube-face:nth-child(5) {
  transform: rotateX(90deg) translateZ(calc(var(--cube-size) / 2));
}
.cube-face:nth-child(6) {
  transform: rotateX(-90deg) translateZ(calc(var(--cube-size) / 2));
}
@keyframes rotate-cube {
  from {
    transform: rotateX(0deg) rotateY(0deg);
  }
  to {
    transform: rotateX(360deg) rotateY(360deg);
  }
}

/*******************
 * INTRO ANIMATION *
 *******************/

.intro-pre {
  font-family: monospace;
  white-space: pre !important; /* Force preserve whitespace */
  line-height: 1.4;
  color: var(--intro-text);
  transform: none !important; /* Prevent transformations */
}

/* Add the new intro flash animation */
@keyframes intro-flash {
  0%,
  100% {
    background-color: var(--color-2);
  }
  25% {
    background-color: var(
      --background
    ); /* Brighter green for better visibility */
  }
  50% {
    background-color: var(--color-4); /* Darker green for contrast */
  }
  75% {
    background-color: var(--color-1); /* Back to brighter green */
  }
}

.intro-flash-effect {
  animation: intro-flash 1s steps(3) forwards;
}

.intro-wrapper__text::after {
  display: none;
}

.typing-cursor {
  display: inline-block;
  width: 0.6em;
  height: 1em;
  background-color: var(--color-1);
  position: absolute;
  margin-left: 0; /* Remove margin */
  transform: translateY(-0.1em);
  animation: cursor-blink 0.6s steps(1, start) infinite;
  box-shadow: 0 0 4px var(--color-1), 0 0 8px rgba(156, 224, 169, 0.4);
  opacity: 0.8;
}

@keyframes cursor-blink {
  0%,
  100% {
    opacity: 1;
  }
  50% {
    opacity: 0;
  }
}

@keyframes brightnessFlicker {
  0% {
    filter: brightness(1);
  }
  15% {
    filter: brightness(1.5);
  }
  16% {
    filter: brightness(0.8);
  }
  17% {
    filter: brightness(1.5);
  }
  18% {
    filter: brightness(1);
  }
  35% {
    filter: brightness(1);
  }
  36% {
    filter: brightness(1.3);
  }
  37% {
    filter: brightness(0.9);
  }
  38% {
    filter: brightness(1);
  }
  100% {
    filter: brightness(1);
  }
}

/***************
 * 3D BUTTONS *
 ***************/



 .btn-3d{
  /* in webflow */
 }

 .btn-3d__glow{
  opacity: 0;
}

.btn-3d__button--front,
.btn-3d__button--sides {
  background-color: var(--buttons);
}


.btn-3d--active{
  transform: translateZ(calc(var(--button-depth) * -0.5));
}

.btn-3d--active .btn-3d__button--front,
.btn-3d--active .btn-3d__button--sides {
  animation: oscillateColor 2s ease-in-out infinite;
}

.btn-3d--active > .btn-3d__glow {
  animation: buttonGlow 2s ease-in-out infinite;
}



@keyframes oscillateColor {
  0% {
    background-color: var(--light-2);
  }
  50% {
    background-color: var(--light);
  }
  100% {
    background-color: var(--light-2);
  }
}

@keyframes buttonGlow {
  0% {
    opacity: 0.25;
  }
  50% {
    opacity: 0.5;
  }
  100% {
    opacity: 0.25;
  }
}


/*********
 * CLOCK *
 *********/

#hour_hand,
#minute_hand,
#second_hand {
  stroke-linecap: round;
  vector-effect: non-scaling-stroke; /* Ensure stroke width remains consistent */
}

#hour_hand {
  stroke: var(--color-2);
  stroke-width: calc(var(--hand-stroke-width) * 4);
}

#minute_hand {
  stroke: var(--color-2);
  stroke-width: calc(var(--hand-stroke-width) * 3);
}

#second_hand {
  stroke: var(--color-2);
  stroke-width: calc(var(--hand-stroke-width) * 2);
}

/* Clock Face Stroke */
.clock-face {
  stroke: var(--color-2);
  stroke-width: var(--stroke-width);
  vector-effect: non-scaling-stroke; /* Consistent stroke */
}

/* Hour Dot Styles */
.hour-dot {
  fill: var(--color-2);
}

/****************
 * MAIN WRAPPER *
 ****************/




.page-intro {
  animation: mainWrapperIntro 0.8s cubic-bezier(0.19, 1, 0.22, 1) forwards
}

@keyframes mainWrapperIntro {
  0% {
    opacity: 0;
    filter: brightness(0.5);
    visibility: visible;
  }
  10% {
    opacity: 0.7;
    filter: brightness(1.3);
  }
  20% {
    opacity: 0.4;
    filter: brightness(0.9);
  }
  40% {
    opacity: 0.9;
    filter: brightness(1.2);
  }
  100% {
    opacity: 1;
    filter: brightness(1);
    visibility: visible;
  }
}

.display {
  /* animation: verticalJitter 0.1s infinite; */
  transform-style: preserve-3d;
}


@keyframes verticalJitter {
  0%,
  100% {
    transform: translateY(0);
  }
  20% {
    transform: translateY(calc(var(--jitter-intensity) * -0.5px));
  }
  40% {
    transform: translateY(calc(var(--jitter-intensity) * 0.3px));
  }
  60% {
    transform: translateY(calc(var(--jitter-intensity) * -0.5px));
  }
  80% {
    transform: translateY(calc(var(--jitter-intensity) * 0.3px));
  }
}

/*****************
 * CRT CONTAINER *
 *****************/

.flicker {
  position: fixed;
  inset: 0;
  background: rgba(var(--crt-primary-color), 0.01);
  mix-blend-mode: overlay;
  animation: flickerAnimation var(--flicker-speed) infinite;
  opacity: var(--flicker-opacity);
}

@keyframes flickerAnimation {
  0% {
    opacity: calc(var(--flicker-opacity) * 0.3);
    transform: translateX(0);
  }
  10% {
    opacity: calc(var(--flicker-opacity) * 0.75);
  }
  25% {
    opacity: calc(var(--flicker-opacity) * 1);
    transform: translateX(0);
  }
  40% {
    opacity: calc(var(--flicker-opacity) * 0.2);
    transform: translateX(-1px);
  }
  55% {
    opacity: calc(var(--flicker-opacity) * 0.9);
    transform: translateX(1px);
  }
  70% {
    opacity: calc(var(--flicker-opacity) * 0.4);
    transform: translateX(-1px);
  }
  85% {
    opacity: calc(var(--flicker-opacity) * 1);
    transform: translateX(1px);
  }
  100% {
    opacity: calc(var(--flicker-opacity) * 0.5);
    transform: translateX(0);
  }
}

.glow {
  position: absolute;
  inset: -4px;
  background: transparent;
  box-shadow: inset 0 0 var(--glow-inner) rgba(var(--crt-primary-color), 0.9),
    inset 0 0 var(--glow-outer) rgba(var(--crt-primary-color), 0.1);
  pointer-events: none;
  border-radius: var(--border-radius);
  animation: glowJitter 0.1s infinite;
}

@keyframes glowJitter {
  0%,
  100% {
    transform: translate(0, 0);
    opacity: 0.9;
  }
  25% {
    transform: translate(0px, -1px);
    opacity: 1;
  }
  50% {
    transform: translate(-1px, 1px);
    opacity: 0.97;
  }
  75% {
    transform: translate(1px, 1px);
    opacity: 0.87;
  }
}

/* Scanline Layers */
.scanline-layer {
  position: absolute;
  inset: 0;
  pointer-events: none;
  background: repeating-linear-gradient(
    to bottom,
    transparent,
    transparent 1px,
    rgba(0, 0, 0, 0.2) 1px,
    transparent 2px
  );
  opacity: 0.4;
  z-index: 100;
}

.scanline-layer-2 {
  position: absolute;
  top: -100%;
  left: 0;
  width: 100%;
  height: 200%;
  background: repeating-linear-gradient(
    to bottom,
    transparent 0px,
    rgba(156, 224, 169, 0.3) 1px,
    /* Using actual RGB values from --color-1 (#9ce0a9) */ transparent 1.1px,
    transparent 4px
  );
  opacity: 0.3;
  animation: scanlinesMove 4s linear infinite;
  z-index: 101;
}

@keyframes scanlinesMove {
  0% {
    transform: translate3d(0, 0, 0);
  }
  100% {
    transform: translate3d(0, 50%, 0);
  }
}

/****************
 * SOUND TOGGLE *
 ****************/

.switch-knob {
  transition: transform 0.1s cubic-bezier(0.19, 1, 0.22, 1);
  cursor: pointer;
}

.sound-toggle.on .switch-knob {
  transform: translateY(50%);
}

.sound-toggle.off .switch-knob {
  transform: translateY(-50%); /* knob at the top */
}


/*********************
 * PERSPECTIVE SETUP *
 *********************/

.page{
  perspective: var(--perspective-depth);
}

/* Page rotation */
.page__inner {
  backface-visibility: hidden;
  will-change: transform;
  transform-style: preserve-3d; 
}

/* Inner display rotation */
.depth-wrapper {
  will-change: perspective-origin, transform;
  transform-style: preserve-3d;
  perspective: var(--perspective-depth);
}


/**********************
 * BLINKING ANIMATION *
 **********************/

.blink-1 {
  animation: blink 1s steps(2) forwards infinite;
}

.blink-2 {
  animation: blink 1s steps(2) backwards infinite;
  animation-delay: 0.5s;
}

@keyframes blink {
  0% {
    opacity: 0.4;
  }
  100% {
    opacity: 1;
  }
}

/*****************
 * DEVICES ICONS *
 *****************/


.icon--devices__1{
  animation: blink 4s steps(2) forwards infinite;
}


.icon--devices__2{
  animation: blink 4s steps(2) forwards infinite;
  animation-delay: 1s;
}


.icon--devices__3{
  animation: blink 4s steps(2) forwards infinite;
  animation-delay: 2s;
}


/*****************
 * THRUSTER LAMP *
 *****************/

#thruster-lamp {
  box-shadow: 
    0 0 calc(2.5px + (var(--lamp-brightness) * 4px)) calc(1.5px + (var(--lamp-brightness) * 2px)) rgba(255,253,234,calc(0.8 * var(--lamp-brightness))),
    0 0 calc(5px + (var(--lamp-brightness) * 7.5px)) calc(2.5px + (var(--lamp-brightness) * 4px)) rgba(255,55,0,calc(0.7 * var(--lamp-brightness))),
    0 0 calc(10px + (var(--lamp-brightness) * 15px)) calc(5px + (var(--lamp-brightness) * 7.5px)) rgba(255,55,0,calc(0.5 * var(--lamp-brightness)));
  opacity: calc(0 + (var(--lamp-brightness) * 1));
  pointer-events: none;
  transition: box-shadow 0.15s ease-out, opacity 0.16s ease-out;
}


/**************************
 * VIEWS TOGGLE ANIMATION *
 **************************/


.home-content{
  transform-style: preserve-3d;    /* Maintain the 3D context for children */
}

.hub-grid__item{
  backface-visibility: hidden;
  transform: translateZ(0); /* Kickstarts the GPU for smoother transforms */
}


 /* Active view: fully visible, interactive, and with a smooth fade-in effect */
.view--active {
  opacity: 1;
  visibility: visible;
  pointer-events: auto;
  transition: opacity 0.3s ease;
  transform: translateZ(0); /* Ensure GPU acceleration */
}

/* Hidden view: fully transparent, non-interactive, yet still present in the DOM */
.view--hidden {
  opacity: 0;
  visibility: hidden;
  pointer-events: none;
  transition: opacity 0.3s ease;
}


/*****************
 * TUNNEL EFFECT *
 *****************/

:root {
  --anim-duration: 32s; /* Default, will be updated dynamically */
}

.viewport {
  position: fixed;
  inset: 0;
  overflow: hidden;
  z-index: 9999999;
  pointer-events: none;
}

/* Update keyframe animation */
@keyframes pullIn {
  0% {
    transform: translateZ(0px) scale(1);
    opacity: 0.6;
    filter: blur(0px);
  }
  10% {
    opacity: 1;
    filter: blur(0px);
  }
  60% {
    filter: blur(4px);
    opacity: 0.1;
  }
  100% {
    transform: translateZ(var(--max-depth)) scale(1.1);
    opacity: 0;
    filter: blur(40px);
  }
}

/* Apply animation duration */
.rectangle {
  animation: pullIn var(--anim-duration) linear infinite;
}



/******************
 * RESIZE OVERLAY *
 ******************/

.resize-overlay {
  z-index: 999999999; /* high z-index to appear on top of everything */
  pointer-events: none; /* allows clicks to pass through */
}

.resize-overlay--visible {
  opacity: 1;
}

.resize-overlay--hidden {
  opacity: 0;
}

.corner-line-wrapper.extruded-1 {
  animation: extrude-1 1s linear infinite;
}

.corner-line-wrapper.extruded-2 {
  animation: extrude-1 1s linear infinite;
  animation-delay: 0.5s;
}

@keyframes extrude-1 {
  0% {
    transform: translateZ(-50px);
    opacity: 0;
  }
  25% {
    transform: translateZ(-50px);
    opacity: 0;
  }
  100% {
    transform: translateZ(0px);
    opacity: 1;
  }
}

/*************************
 * ROBOT STYLING (SVG)    *
 *************************/

/* Robot body styles */
#robot-body polygon {
  stroke: var(--color-1);
  stroke-linecap: round;
  stroke-linejoin: round;
  fill: var(--background);
}

/* Robot lights */
#light-1,
#light-2 {
  fill: var(--color-1);
}

/* Robot speaker */
#speaker polyline {
  fill: var(--color-2);
}

/* Robot display dots */
#robot-display .robot-dot {
  fill: var(--color-4);
  transition: fill 35ms ease;
  will-change: fill;
  stroke: none;
}

#robot-display .robot-dot--eye,
#robot-display .robot-dot--mouth {
  fill: var(--color-1);
}

/* Add additional classes for active states as needed */
.robot-dot.active {
  fill: var(--color-1) !important;
}

/* Wall animation styles */
.wall {
  /* Default state is managed by inline style in JavaScript */
  transform: translateZ(calc(-1 * var(--wall-depth)));
  transition: transform 0s;
}

.wall-intro-animation {
  transform: translateZ(calc(-1 * var(--wall-depth))); /* End position */
  transition: transform 1s cubic-bezier(0.19, 1, 0.22, 1); /* Animation with ease-out */
}

/* Add a class to force no transition for initial setup */
.no-transition {
  transition: none !important;
}

/* Wall animation styles */

.wall-intro-animation {
  transform: translateZ(calc(-1 * var(--wall-depth))); /* End position */
  transition: transform 1s cubic-bezier(0.19, 1, 0.22, 1); /* Animation with ease-out */
}

/* Add a class to force no transition for initial setup */
.no-transition {
  transition: none !important;
}

/***********************
 * PULSATING LIGHT    *
 ***********************/

#light {
  animation: pulsateLight 5s ease-in-out infinite;
  will-change: filter; /* Optimize animation performance */
}

@keyframes pulsateLight {
  0%,
  100% {
    filter: brightness(50%);
  }
  50% {
    filter: brightness(60%);
  }
  75% {
    filter: brightness(30%);
  }
}


/* Glass video */
.glass-video {
  -webkit-mask: radial-gradient(circle, black 65%, rgba(0, 0, 0, 0.8) 75%, rgba(0, 0, 0, 0.5) 85%, transparent 95%);
  mask: radial-gradient(circle, black 65%, rgba(0, 0, 0, 0.8) 75%, rgba(0, 0, 0, 0.5) 85%, transparent 95%);
  animation: pulsateLight-Video 5s ease-in-out infinite;
  will-change: transform, filter; /* Add transform to optimize video movement */
  transform-origin: center center; /* Ensure rotation happens from the center */
  transition: none; /* Prevent conflicting with JS control */
}

@keyframes pulsateLight-Video {
  0%,
  100% {
    filter: brightness(50%);
  }
  50% {
    filter: brightness(60%);
  }
  75% {
    filter: brightness(30%);
  }
}



/*******************
 * PORTFOLIO CARDS *
 *******************/


.portfolio-card {
  position: relative;
  transform-style: preserve-3d;
}

/* Default state: no animation and hidden opacity */
.portfolio-card::before{
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  border: 2px solid currentColor;
  opacity: 0;
  pointer-events: none;
  transition: opacity 0.3s ease;
}

/* On hover: show and animate the border */
.portfolio-card:hover::before{
  opacity: 1;
  animation: pulse-border 0.5s linear infinite;
}


@keyframes pulse-border {
  0% {
    transform: translateZ(0);
    opacity: 0;
  }
  10% {
    transform: translateZ(10px);
    opacity: 1;
  }
  100% {
    transform: translateZ(200px);
    opacity: 0;
  }
}

/* Interference Effect for widgets */
@keyframes interferenceAnimation {
  0% {
    opacity: 1;
    transform: scale(1);
  }
  20% {
    opacity: 0.8;
    transform: scale(0.98);
  }
  40% {
    opacity: 1;
    transform: scale(1.02);
  }
  60% {
    opacity: 0.9;
    transform: scale(0.99);
  }
  80% {
    opacity: 1;
    transform: scale(1.01);
  }
  100% {
    opacity: 1;
    transform: scale(1);
  }
}

.widget-interference {
  animation: interferenceAnimation var(--interference-duration) steps(5, end) infinite;
  animation-delay: var(--interference-delay);
}



/********************************
 * SOUND CONTROL ICON ANIMATION *
 ********************************/


.sound-control__icon-wrapper {
  display: inline-block;
  animation: verticalMotion 0.5s infinite ease-in-out alternate;
}

@keyframes verticalMotion {
  from { transform: translateY(-2px); }
  to { transform: translateY(2px); }
}

.sound-control__icon {
  display: inline-block;
  animation: horizontalMotion 1s infinite ease-in-out alternate;
  transform-origin: center;
}

@keyframes horizontalMotion {
  from { transform: translateX(-2px) rotate(-2deg); }
  to { transform: translateX(2px) rotate(2deg); }
}