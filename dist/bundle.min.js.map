{
  "version": 3,
  "sources": ["../scripts/main.js", "../scripts/modules/browserTheme.js", "../scripts/modules/loader.js", "../scripts/modules/scrollTracker.js", "../scripts/modules/sounds.js", "../scripts/modules/buttonToggle.js", "../scripts/modules/resizeOverlay.js", "../scripts/modules/cursorTracker.js", "../scripts/modules/lightGrid.js", "../scripts/modules/dateDisplay.js", "../scripts/modules/marqueeContent.js", "../scripts/modules/londonClock.js", "../scripts/modules/robotAnimation.js", "../scripts/modules/processorAnimations.js", "../scripts/modules/diffusionText.js", "../scripts/modules/interference.js"],
  "sourcesContent": ["/**\n * Main initialization script for the website\n * \n * This module orchestrates the loading and initialization of all website components\n * following a specific sequence for optimal user experience.\n * \n * Modules and their responsibilities:\n * - browserTheme.js: Manages light/dark mode theme based on user preferences and system settings\n * - sounds.js: Handles sound system initialization, sound effects, and user audio preferences\n * - intro.js: Controls the website intro/loading sequence animation\n * - resizeOverlay.js: Shows an overlay during browser resize to prevent layout jumps\n * - lightGrid.js: Manages light grid animations and responsive behaviors\n * - dateDisplay.js: Displays and updates formatted date information\n * - marqueeContent.js: Handles scrolling marquee text animations\n * - londonClock.js: Renders and updates an analog clock showing London time\n * - flicker.js: Creates realistic flickering effects for UI elements\n * - robotAnimation.js: Controls the robot character animations and dialog system\n * - widgetEffects.js: Manages interactive effects for various UI widgets\n * - mousemonitors.js: Tracks mouse movement, speed and interaction metrics\n * - processorAnimations.js: Handles the multiple processor visualization animations\n * - diffusionText.js: Creates text animation that \"diffuses\" between multiple phrases with character transitions\n * - buttonToggle.js: Manages 3D button toggling with only one active at a time AND view switching \n * - widgetAnimations.js: Handles widget animations for view transitions\n * - viewToggle.js: DEPRECATED: Functionality moved to buttonToggle.js\n */\n\n/**\n * Utility to detect Webflow environments\n * Used to ensure compatibility with Webflow's preview/canvas mode\n */\nexport const webflowEnv = {\n  isPreviewMode: () => window.location.hostname.includes('canvas.webflow.com'),\n  isPublishedSite: () => window.location.hostname.includes('webflow.io'),\n  getSiteName: () => window.location.hostname.split('.')[0],\n  getAllowedDomains: () => ['.webflow.io', '.canvas.webflow.com']\n};\n\n// Import browser theme module - this module self-initializes on import\nimport { applyBrowserColors, prefersDarkMode } from './modules/browserTheme.js';\n\n// Correct import statement for loader.js - moved up for early parsing\nimport { initLoadingText, stopAnimation } from './modules/loader.js';\n\n// Import the buttonToggle module which now handles all view toggling\nimport { init3DButtons } from './modules/buttonToggle.js';\n\n// Import all other modules after browser theme\nimport { initSoundSystem, EVENTS, buttonSounds } from './modules/sounds.js';\nimport { initResizeOverlay } from './modules/resizeOverlay.js';\nimport { initcursorTracker } from './modules/cursorTracker.js'; \nimport { initLightGrid } from './modules/lightGrid.js';\nimport { initDateDisplay } from './modules/dateDisplay.js';\nimport { initMarqueeContent } from './modules/marqueeContent.js';\nimport { initLondonClock } from './modules/londonClock.js';\nimport { initRobot } from './modules/robotAnimation.js';\nimport { \n    initProcessorAnimation1, \n    initProcessorAnimation2,\n    initProcessorAnimation3,\n    initProcessorAnimation4 \n} from './modules/processorAnimations.js';\nimport { initDiffusionText } from './modules/diffusionText.js';\nimport { initInterference } from './modules/interference.js';\n\n// Start preloading button sounds immediately for instant availability\nbuttonSounds.preload().catch(err => console.warn('Early button sound preload failed:', err.toString()));\n\n\n\n/********************************\n * MAIN INITIALIZATION SEQUENCE *\n ********************************/\n\ndocument.addEventListener('DOMContentLoaded', async () => {\n    try {\n        // Call LightGrid initialization first\n        console.log('%c[main.js] Calling initLightGrid() EARLY in DOMContentLoaded', 'color: orange; font-weight: bold;');\n        initLightGrid();\n        console.log('%c[main.js] initLightGrid() EARLY call completed.', 'color: orange;');\n\n        // Initialize browser theme and loader text first.\n        console.log('Applying browser colors...');\n        applyBrowserColors('DOMContentLoaded');\n        console.log('Initializing loading text...');\n        initLoadingText();\n\n        // Add listener for system theme changes\n        prefersDarkMode.addEventListener(\"change\", () => applyBrowserColors('systemChange'));\n        \n        // STEP 1: PREPARATION & SOUND SYSTEM\n        //--------------------------------------\n        // Initialize buttonToggle first, which now handles all view toggling\n        console.log('Initializing button toggle system (includes view switching)');\n        init3DButtons();\n        \n        // Give Lottie more time to initialize properly before continuing\n        console.log('Waiting for Lottie animations to initialize...');\n        await new Promise(resolve => setTimeout(resolve, 100));\n        \n        // Initialize sound system and wait for user confirmation\n        await initSoundSystem();\n        await new Promise(resolve => {\n            window.addEventListener(EVENTS.SOUND_CHOICE_MADE, resolve, { once: true });\n        });\n        console.log('Sound system initialized');\n\n        // STEP 2: MODULE INITIALIZATION\n        //--------------------------------------\n        // Initialize tracking modules (cursor)\n        initcursorTracker(); // Keep cursor tracker for clicks and distance tracking\n        \n        // Initialize all other modules after sound choice is confirmed\n        initResizeOverlay(); \n        // initStarfieldThruster(); // Removed as it's archived\n        // init3DButtons already called above\n        \n        initDateDisplay();\n        initMarqueeContent();\n        initLondonClock();\n        initRobot();\n        initProcessorAnimation1();\n        initProcessorAnimation2();\n        initProcessorAnimation3();\n        initProcessorAnimation4();\n        initDiffusionText();\n        initInterference();\n\n        console.log('All modules initialized');\n\n        // STEP 3: UI REVEAL & INTERACTIONS\n        //--------------------------------------\n        // Button toggle handles showing the home view\n\n    } catch (error) {\n        console.error('Error in main initialization sequence:', error);\n    }\n});\n\nconsole.log(\"Webflow External Scripts initialized\");", "/**\n * @module browserTheme\n * Browser Theme Module\n * \n * Detects and applies browser-specific UI colors to match the native browser chrome\n * appearance in both light and dark modes, on desktop and mobile.\n * This helps create a seamless visual integration between the website and the browser interface.\n *\n * Features:\n * - Detects browser type (Chrome, Safari, Firefox, Edge, Opera, Brave, Arc - including mobile versions)\n * - Sets background color for in-page elements via CSS custom properties.\n * - Updates meta theme-color tag to match the browser UI, crucial for mobile browser chrome styling (title/status bars).\n * - Automatically responds to system theme changes (light/dark mode) when listener is attached by the consuming module.\n * \n * This module NO LONGER self-initializes. Initialization is handled by main.js.\n */\n\nconsole.log('Browser Theme Module: Script parsed');\n\nconst prefersDarkMode = window.matchMedia(\"(prefers-color-scheme: dark)\");\n\n// Presets for colors applied to --browser-color and meta theme-color\nconst COLOR_PRESETS = {\n    chrome: { light: \"#ffffff\", dark: \"#3c3c3c\" }, // Correct dark color\n    safari: { light: \"#f3f3f2\", dark: \"#242424\" },\n    firefox: { light: \"#f5f5f5\", dark: \"#2e2e2e\" },\n    edge: { light: \"#f3f2f1\", dark: \"#323130\" },\n    opera: { light: \"#fafafa\", dark: \"#3b3b3b\" },\n    brave: { light: \"#ffffff\", dark: \"#2d2d2d\" },\n    arc: { light: \"#e8e8e8\", dark: \"#292a2b\" }, // Assuming Arc has a distinct theme\n    default: { light: \"#ffffff\", dark: \"#1b1c1c\" } // Fallback dark color\n};\n\n// Presets for the hairline colors (for in-page elements)\nconst COLOR_LINE_PRESETS = {\n    chrome: { light: \"#e2e3e1\", dark: \"#444746\" },\n    safari: { light: \"#cdcdcc\", dark: \"#000000\" },\n    firefox: { light: \"#d4d4d2\", dark: \"#2d2d2d\" },\n    edge: { light: \"#e2e3e1\", dark: \"#444746\" },\n    opera: { light: \"#e2e3e1\", dark: \"#444746\" },\n    brave: { light: \"#e2e3e1\", dark: \"#444746\" },\n    arc: { light: \"#e2e3e1\", dark: \"#444746\" },\n    default: { light: \"#e2e3e1\", dark: \"#444746\" }\n};\n\n// Detect user's browser, including common mobile variants\nfunction detectBrowser() {\n    const ua = navigator.userAgent.toLowerCase();\n    let detected = \"default\";\n\n    if (navigator.brave && typeof navigator.brave.isBrave === 'function') {\n        detected = \"brave\";\n    } else if (ua.includes(\"arc/\") || ua.includes(\"arc-mobile\")) { // More specific Arc check; \"arc-mobile\" is a placeholder for potential mobile UA\n        detected = \"arc\";\n    } else if (ua.includes(\"edg/\") || ua.includes(\"edga/\") || ua.includes(\"edgios/\")) { // Edge (desktop), Edge Android (edga/), Edge iOS (edgios/)\n        detected = \"edge\";\n    } else if (ua.includes(\"opr/\") || ua.includes(\"opera\") || ua.includes(\"opt/\")) { // Opera (desktop/mobile), Opera Touch (opt/)\n        detected = \"opera\";\n    } else if (ua.includes(\"firefox/\") || ua.includes(\"fxios/\")) { // Firefox (desktop/Android), Firefox iOS (fxios/)\n        detected = \"firefox\";\n    }\n    // Chrome (and Chrome iOS - CriOS) must be checked after specific Chromium-based browsers\n    // as their UAs might also contain \"chrome\".\n    else if ((ua.includes(\"chrome/\") || ua.includes(\"crios/\")) &&\n             !(ua.includes(\"edg/\") || ua.includes(\"edga/\") || ua.includes(\"edgios/\")) && // Ensure not Edge\n             !(ua.includes(\"opr/\") || ua.includes(\"opt/\")) && // Ensure not Opera\n             !(navigator.brave && typeof navigator.brave.isBrave === 'function') && // Ensure not Brave\n             !(ua.includes(\"arc/\") || ua.includes(\"arc-mobile\"))) { // Ensure not Arc\n        detected = \"chrome\";\n    }\n    // Safari must be checked after Chrome/CriOS as other browser UAs (especially on iOS) contain \"safari\".\n    else if (ua.includes(\"safari/\") &&\n             !(ua.includes(\"chrome/\") || ua.includes(\"crios/\")) && // Ensure not Chrome/CriOS\n             !(ua.includes(\"chromium/\")) && // Ensure not generic Chromium\n             !(ua.includes(\"edg/\") || ua.includes(\"edga/\") || ua.includes(\"edgios/\")) && // Ensure not Edge\n             !(ua.includes(\"opr/\") || ua.includes(\"opt/\")) && // Ensure not Opera\n             !(ua.includes(\"fxios/\"))) { // Ensure not Firefox iOS (which also has Safari in UA)\n        detected = \"safari\";\n    }\n    // If still \"default\", it's a less common browser or one whose UA doesn't match known patterns.\n    // The COLOR_PRESETS.default will be used.\n    console.log(`Browser Theme Module: Detected browser as: ${detected}`);\n    return detected;\n}\n\n// Apply color settings based on detected browser & theme\nfunction applyBrowserColors(eventSource = \"initial\") {\n    console.log(`Browser Theme Module: applyBrowserColors called from ${eventSource}`);\n    const browser = detectBrowser();\n    const isDark = prefersDarkMode.matches;\n    const mode = isDark ? \"dark\" : \"light\";\n    console.log(`Browser Theme Module: Mode detected as: ${mode}`);\n\n    // Get color from preset\n    const browserPreset = COLOR_PRESETS[browser] || COLOR_PRESETS.default;\n    const linePreset = COLOR_LINE_PRESETS[browser] || COLOR_LINE_PRESETS.default;\n\n    const browserColor = browserPreset[mode];\n    const lineColor = linePreset[mode];\n\n    console.log(`Browser Theme Module: Selected browser color for ${browser} (${mode}): ${browserColor}`);\n    console.log(`Browser Theme Module: Selected line color for ${browser} (${mode}): ${lineColor}`);\n\n    // Apply CSS custom properties to the root element for in-page styling\n    document.documentElement.style.setProperty('--browser-color', browserColor, 'important');\n    document.documentElement.style.setProperty('--browser-line-color', lineColor, 'important');\n    console.log(`Browser Theme Module: Set --browser-color to ${browserColor} !important for in-page elements.`);\n    console.log(`Browser Theme Module: Set --browser-line-color to ${lineColor} !important for in-page elements.`);\n\n    // Update or create meta theme-color tag. This is crucial for styling the browser chrome on mobile.\n    let metaThemeColor = document.querySelector('meta[name=\"theme-color\"]');\n    if (!metaThemeColor) {\n        metaThemeColor = document.createElement('meta');\n        metaThemeColor.name = 'theme-color';\n        document.head.appendChild(metaThemeColor);\n        console.log('Browser Theme Module: Created meta theme-color tag.');\n    }\n    metaThemeColor.setAttribute('content', browserColor);\n    console.log(`Browser Theme Module: Updated meta theme-color to ${browserColor} for browser UI.`);\n}\n\n// --- Initialization REMOVED --- \n// All self-initialization logic, including direct calls to applyBrowserColors,\n// prefersDarkMode.addEventListener, and DOMContentLoaded listeners, has been removed.\n// main.js is now responsible for calling applyBrowserColors and setting up listeners.\n\nexport { applyBrowserColors, prefersDarkMode };\n", "/**\n * Loading Text Animation Module\n * \n * Machine-like text animation that simulates a computer processing various tasks.\n * Professional text for a design and technology-focused audience.\n * No styling is applied - uses styles from Webflow.\n */\n\n// Configuration with text groups and animation settings\nconst textAnimConfig = {\n  groups: [\n    {\n      title: \"Initialising\",\n      messages: [\n        \"Parsing vectors\",\n        \"Mounting components\",\n        \"Scanning viewport\",\n        \"Calibrating display\",\n        \"Mapping inputs\",\n        \"Checking resolution\",\n        \"Loading typefaces\"\n      ],\n      speed: 80 // Original: 140\n    },\n    {\n      title: \"Design System\",\n      messages: [\n        \"Setting constraints\",\n        \"Building grid\",\n        \"Parsing tokens\",\n        \"Optimising contrast\",\n        \"Loading variables\",\n        \"Applying spacing\",\n        \"Compiling themes\"\n      ],\n      speed: 80 // Original: 180\n    },\n    {\n      title: \"Interface\",\n      messages: [\n        \"Crafting surfaces\",\n        \"Rendering states\",\n        \"Syncing microcopy\",\n        \"Applying shadows\",\n        \"Testing flows\",\n        \"Mapping gestures\",\n        \"Checking modals\"\n      ],\n      speed: 120 // Original: 230\n    },\n    {\n      title: \"Experience\",\n      messages: [\n        \"Timing animations\",\n        \"Setting transitions\",\n        \"Refining feedback\",\n        \"Smoothing scroll\",\n        \"Calculating easing\",\n        \"Mapping journeys\",\n        \"Polishing details\"\n      ],\n      speed: 80 // Original: 160\n    },\n    {\n      title: \"Launch\",\n      messages: [\n        \"Final checks\",\n        \"Caching assets\",\n        \"Optimising layers\",\n        \"Preparing handoff\",\n        \"Ready for users\",\n        \"Interface live\",\n        \"System online\"\n      ],\n      speed: 40 // Original: 120\n    }\n  ]\n};\n\n// Module state\nlet textElement = null;\nlet currentGroupIndex = 0;\nlet currentMessageIndex = 0;\nlet activeTimer = null;\nlet isActive = false;\n\n/**\n * Updates text display with the next message\n */\nfunction updateText() {\n  if (!isActive || !textElement) return;\n  \n  clearTimeout(activeTimer);\n  \n  const group = textAnimConfig.groups[currentGroupIndex];\n  \n  // Check if we've completed messages for this group\n  if (currentMessageIndex >= group.messages.length) {\n    moveToNextGroup();\n    return;\n  }\n  \n  // Simply display the text without any indicators\n  const text = group.messages[currentMessageIndex];\n  textElement.textContent = text;\n  currentMessageIndex++;\n  \n  // Less randomness for more machine-like timing\n  const randomFactor = 0.9 + Math.random() * 0.2; // 0.9 to 1.1\n  const delay = group.speed * randomFactor;\n  activeTimer = setTimeout(updateText, delay);\n}\n\n/**\n * Moves to the next group of messages\n */\nfunction moveToNextGroup() {\n  currentGroupIndex++;\n  currentMessageIndex = 0;\n  \n  // Loop back to first group when complete\n  if (currentGroupIndex >= textAnimConfig.groups.length) {\n    currentGroupIndex = 0;\n  }\n  \n  // Show group title with a machine-like prefix\n  const group = textAnimConfig.groups[currentGroupIndex];\n  textElement.textContent = \"INIT: \" + group.title;\n  \n  // Shorter pause between groups for more machine-like feel\n  activeTimer = setTimeout(updateText, 200); // Original: 600\n}\n\n/**\n * Initialize the loading text animation\n * @param {string} elementId - ID of the text element to animate (default: 'loading-text')\n */\nexport function initLoadingText(elementId = 'loading-text') {\n  // Clean up any existing animation\n  stopAnimation();\n  \n  // Target the text element - no styling is applied\n  textElement = document.getElementById(elementId);\n  \n  if (!textElement) {\n    console.warn(`Loading text element with ID '${elementId}' not found`);\n    return false;\n  }\n  \n  // Reset state\n  currentGroupIndex = 0;\n  currentMessageIndex = 0;\n  isActive = true;\n  \n  // Start with system startup message\n  textElement.textContent = \"SYSTEM BOOT SEQUENCE INITIATED\";\n  \n  // Quick transition to first group\n  activeTimer = setTimeout(() => {\n    if (!isActive) return; // Check if animation was stopped before this timeout\n    textElement.textContent = \"INIT: \" + textAnimConfig.groups[0].title;\n    activeTimer = setTimeout(updateText, 200); // Original: 600\n  }, 267); // Original: 800\n  \n  // Stop animation when the page is fully loaded\n  const handlePageLoad = () => {\n    console.log('Loader: Page fully loaded, stopping animation.');\n    stopAnimation();\n    window.removeEventListener('load', handlePageLoad); // Clean up listener\n  };\n  window.addEventListener('load', handlePageLoad);\n\n  return true;\n}\n\n/**\n * Stop the animation\n */\nexport function stopAnimation() {\n  isActive = false;\n  clearTimeout(activeTimer);\n  if (textElement) {\n    textElement.textContent = '';\n  }\n}\n\nexport default { initLoadingText, stopAnimation };", "/**\n * @fileoverview Scroll Tracker Module - Tracks and normalizes scroll speed and acceleration\n * @module scrollTracker\n * @author Alexander Beck\n * \n * A module that provides scroll tracking functionality by monitoring wheel events and \n * calculating normalized speed and acceleration values. This creates a physics-based\n * scroll experience that can be consumed by other components.\n */\n\n// Simple event emitter for decoupled communication\nclass EventEmitter {\n  constructor() {\n    this.listeners = {};\n  }\n  on(event, fn) {\n    if (!this.listeners[event]) {\n      this.listeners[event] = [];\n    }\n    this.listeners[event].push(fn);\n  }\n  emit(event, ...args) {\n    if (this.listeners[event]) {\n      for (const fn of this.listeners[event]) {\n        fn(...args);\n      }\n    }\n  }\n}\n\n// Streamlined ScrollTracker: tracks normalized speed and acceleration from scroll events.\nclass ScrollTracker extends EventEmitter {\n  #config = {\n    scrollScalingFactor: 150,  // Higher value reduces sensitivity (was 100)\n    speedDecayRate: 1.5,       // Higher value increases speed decay (was 1)\n    accelerationDecayRate: 9,  // Higher value increases acceleration decay (was 6)\n    maxSpeed: 1.0              // Maximum normalized speed (0-1)\n  };\n\n  // State values (normalized 0 to 1).\n  #state = {\n    speed: 0,\n    acceleration: 0,\n    lastImpulse: 0  // Added to track the last impulse for reference\n  };\n\n  // Conversion factors and constants\n  #conversion = {\n    // Base measurement is pixels per second\n    pixelsPerSecond: 3000, // Maximum px/sec when speed = 1\n    \n    // Conversion constants\n    pixelsPerInch: 96, // Standard screen resolution (96 DPI)\n    inchesPerMile: 63360, // 1 mile = 63,360 inches\n    inchesPerKm: 39370.1, // 1 km = 39,370.1 inches\n    secondsPerHour: 3600 // 1 hour = 3,600 seconds\n  };\n\n  constructor() {\n    super();\n    this.init();\n  }\n  \n  init() {\n      // Throttle wheel events: batch deltaY and process once per animation frame\n      let wheelTicking = false;\n      let wheelDelta = 0;\n      window.addEventListener(\"wheel\", event => {\n        wheelDelta = event.deltaY;\n        if (!wheelTicking) {\n          wheelTicking = true;\n          requestAnimationFrame(() => {\n            this.onWheel({ deltaY: wheelDelta });\n            wheelTicking = false;\n          });\n        }\n      }, { passive: true });\n      requestAnimationFrame(this.update.bind(this));\n      \n      console.log('ScrollTracker initialized - listening for wheel events');\n  }\n  \n  // This method is called by native wheel events\n  onWheel(event) {\n    const delta = event.deltaY;\n    // Use raw impulse without capping and always positive\n    const rawImpulse = Math.abs(delta) / this.#config.scrollScalingFactor;\n    \n    // Apply smoothing to the impulse for a more gradual effect\n    // Note: we're storing the raw value for debugging\n    this.#state.lastImpulse = rawImpulse;\n    \n    // Apply additional dampening to the acceleration for smoother movement\n    this.#state.acceleration = rawImpulse * 0.85; // Reduce impact of each scroll event by 15%\n    \n    this.emit(\"scroll\", { \n      normalizedAcceleration: this.#state.acceleration, \n      normalizedSpeed: this.#state.speed,\n      lastImpulse: this.#state.lastImpulse \n    });\n  }\n  \n  update() {\n    const dt = 0.016; // ~60fps\n    \n    // Integrate acceleration to update speed with smoother ramping\n    const accelerationImpact = this.#state.acceleration * dt;\n    // Apply a more gradual acceleration curve for smoother starts\n    this.#state.speed += accelerationImpact * (1 - this.#state.speed * 0.5);\n    \n    // Cap speed at max value\n    this.#state.speed = Math.min(this.#state.speed, this.#config.maxSpeed);\n    // Ensure speed is never negative\n    this.#state.speed = Math.max(this.#state.speed, 0);\n    \n    // Apply friction decay to speed with improved dampening formula\n    // This provides stronger dampening at higher speeds\n    const dampFactor = 1 - dt * (this.#config.speedDecayRate * (1 + this.#state.speed));\n    this.#state.speed *= dampFactor;\n    \n    // Exponential decay on acceleration (higher value = faster decay)\n    this.#state.acceleration *= Math.exp(-this.#config.accelerationDecayRate * dt);\n    \n    // Calculate pixels per second first (our base measurement)\n    const pxps = this.#state.speed * this.#conversion.pixelsPerSecond;\n    \n    // Convert pixels per second to miles per hour\n    // (px/s) \u00F7 (px/in) \u00F7 (in/mi) \u00D7 (s/h) = mi/h\n    const mph = pxps / this.#conversion.pixelsPerInch / this.#conversion.inchesPerMile * this.#conversion.secondsPerHour;\n    \n    // Convert pixels per second to kilometers per hour\n    // (px/s) \u00F7 (px/in) \u00F7 (in/km) \u00D7 (s/h) = km/h\n    const kph = pxps / this.#conversion.pixelsPerInch / this.#conversion.inchesPerKm * this.#conversion.secondsPerHour;\n    \n    // Emit update event.\n    this.emit(\"normalizedUpdate\", { \n      normalizedSpeed: this.#state.speed, \n      normalizedAcceleration: this.#state.acceleration \n    });\n    \n    // Also emit a general update event with additional data for starfieldThruster\n    this.emit(\"update\", {\n      normalizedSpeed: this.#state.speed,\n      normalizedAcceleration: this.#state.acceleration,\n      velocityKMH: kph,\n      velocityMPH: mph,\n      pixelsPerSecond: pxps\n    });\n    \n    requestAnimationFrame(this.update.bind(this));\n  }\n  \n  formatSpeed(speed) {\n    // Cap speed at 999.99 before formatting\n    const cappedSpeed = Math.min(speed, 999.99);\n    // Format as 000.00 - pad with zeros as needed\n    return cappedSpeed.toFixed(2).padStart(6, '0');\n  }\n  \n  getNormalizedSpeed() {\n    return this.#state.speed;\n  }\n  \n  getNormalizedAcceleration() {\n    return this.#state.acceleration;\n  }\n  \n  // Updated methods to get real-world speeds\n  getMilesPerHour() {\n    const pxps = this.#state.speed * this.#conversion.pixelsPerSecond;\n    return pxps / this.#conversion.pixelsPerInch / this.#conversion.inchesPerMile * this.#conversion.secondsPerHour;\n  }\n  \n  getKilometersPerHour() {\n    const pxps = this.#state.speed * this.#conversion.pixelsPerSecond;\n    return pxps / this.#conversion.pixelsPerInch / this.#conversion.inchesPerKm * this.#conversion.secondsPerHour;\n  }\n\n  getPixelsPerSecond() {\n    return this.#state.speed * this.#conversion.pixelsPerSecond;\n  }\n  \n  // Add method to get current state values for debugging/display\n  getState() {\n    return {\n      speed: this.#state.speed,\n      acceleration: this.#state.acceleration,\n      lastImpulse: this.#state.lastImpulse,\n      velocityMS: this.getPixelsPerSecond() / this.#conversion.pixelsPerInch / 39.37, // m/s\n      velocityKMH: this.getKilometersPerHour()\n    };\n  }\n}\n\n// Add this function to provide configuration for the scroll tracker\nexport function getConfig() {\n    // Return full configuration including topSpeed\n    return { \n      topSpeed: 300,  // KMH\n      maxNormalizedSpeed: 1.0\n    };\n}\n\nconst scrollTracker = new ScrollTracker();\n// Attach getConfig to the instance so that scrollTracker.getConfig() becomes available\nscrollTracker.getConfig = getConfig;\n\nexport { scrollTracker };", "/**\n * Sound System Module\n * \n * This module manages an interactive sound system with ambient background audio and\n * a dynamic engine sound that responds to user scrolling behavior. It includes:\n * - Ambient sound with speed-based pitch modulation\n * - Engine/scrolly sounds with frequency and volume tied to scroll speed\n * - Auto-fade on user inactivity\n * - Sound toggle controls with UI interaction\n * \n * Dependencies: scrollTracker.js\n */\n\n// sounds.js\n// This script sets up a sound system that plays ambient noise and a low-frequency scrolly effect.\n// The modulation previously tied to mouse position has been replaced with defaults and scroll-based modulation.\n// Both sounds fade in when the user is active and fade out after inactivity.\n\nconsole.log(\"Sound system module initialized\");\n\n// Import the scroll tracker to use the spaceship velocity for modulation\nimport { scrollTracker } from './scrollTracker.js';\n\n// Create a custom event so that other parts of the app can listen for sound choice changes\nconst SOUND_CHOICE_MADE = 'soundChoiceMade';\n\n// Global Variables\nlet audioContext = null;\nlet ambientSource = null;\nlet engineSource = null; // Renamed from noiseSource for clarity\nlet isUserActive = false;\nlet idleTimeout = null;\nlet isSoundEnabled = false;\nlet animationFrameId = null;\nlet activityEventListeners = [];\n\n// Add visibility tracking variables\nlet isPageVisible = true;\nlet visibilityTimeout = null;\nlet visibilityFadeNode = null;\nlet masterGainNode = null; // Master gain node for all sounds\n\n// Global scroll speed (in km/h) updated by scrollTracker; used to adjust sound parameters\nlet scrollSpeed = 0;\nlet engineStarted = false; // Flag to track if engine has properly started\n\n// Configuration settings with optimized audio parameters\nconst CONFIG = {\n  fadeDuration: 1,      // Increased for smoother transitions\n  idleTimeout: 3000,      // 3 seconds idle timeout\n  visibilityTimeout: 2000, // 2 seconds before fading on visibility change\n  visibilityFadeDuration: 1.5, // Longer for smoother page visibility fades\n  ambient: {\n    url: \"https://becktothefuture.github.io/personal-website-25/assets/sounds/ambience.mp3\",\n    targetVolume: 1,\n    // Direct speed-based pitch shift only\n    minPitch: 0.8,\n    maxPitch: 4.6,\n    initialFade: 1.0,\n    loopOverlap: 0.5\n  },\n  engine: {\n    minVolume: 0.05,      \n    maxVolume: 1,      \n    speedResponseTime: 0.1, \n    speedThreshold: 300, \n    \n    // Sound characteristics - directly tied to speed\n    minFreq: 100,         // Minimum frequency at zero speed\n    maxFreq: 350,        // Maximum frequency at top speed\n    q: 30,               \n    \n    // Sub-bass settings - directly tied to speed\n    subFreq: 160,         // scrolly frequency - lowered for deeper sound\n    minSubGain: 10,        // Increased minimum sub gain\n    maxSubGain: 160,       // Increased maximum sub gain\n    rampTime: 0.02,       // Shortened ramp time for quicker response\n    subQ: 100             // Increased Q for a more resonant scrolly\n  },\n  robotSpeech: {\n    enabled: true,\n    volume: 0.15,\n    baseFrequency: 400,\n    vowelModifier: 1,\n    consonantModifier: 0.5,\n    soundDuration: 30, // ms\n    characterMappings: {\n        vowels: new Set(\"AEIOUaeiou\"),\n        bilabial: new Set(\"MBPmbp\"),\n        nasals: new Set(\"Nn\"),\n        sibilants: new Set(\"SZszCcJj\"),\n        dentals: new Set(\"TDtd\"),\n        pauses: new Set(\",.;:!?-\")\n    }\n  },\n  // Add intro typing sound configuration\n  introTyping: {\n    enabled: true,\n    volume: 0.04,\n    baseFrequency: 700, // Higher frequency than robot speech\n    vowelModifier: 1,\n    consonantModifier: 1,\n    soundDuration: 25, // ms - slightly shorter than robot speech\n    characterMappings: {\n      // Reuse the same mappings as robot speech\n      vowels: new Set(\"AEIOUaeiou\"),\n      bilabial: new Set(\"MBPmbp\"),\n      nasals: new Set(\"Nn\"),\n      sibilants: new Set(\"SZszCcJj\"),\n      dentals: new Set(\"TDtd\"),\n      pauses: new Set(\",.;:!?-\")\n    }\n  },\n  // Button sounds configuration\n  buttonSounds: {\n    enabled: true,\n    volume: 0.5,\n    hoverCooldown: 150, // ms between hover sounds to prevent spamming\n    urls: {\n      hover: \"https://becktothefuture.github.io/personal-website-25/assets/sounds/rollover.mp3\",\n      press: \"https://becktothefuture.github.io/personal-website-25/assets/sounds/press.mp3\",\n      confirm: \"https://becktothefuture.github.io/personal-website-25/assets/sounds/confirm.mp3\"\n    }\n  },\n  // Enhanced fade control to prevent clicks and pops\n  fadeCurve: 'exponential', // 'linear' or 'exponential'\n  antiPopFilterFreq: 30,    // Very low filter to remove DC offsets\n  fadeInStages: [\n    { target: 0.01, duration: 0.1 }, // Quick linear ramp to small value\n    { target: 1.0, duration: 0.9 }   // Then exponential ramp to full value\n  ],\n  fadeOutStages: [\n    { target: 0.1, duration: 0.8 },  // Exponential ramp down to low value\n    { target: 0.001, duration: 0.2 } // Linear ramp to near zero\n  ]\n};\n\n// UI elements are now optional since we removed the controls from the DOM.\nlet soundToggle = document.querySelector('.sound-toggle');\nlet soundToggleKnob = soundToggle ? soundToggle.querySelector('.sound-toggle__knob') : null;\nlet soundToggleLight = soundToggleKnob ? soundToggleKnob.querySelector('.knob-light') : null;\n\n// Add these variables for robot speech at the top with other global variables\nlet robotSpeechEnabled = CONFIG.robotSpeech.enabled;\nlet robotToggleCallback = null;\nlet audioInitialized = false;\n\n// Add these variables for button sounds\nlet buttonSoundBuffers = {\n  hover: null,\n  press: null,\n  confirm: null\n};\nlet lastHoverSound = 0; // Timestamp to throttle hover sounds\nlet buttonSoundsLoaded = false;\nlet buttonSoundsLoading = false;\n\n// Add this to the global variables\nlet introTypingEnabled = CONFIG.introTyping.enabled;\n\n// Global flag for all sound types to check before playing\nlet allSoundsActive = true;\n\n// ----------------------------------------------------------------------------------------------------\n// HELPER FUNCTIONS\n// ----------------------------------------------------------------------------------------------------\n\n/**\n * Creates an enhanced fade for smoother transitions without pops.\n * @param {AudioNode} node - The audio node to apply the fade to.\n * @param {number} targetValue - The target volume value.\n * @param {number} duration - The duration of the fade in seconds.\n * @param {string} type - Type of fade ('in' or 'out')\n */\nfunction createEnhancedFade(node, targetValue, duration = CONFIG.fadeDuration, type = 'in') {\n  if (!node || !audioContext) return;\n  \n  const now = audioContext.currentTime;\n  node.gain.cancelScheduledValues(now);\n  \n  // Get current value, avoiding zero\n  const currentValue = node.gain.value || 0.001;\n  node.gain.setValueAtTime(currentValue, now);\n  \n  if (type === 'in' && targetValue > currentValue) {\n    // Fade in: Two-stage approach for smoother start\n    // First a quick linear ramp to a small value\n    const smallValue = 0.01;\n    const initialRamp = duration * 0.1; // First 10% of the duration\n    \n    node.gain.linearRampToValueAtTime(smallValue, now + initialRamp);\n    \n    // Then exponential ramp to target\n    if (targetValue >= 0.01) {\n      node.gain.exponentialRampToValueAtTime(targetValue, now + duration);\n    } else {\n      node.gain.linearRampToValueAtTime(targetValue, now + duration);\n    }\n  } else if (type === 'out' && targetValue < currentValue) {\n    // Fade out: Also two-stage but weighted differently\n    // First exponential down to a small value\n    const smallValue = 0.01;\n    const mainRamp = duration * 0.8; // First 80% of the duration\n    \n    if (currentValue >= 0.01) {\n      node.gain.exponentialRampToValueAtTime(smallValue, now + mainRamp);\n    } else {\n      node.gain.linearRampToValueAtTime(smallValue, now + mainRamp);\n    }\n    \n    // Then linear to target (near zero)\n    const actualTarget = Math.max(targetValue, 0.0001); // Never exactly zero\n    node.gain.linearRampToValueAtTime(actualTarget, now + duration);\n    \n    // If truly silent is needed, schedule a direct set after ramp completes\n    if (targetValue === 0) {\n      node.gain.setValueAtTime(0, now + duration + 0.02);\n    }\n  } else {\n    // Simple case when direction doesn't match expected or values are equal\n    if (currentValue > 0.01 && targetValue > 0.01) {\n      // Both values non-zero, safe to use exponential\n      node.gain.exponentialRampToValueAtTime(targetValue, now + duration);\n    } else {\n      // Near zero involved, use linear\n      node.gain.linearRampToValueAtTime(targetValue, now + duration);\n    }\n  }\n}\n\n// Replace createFadeNode with the enhanced version\nfunction createFadeNode(node, targetValue, duration = CONFIG.fadeDuration) {\n  const type = targetValue > node.gain.value ? 'in' : 'out';\n  createEnhancedFade(node, targetValue, duration, type);\n}\n\n// ----------------------------------------------------------------------------------------------------\n// AUDIO CONTEXT MANAGEMENT\n// ----------------------------------------------------------------------------------------------------\n\n/**\n * Creates and returns the AudioContext.\n * @returns {AudioContext} - The AudioContext object.\n */\nasync function createAudioContext() {\n  try {\n    if (!audioContext) {\n      audioContext = new (window.AudioContext || window.webkitAudioContext)();\n      audioContext.suspend();\n      \n      // Create master gain node for all sounds\n      masterGainNode = audioContext.createGain();\n      masterGainNode.gain.setValueAtTime(1, audioContext.currentTime);\n      masterGainNode.connect(audioContext.destination);\n    }\n    return audioContext;\n  } catch (error) {\n    console.error(\"Failed to create audio context:\", error);\n    return null;\n  }\n}\n\n// ----------------------------------------------------------------------------------------------------\n// VISIBILITY CHANGE HANDLING\n// ----------------------------------------------------------------------------------------------------\n\n/**\n * Sets up page visibility tracking to fade sounds when window is inactive\n */\nfunction setupVisibilityTracking() {\n  // Create a dedicated gain node for visibility-based fading\n  if (audioContext && !visibilityFadeNode) {\n    visibilityFadeNode = audioContext.createGain();\n    visibilityFadeNode.gain.setValueAtTime(1, audioContext.currentTime);\n    \n    // Insert between master gain and destination\n    if (masterGainNode) {\n      masterGainNode.disconnect();\n      masterGainNode.connect(visibilityFadeNode);\n      visibilityFadeNode.connect(audioContext.destination);\n    }\n  }\n\n  // Use the Page Visibility API to detect when the page is hidden/visible\n  document.addEventListener('visibilitychange', handleVisibilityChange);\n  \n  // Strengthen window blur/focus detection for cross-browser compatibility\n  window.addEventListener('blur', () => {\n    console.log(\"Window blur detected - preparing to fade out sounds\");\n    handlePageHidden();\n  });\n  \n  window.addEventListener('focus', () => {\n    console.log(\"Window focus detected - restoring sounds\");\n    handlePageVisible();\n  });\n  \n  // Additional event for tab visibility\n  document.addEventListener('pagehide', handlePageHidden);\n  document.addEventListener('pageshow', handlePageVisible);\n}\n\n/**\n * Handles visibility change events\n */\nfunction handleVisibilityChange() {\n  if (document.visibilityState === 'hidden') {\n    console.log(\"Visibility API reports page hidden\");\n    handlePageHidden();\n  } else if (document.visibilityState === 'visible') {\n    console.log(\"Visibility API reports page visible\");\n    handlePageVisible();\n  }\n}\n\n/**\n * Handles page becoming hidden - fade out after delay\n */\nfunction handlePageHidden() {\n    // Clear any existing timeout to prevent race conditions\n    clearTimeout(visibilityTimeout);\n    \n    // Wait 2 seconds before fading out\n    visibilityTimeout = setTimeout(() => {\n        isPageVisible = false;\n        allSoundsActive = false; // Disable ALL sounds when page hidden\n        console.log(\"Fading out all audio due to page inactivity\");\n        \n        if (visibilityFadeNode && audioContext) {\n            // Enhanced super-smooth fade out to eliminate clicks\n            const now = audioContext.currentTime;\n            const currentGain = visibilityFadeNode.gain.value;\n            \n            // Cancel any scheduled values first\n            visibilityFadeNode.gain.cancelScheduledValues(now);\n            \n            // Start from current value\n            visibilityFadeNode.gain.setValueAtTime(currentGain, now);\n            \n            // Very gradual multi-stage fade out to prevent clicks\n            if (currentGain > 0.1) {\n                // First stage - exponential ramp to medium-low value\n                visibilityFadeNode.gain.exponentialRampToValueAtTime(0.1, now + CONFIG.visibilityFadeDuration * 0.7);\n                \n                // Second stage - linear ramp to very low but non-zero value\n                visibilityFadeNode.gain.linearRampToValueAtTime(0.001, now + CONFIG.visibilityFadeDuration);\n                \n                // Final stage - explicitly set to zero after the fade is complete\n                visibilityFadeNode.gain.setValueAtTime(0, now + CONFIG.visibilityFadeDuration + 0.1);\n            } else {\n                // Already low, just do a simple linear ramp to zero\n                visibilityFadeNode.gain.linearRampToValueAtTime(0.001, now + CONFIG.visibilityFadeDuration * 0.5);\n                visibilityFadeNode.gain.setValueAtTime(0, now + CONFIG.visibilityFadeDuration * 0.5 + 0.1);\n            }\n            \n            // After fade complete, suspend the audio context to save resources\n            setTimeout(() => {\n                if (!isPageVisible && audioContext && audioContext.state === 'running') {\n                    audioContext.suspend().catch(err => console.warn(\"Could not suspend audio context:\", err));\n                }\n            }, CONFIG.visibilityFadeDuration * 1000);\n        }\n\n        // Save previous sound states for restoration\n        if (visibilityFadeNode) {\n            visibilityFadeNode._robotSpeechWasEnabled = robotSpeechEnabled;\n            visibilityFadeNode._introTypingWasEnabled = introTypingEnabled;\n            \n            // Disable all specific sound types\n            robotSpeechEnabled = false;\n            introTypingEnabled = false;\n        }\n    }, CONFIG.visibilityTimeout);\n}\n\n/**\n * Handles page becoming visible - fade in immediately\n */\nfunction handlePageVisible() {\n    clearTimeout(visibilityTimeout);\n    isPageVisible = true;\n    allSoundsActive = true; // Re-enable ALL sounds when page visible\n  \n    // Restore sound states if they were enabled before\n    if (visibilityFadeNode) {\n        if (visibilityFadeNode._robotSpeechWasEnabled) {\n            robotSpeechEnabled = visibilityFadeNode._robotSpeechWasEnabled;\n            delete visibilityFadeNode._robotSpeechWasEnabled;\n        }\n        \n        if (visibilityFadeNode._introTypingWasEnabled) {\n            introTypingEnabled = visibilityFadeNode._introTypingWasEnabled;\n            delete visibilityFadeNode._introTypingWasEnabled;\n        }\n    }\n  \n    if (visibilityFadeNode && audioContext) {\n    // Resume the audio context first if needed\n    if (audioContext.state === 'suspended' && isSoundEnabled) {\n      audioContext.resume().catch(err => console.warn(\"Could not resume audio context:\", err));\n    }\n    \n    // Enhanced smooth fade in with multi-stage approach\n    const now = audioContext.currentTime;\n    \n    // Cancel any scheduled values first\n    visibilityFadeNode.gain.cancelScheduledValues(now);\n    \n    // Start from current value (which may be 0)\n    const currentGain = visibilityFadeNode.gain.value || 0;\n    visibilityFadeNode.gain.setValueAtTime(currentGain, now);\n    \n    if (currentGain === 0) {\n      // If starting from zero, use a multi-stage approach\n      \n      // Step 1: First a tiny non-zero value to avoid clicks\n      visibilityFadeNode.gain.setValueAtTime(0.0001, now);\n      \n      // Step 2: Linear ramp to small value\n      visibilityFadeNode.gain.linearRampToValueAtTime(0.01, now + 0.1);\n      \n      // Step 3: Exponential ramp to full value\n      visibilityFadeNode.gain.exponentialRampToValueAtTime(1.0, now + CONFIG.visibilityFadeDuration * 0.5);\n    } else if (currentGain < 0.01) {\n      // Starting from very low (but non-zero)\n      \n      // Step 1: Linear ramp to small, safe value for exponential\n      visibilityFadeNode.gain.linearRampToValueAtTime(0.01, now + 0.1);\n      \n      // Step 2: Exponential ramp to full\n      visibilityFadeNode.gain.exponentialRampToValueAtTime(1.0, now + CONFIG.visibilityFadeDuration * 0.5);\n    } else {\n      // Starting from high enough to use exponential directly\n      visibilityFadeNode.gain.exponentialRampToValueAtTime(1.0, now + CONFIG.visibilityFadeDuration * 0.3);\n    }\n  }\n}\n\n// ----------------------------------------------------------------------------------------------------\n// AUDIO SETUP FUNCTIONS\n// ----------------------------------------------------------------------------------------------------\n\n/**\n * Sets up the ambient audio track with anti-crackling measures.\n * @returns {object} - An object containing the audio source, gain node, and other audio processing nodes.\n */\nasync function setupAmbient() {\n  if (!audioContext) return null;\n  try {\n    const response = await fetch(CONFIG.ambient.url);\n    if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\n    const arrayBuffer = await response.arrayBuffer();\n    const buffer = await audioContext.decodeAudioData(arrayBuffer);\n\n    // Create a gain node for volume control with initial volume at 0\n    const gainNode = audioContext.createGain();\n    gainNode.gain.setValueAtTime(0, audioContext.currentTime);\n    \n    // Create a gain node specifically for fade in/out to prevent clicks\n    const antiPopNode = audioContext.createGain();\n    antiPopNode.gain.setValueAtTime(0, audioContext.currentTime);\n    \n    // Add a compressor to prevent clipping and reduce pops\n    const compressor = audioContext.createDynamicsCompressor();\n    compressor.threshold.value = -20;\n    compressor.knee.value = 10;\n    compressor.ratio.value = 4;\n    compressor.attack.value = 0.005;\n    compressor.release.value = 0.1;\n    \n    // Add a lowpass filter with a gentle slope to smooth transitions\n    const smoothingFilter = audioContext.createBiquadFilter();\n    smoothingFilter.type = 'lowpass';\n    smoothingFilter.frequency.value = 18000; // Just below Nyquist\n    smoothingFilter.Q.value = 0.5; // Gentle slope\n    \n    // Add a DC filter to remove ultra-low frequencies that can cause pops\n    const dcFilter = audioContext.createBiquadFilter();\n    dcFilter.type = 'highpass';\n    dcFilter.frequency.value = CONFIG.antiPopFilterFreq;\n    dcFilter.Q.value = 0.7;\n    \n    // Create source and connect nodes\n    const source = audioContext.createBufferSource();\n    source.buffer = buffer;\n    source.loop = true;\n    \n    // Modified connection chain\n    source.connect(antiPopNode);\n    antiPopNode.connect(dcFilter);  // Add DC filter before smoothing filter\n    dcFilter.connect(smoothingFilter);\n    smoothingFilter.connect(gainNode);\n    gainNode.connect(compressor);\n    \n    // Connect to master gain instead of directly to destination\n    compressor.connect(masterGainNode || audioContext.destination);\n    \n    // More gradual startup sequence\n    source.start(0);\n    \n    // Multi-stage start for smoother beginning\n    const now = audioContext.currentTime;\n    \n    // Start with silence\n    antiPopNode.gain.setValueAtTime(0, now);\n    \n    // Very tiny linear ramp to near-zero (prevents initial click)\n    antiPopNode.gain.linearRampToValueAtTime(0.001, now + 0.05);\n    \n    // Small linear ramp to minimal value\n    antiPopNode.gain.linearRampToValueAtTime(0.01, now + 0.1);\n    \n    // Finally exponential ramp to full volume\n    antiPopNode.gain.exponentialRampToValueAtTime(1.0, now + CONFIG.ambient.initialFade);\n\n    return { source, gainNode, antiPopNode, compressor, smoothingFilter, dcFilter };\n  } catch (error) {\n    console.error(\"Ambient setup failed:\", error);\n    const errorMsg = document.createElement('div');\n    errorMsg.style.cssText = \"position:fixed;bottom:10px;left:10px;background:rgba(255,0,0,0.7);color:white;padding:10px;z-index:9999;\";\n    errorMsg.textContent = `Audio error: ${error.message}`;\n    document.body.appendChild(errorMsg);\n    return null;\n  }\n}\n\n/**\n * Sets up the engine sound with anti-crackling measures.\n * @returns {object} - An object containing the audio source, filter, gain node, and other audio processing nodes.\n */\nfunction setupEngineSound() {\n  if (!audioContext) return null;\n  try {\n    // Create a larger buffer size for smoother noise\n    const bufferSize = 4 * audioContext.sampleRate;\n    const noiseBuffer = audioContext.createBuffer(2, bufferSize, audioContext.sampleRate);\n    \n    // Generate improved pink noise for more realistic engine sound\n    for (let channel = 0; channel < 2; channel++) {\n      const output = noiseBuffer.getChannelData(channel);\n      \n      // Pink noise with better low frequency response\n      let b0 = 0, b1 = 0, b2 = 0, b3 = 0, b4 = 0, b5 = 0;\n      for (let i = 0; i < bufferSize; i++) {\n        // Generate white noise\n        const white = Math.random() * 2 - 1;\n        \n        // Pink filter (Paul Kellet's refined method)\n        b0 = 0.99886 * b0 + white * 0.0555179;\n        b1 = 0.99332 * b1 + white * 0.0750759;\n        b2 = 0.96900 * b2 + white * 0.1538520;\n        b3 = 0.86650 * b3 + white * 0.3104856;\n        b4 = 0.55000 * b4 + white * 0.5329522;\n        b5 = -0.7616 * b5 - white * 0.0168980;\n        \n        // Mix pink noise components, then amplify\n        output[i] = (b0 + b1 + b2 + b3 + b4 + b5) * 0.5;\n      }\n    }\n\n    // Create the audio processing chain\n    const source = audioContext.createBufferSource();\n    const lowpassFilter = audioContext.createBiquadFilter();\n    const gainNode = audioContext.createGain();\n    const antiPopNode = audioContext.createGain();\n    \n    // Setup the main filter\n    lowpassFilter.type = 'lowpass';\n    \n    // Use midpoint between minFreq and maxFreq as the default engine frequency\n    const defaultFreq = (CONFIG.engine.minFreq + CONFIG.engine.maxFreq) / 2;\n\n    lowpassFilter.frequency.value = defaultFreq;\n    lowpassFilter.Q.value = CONFIG.engine.q;\n    \n    // Add a second filter for enhanced sub-bass\n    const subBassFilter = audioContext.createBiquadFilter();\n    subBassFilter.type = 'lowshelf';\n    subBassFilter.frequency.value = CONFIG.engine.subFreq;\n    subBassFilter.gain.value = CONFIG.engine.minSubGain;\n    // Add Q value for resonance\n    subBassFilter.Q.value = CONFIG.engine.subQ;\n    \n    // Add a bandpass filter for engine characteristics\n    const bandpassFilter = audioContext.createBiquadFilter();\n    bandpassFilter.type = 'bandpass';\n    bandpassFilter.frequency.value = defaultFreq * 1.5;\n    bandpassFilter.Q.value = 1.5;\n    \n    // Add compressor for dynamics control and anti-pop\n    const compressor = audioContext.createDynamicsCompressor();\n    compressor.threshold.value = -24;\n    compressor.knee.value = 10;\n    compressor.ratio.value = 4;\n    compressor.attack.value = 0.01; \n    compressor.release.value = 0.1;\n    \n    // Create a stereo panner and wave shaper for distortion\n    const panner = audioContext.createStereoPanner();\n    panner.pan.value = 0;\n    \n    // Add a DC filter to remove ultra-low frequencies that can cause pops\n    const dcFilter = audioContext.createBiquadFilter();\n    dcFilter.type = 'highpass';\n    dcFilter.frequency.value = CONFIG.antiPopFilterFreq;\n    dcFilter.Q.value = 0.7;\n    \n    // Connect the processing chain\n    source.buffer = noiseBuffer;\n    source.loop = true;\n    \n    // Modified connection path\n    source.connect(antiPopNode);\n    antiPopNode.connect(dcFilter);  // Add DC filter\n    dcFilter.connect(lowpassFilter);\n    lowpassFilter.connect(bandpassFilter);    \n    bandpassFilter.connect(subBassFilter);\n    subBassFilter.connect(gainNode);\n    gainNode.connect(compressor);\n    compressor.connect(panner);\n    panner.connect(masterGainNode || audioContext.destination);\n    \n    // Initialize all gains to near-zero (not exact zero to avoid clicks)\n    gainNode.gain.setValueAtTime(0.001, audioContext.currentTime);\n    antiPopNode.gain.setValueAtTime(0.001, audioContext.currentTime);\n    \n    // Extra-smooth startup\n    const now = audioContext.currentTime;\n    source.start(0);\n    \n    // More gradual and controlled startup sequence\n    const startDelay = 0.5; // Wait a moment before any sound\n    antiPopNode.gain.setValueAtTime(0.001, now);\n    \n    // First a tiny step up (prevents the click from absolute zero)\n    antiPopNode.gain.linearRampToValueAtTime(0.0001, now + 0.05);\n    \n    // Multi-stage ramp for smoother startup\n    antiPopNode.gain.linearRampToValueAtTime(0.001, now + 0.2);\n    antiPopNode.gain.linearRampToValueAtTime(0.01, now + startDelay);\n    antiPopNode.gain.exponentialRampToValueAtTime(1.0, now + startDelay + 1.0);\n    \n    // Wait for proper engine startup before allowing modulation\n    setTimeout(() => {\n      engineStarted = true;\n    }, 1500);\n\n    return {\n      source,\n      filter: lowpassFilter,\n      bandpassFilter,\n      subBassFilter,\n      gainNode,\n      antiPopNode,\n      compressor,\n      panner,\n      dcFilter\n    };\n  } catch (error) {\n    console.error(\"Engine sound setup failed:\", error);\n    return null;\n  }\n}\n\n// ----------------------------------------------------------------------------------------------------\n// ACTIVITY HANDLER\n// ----------------------------------------------------------------------------------------------------\n\n/**\n * Handles user activity and fades sounds in or out based on activity.\n */\nfunction handleActivity() {\n  if (!isSoundEnabled || !audioContext) return;\n  if (!ambientSource || !engineSource) return;\n\n  // Clear existing timeout\n  if (idleTimeout) {\n    clearTimeout(idleTimeout);\n    idleTimeout = null;\n  }\n  \n  // If not active, fade in sounds gradually\n  if (!isUserActive) {\n    isUserActive = true;\n    \n    const now = audioContext.currentTime;\n    \n    // Fade in ambient sound\n    ambientSource.gainNode.gain.cancelScheduledValues(now);\n    ambientSource.gainNode.gain.setValueAtTime(ambientSource.gainNode.gain.value || 0.001, now);\n    ambientSource.gainNode.gain.exponentialRampToValueAtTime(CONFIG.ambient.targetVolume, now + CONFIG.fadeDuration);\n    \n    // Fade in engine to appropriate level based on current speed\n    if (engineStarted) {\n      const targetVolume = getEngineVolumeForSpeed(scrollSpeed);\n      engineSource.gainNode.gain.cancelScheduledValues(now);\n      engineSource.gainNode.gain.setValueAtTime(engineSource.gainNode.gain.value || 0.001, now);\n      engineSource.gainNode.gain.exponentialRampToValueAtTime(targetVolume, now + CONFIG.fadeDuration);\n    }\n  }\n  \n  // Set timeout for inactivity with gradual fade\n  idleTimeout = setTimeout(() => {\n    isUserActive = false;\n    \n    if (ambientSource && engineSource) {\n      const now = audioContext.currentTime;\n      const fadeTo = 0.001;\n      const fadeOutDuration = CONFIG.fadeDuration * 2; // Longer fade-out for smoother transition\n      \n      // Ambient fade out\n      ambientSource.gainNode.gain.cancelScheduledValues(now);\n      ambientSource.gainNode.gain.setValueAtTime(ambientSource.gainNode.gain.value, now);\n      ambientSource.gainNode.gain.exponentialRampToValueAtTime(fadeTo, now + fadeOutDuration);\n      ambientSource.gainNode.gain.setValueAtTime(0, now + fadeOutDuration + 0.01);\n      \n      // Engine fade out\n      engineSource.gainNode.gain.cancelScheduledValues(now);\n      engineSource.gainNode.gain.setValueAtTime(engineSource.gainNode.gain.value, now);\n      engineSource.gainNode.gain.exponentialRampToValueAtTime(fadeTo, now + fadeOutDuration * 0.7); // Slightly faster\n      engineSource.gainNode.gain.setValueAtTime(0, now + fadeOutDuration + 0.01);\n    }\n  }, CONFIG.idleTimeout);\n}\n\n// ----------------------------------------------------------------------------------------------------\n// SOUND PARAMETER UPDATES\n// ----------------------------------------------------------------------------------------------------\n\n/**\n * Calculates the engine volume based on the current speed.\n * @param {number} speed - The current speed of the spaceship.\n * @returns {number} - The calculated engine volume.\n */\nfunction getEngineVolumeForSpeed(speed) {\n  const speedRatio = Math.min(Math.max(speed, 0) / CONFIG.engine.speedThreshold, 1.0);\n  return CONFIG.engine.minVolume + (speedRatio * (CONFIG.engine.maxVolume - CONFIG.engine.minVolume));\n}\n\n/**\n * Updates the sound parameters based on the current speed.\n * @param {number} timestamp - The current timestamp.\n */\nfunction updateSoundParameters() {\n  if (!ambientSource || !engineSource || !audioContext || !isSoundEnabled || !engineStarted) {\n    animationFrameId = requestAnimationFrame(updateSoundParameters);\n    return;\n  }\n  // Ensure scrollTracker.getConfig is defined; if not, use default values.\n  let topSpeed = 300; // Default value\n  if (typeof scrollTracker.getConfig === 'function') {\n    try {\n      topSpeed = scrollTracker.getConfig().topSpeed;\n    } catch (error) {\n      console.warn(\"Error accessing scrollTracker.getConfig().topSpeed:\", error);\n      // Continue with default value\n    }\n  } else {\n    console.warn(\"scrollTracker.getConfig is not a function, using default topSpeed value\");\n  }\n  const speedRatio = Math.min(Math.max(scrollSpeed, 0) / topSpeed, 1.0);\n  const timeInSec = audioContext.currentTime;\n  \n  const ambientPitch = CONFIG.ambient.minPitch + (speedRatio * (CONFIG.ambient.maxPitch - CONFIG.ambient.minPitch));\n  ambientSource.source.playbackRate.setTargetAtTime(\n    ambientPitch,\n    timeInSec,\n    CONFIG.engine.rampTime\n  );\n  \n  if (isUserActive) {\n    const engineVolume = CONFIG.engine.minVolume + (speedRatio * (CONFIG.engine.maxVolume - CONFIG.engine.minVolume));\n    const filterFreq = CONFIG.engine.minFreq + (speedRatio * (CONFIG.engine.maxFreq - CONFIG.engine.minFreq));\n    const subGain = CONFIG.engine.minSubGain + (speedRatio * (CONFIG.engine.maxSubGain - CONFIG.engine.minSubGain));\n    \n    engineSource.gainNode.gain.setTargetAtTime(engineVolume, timeInSec, CONFIG.engine.speedResponseTime);\n    engineSource.filter.frequency.setTargetAtTime(filterFreq, timeInSec, CONFIG.engine.speedResponseTime);\n    engineSource.bandpassFilter.frequency.setTargetAtTime(filterFreq * 1.5, timeInSec, CONFIG.engine.speedResponseTime);\n    engineSource.subBassFilter.gain.setTargetAtTime(subGain, timeInSec, CONFIG.engine.speedResponseTime);\n  }\n  \n  animationFrameId = requestAnimationFrame(updateSoundParameters);\n}\n\n// ----------------------------------------------------------------------------------------------------\n// RESOURCE CLEANUP\n// ----------------------------------------------------------------------------------------------------\n\n/**\n * Cleans up audio resources.\n */\nfunction cleanupAudioResources() {\n  if (animationFrameId) {\n    cancelAnimationFrame(animationFrameId);\n    animationFrameId = null;\n  }\n  activityEventListeners.forEach(({ event, handler }) => {\n    document.removeEventListener(event, handler);\n  });\n  activityEventListeners = [];\n  if (ambientSource) {\n    try {\n      ambientSource.source.stop();\n      ambientSource.gainNode.disconnect();\n      ambientSource = null;\n    } catch (e) {\n      console.error(\"Error cleaning up ambient source:\", e);\n    }\n  }\n  if (engineSource) {\n    try {\n      engineSource.source.stop();\n      engineSource.filter.disconnect();\n      engineSource.gainNode.disconnect();\n      engineSource.panner.disconnect();\n      engineSource = null;\n    } catch (e) {\n      console.error(\"Error cleaning up engine source:\", e);\n    }\n  }\n}\n\n// ----------------------------------------------------------------------------------------------------\n// UI TOGGLE\n// ----------------------------------------------------------------------------------------------------\n\n/**\n * Updates the UI toggle state.\n * @param {boolean} isOn - Whether the sound is on or off.\n */\nfunction updateToggleUI(isOn) {\n  if (!soundToggleKnob || !soundToggleLight) return;\n  if (isOn) {\n    soundToggleKnob.classList.remove('off');\n    soundToggleKnob.classList.add('on');\n    soundToggle.classList.remove('off');\n    soundToggleLight.classList.add('on');\n  } else {\n    soundToggleKnob.classList.remove('on');\n    soundToggleKnob.classList.add('off');\n    soundToggle.classList.remove('on');\n    soundToggleLight.classList.remove('on');\n  }\n}\n\n// ----------------------------------------------------------------------------------------------------\n// SOUND SYSTEM ENABLE/DISABLE\n// ----------------------------------------------------------------------------------------------------\n\n/**\n * Enables the sound system.\n */\nasync function enableSoundSystem() {\n  try {\n    const context = await createAudioContext();\n    if (!context) throw new Error(\"Could not create audio context\");\n\n    cleanupAudioResources();\n    ambientSource = await setupAmbient();\n    engineSource = setupEngineSound(); // Renamed from setupNoise\n    \n    if (!ambientSource || !engineSource) throw new Error(\"Source creation failed\");\n\n    // Subscribe to scroll tracker updates for velocity only\n    scrollTracker.on(\"update\", (data) => {\n      scrollSpeed = data.velocityKMH;\n      // Count scrolling as activity - keeps sounds playing while scrolling\n      handleActivity();\n    });\n\n    // Remove the impulse response handler - we only care about speed\n    // scrollTracker.on(\"scroll\", handleScrollImpulse); -- REMOVED\n\n    // Start parameter update loop\n    animationFrameId = requestAnimationFrame(updateSoundParameters);\n    \n    // Add throttled mousemove handler to ensure it doesn't cause performance issues\n    let lastMouseMoveTime = 0;\n    const handleMouseMove = () => {\n      const now = performance.now();\n      // Throttle to once every 200ms to prevent excessive calls\n      if (now - lastMouseMoveTime > 200) {\n        lastMouseMoveTime = now;\n        handleActivity();\n      }\n    };\n    \n    document.addEventListener('mousemove', handleMouseMove);\n    activityEventListeners.push({ event: 'mousemove', handler: handleMouseMove });\n    \n    // Set up other activity listeners\n    const events = ['click', 'keydown', 'touchstart', 'wheel'];\n    events.forEach(evt => {\n      // Remove unnecessary binding as handleActivity doesn't use 'this' context\n      document.addEventListener(evt, handleActivity);\n      activityEventListeners.push({ event: evt, handler: handleActivity });\n    });\n\n    // Start in inactive state but trigger activity immediately\n    isUserActive = false;\n    engineStarted = false; // Will be set to true after proper startup\n    handleActivity();\n    \n    return true;\n  } catch (error) {\n    console.error(\"Sound enable failed:\", error);\n    return false;\n  }\n}\n\n/**\n * Handles the user's sound ON/OFF choice.\n * @param {boolean} enableSound - Whether to enable or disable the sound.\n */\nasync function handleSoundChoice(enableSound) {\n  if (enableSound) {\n    try {\n      if (!audioContext) {\n        audioContext = await createAudioContext();\n        if (!audioContext) throw new Error(\"Failed to create audio context\");\n      }\n      if (audioContext.state === 'suspended') {\n        await audioContext.resume();\n      }\n      isSoundEnabled = true;\n      updateToggleUI(true);\n      const success = await enableSoundSystem();\n      if (success) handleActivity();\n    } catch (error) {\n      console.error(\"Failed to enable sound:\", error);\n      isSoundEnabled = false;\n      updateToggleUI(false);\n    }\n  } else {\n    isSoundEnabled = false;\n    updateToggleUI(false);\n    if (ambientSource && engineSource) {\n      createFadeNode(ambientSource.gainNode, 0);\n      createFadeNode(engineSource.gainNode, 0);\n      setTimeout(() => {\n        if (audioContext) audioContext.suspend();\n        cleanupAudioResources();\n      }, CONFIG.fadeDuration * 1000);\n    } else if (audioContext) {\n      audioContext.suspend();\n    }\n  }\n  // Dispatch the custom event regardless of UI state.\n  window.dispatchEvent(new CustomEvent(SOUND_CHOICE_MADE));\n}\n\n// ----------------------------------------------------------------------------------------------------\n// FLOATING BUTTON\n// ----------------------------------------------------------------------------------------------------\n\n/**\n * Toggles the sound on or off.\n */\nfunction toggleSound() {\n  if (!audioContext) return;\n  isSoundEnabled = !isSoundEnabled;\n  updateToggleUI(isSoundEnabled);\n  if (isSoundEnabled) {\n    const resumePromise = audioContext.state === 'suspended'\n      ? audioContext.resume().catch(err => console.error(\"Failed to resume audio context:\", err))\n      : Promise.resolve();\n    resumePromise.then(() => {\n      if (ambientSource && engineSource) {\n        createFadeNode(ambientSource.gainNode, CONFIG.ambient.targetVolume);\n        createFadeNode(engineSource.gainNode, CONFIG.engine.maxVolume);\n      } else {\n        enableSoundSystem().then(() => {\n          if (ambientSource && engineSource) {\n            createFadeNode(ambientSource.gainNode, CONFIG.ambient.targetVolume);\n            createFadeNode(engineSource.gainNode, CONFIG.engine.maxVolume);\n          }\n        });\n      }\n    });\n  } else {\n    if (ambientSource && engineSource) {\n      createFadeNode(ambientSource.gainNode, 0);\n      createFadeNode(engineSource.gainNode, 0);\n      setTimeout(() => {\n        if (audioContext) audioContext.suspend();\n      }, CONFIG.fadeDuration * 1000);\n    } else if (audioContext) {\n      audioContext.suspend();\n    }\n  }\n}\n\n// ----------------------------------------------------------------------------------------------------\n// INITIALIZATION\n// ----------------------------------------------------------------------------------------------------\n\n/**\n * Initializes the sound system.\n */\nexport async function initSoundSystem() {\n  try {\n    // Create audio context first to make it available for all sound systems\n    if (!audioContext) {\n      try {\n        audioContext = new (window.AudioContext || window.webkitAudioContext)();\n        \n        // Create the master gain node\n        masterGainNode = audioContext.createGain();\n        masterGainNode.gain.setValueAtTime(1, audioContext.currentTime);\n        masterGainNode.connect(audioContext.destination);\n        \n        // Set up visibility tracking\n        setupVisibilityTracking();\n        \n        if (audioContext.state === 'suspended') {\n          // Setup click handler to resume context\n          const resumeAudio = () => {\n            audioContext.resume().catch(e => console.warn(\"Could not resume audio context:\", e));\n            document.removeEventListener('click', resumeAudio);\n          };\n          document.addEventListener('click', resumeAudio, { once: true });\n        }\n      } catch (error) {\n        console.error(\"Failed to create audio context:\", error);\n      }\n    }\n    \n    // Start preloading button sounds as early as possible\n    preloadButtonSounds().catch(err => {\n      console.warn(\"Button sound preload error:\", err);\n    });\n    \n    // UI element initialization for existing DOM elements\n    const btnOn = document.querySelector('#button-sound-on');\n    const btnOff = document.querySelector('#button-sound-off');\n\n    if (btnOn) {\n      btnOn.addEventListener('click', async () => {\n        audioContext = await createAudioContext();\n        if (audioContext && audioContext.state === 'suspended') {\n          await audioContext.resume();\n        }\n        handleSoundChoice(true);\n      });\n    }\n    \n    if (btnOff) {\n      btnOff.addEventListener('click', () => handleSoundChoice(false));\n    }\n    \n    // If a floating toggle exists, attach the listener.\n    if (soundToggle) {\n      // Avoid duplicate listeners by reassigning the element if needed.\n      const newToggle = soundToggle.cloneNode(true);\n      if (soundToggle.parentNode) {\n        soundToggle.parentNode.replaceChild(newToggle, soundToggle);\n        soundToggle = newToggle;\n        soundToggleKnob = soundToggle.querySelector('.sound-toggle__knob');\n        soundToggleLight = soundToggleKnob ? soundToggleKnob.querySelector('.knob-light') : null;\n      }\n      soundToggle.addEventListener('click', toggleSound);\n    }\n    \n    window.addEventListener('beforeunload', cleanupAudioResources);\n    audioInitialized = true;\n    return true;\n  } catch (error) {\n    console.error(\"Error during sound system initialization:\", error);\n    return false;\n  }\n}\n\n// ----------------------------------------------------------------------------------------------------\n// ROBOT SPEECH FUNCTIONS\n// ----------------------------------------------------------------------------------------------------\n\n/**\n * Generic character sound player that can be used for both robot speech and intro typing.\n * \n * @param {string} character - The character to generate sound for\n * @param {Object} config - Configuration for the sound (robotSpeech or introTyping)\n * @param {boolean} enabled - Whether this particular sound type is enabled\n * @returns {void}\n */\nfunction playCharacterSound(character, config, enabled) {\n    // Combined check: specific sound enabled, global sounds enabled, sound system enabled, page visible\n    if (!enabled || !allSoundsActive || !isSoundEnabled || !audioContext || audioContext.state !== 'running') return;\n    if (!isPageVisible) return; // Explicit check for page visibility\n    \n    // Check that visibility fade node isn't muted\n    if (visibilityFadeNode && visibilityFadeNode.gain.value <= 0.01) return;\n    \n    try {\n        // Create oscillator and gain nodes\n        const oscillator = audioContext.createOscillator();\n        const gainNode = audioContext.createGain();\n        const antiPopNode = audioContext.createGain(); // Add anti-pop\n        \n        // Create a DC filter to eliminate pops\n        const dcFilter = audioContext.createBiquadFilter();\n        dcFilter.type = 'highpass';\n        dcFilter.frequency.value = CONFIG.antiPopFilterFreq;\n        dcFilter.Q.value = 0.7;\n        \n        // Connect the nodes with anti-pop measures\n        oscillator.connect(antiPopNode);\n        antiPopNode.connect(dcFilter);\n        dcFilter.connect(gainNode);\n        // Connect to the visibilityFadeNode to ensure it follows visibility state\n        gainNode.connect(visibilityFadeNode || masterGainNode || audioContext.destination);\n        \n        // Set frequency based on character type\n        let frequency = config.baseFrequency;\n        const charMappings = config.characterMappings;\n        \n        if (charMappings.vowels.has(character)) {\n            frequency *= config.vowelModifier;\n            frequency += Math.random() * 50;\n        } else if (charMappings.bilabial.has(character)) {\n            frequency *= config.consonantModifier * 0.8;\n        } else if (charMappings.nasals.has(character)) {\n            frequency *= config.consonantModifier * 0.9;\n        } else if (charMappings.sibilants.has(character)) {\n            frequency *= config.consonantModifier * 1.4;\n        } else if (charMappings.dentals.has(character)) {\n            frequency *= config.consonantModifier * 1.2;\n        } else if (charMappings.pauses.has(character)) {\n            frequency *= 0.5;\n        } else if (character === ' ') {\n            return; // No sound for spaces\n        } else {\n            frequency *= (0.9 + Math.random() * 0.4);\n        }\n        \n        // Set oscillator properties\n        oscillator.type = 'sine';\n        oscillator.frequency.value = frequency;\n        \n        // Set envelope with smoother fade in/out\n        const now = audioContext.currentTime;\n        const duration = config.soundDuration / 1000;\n        \n        // Use multi-stage envelope for smoother sound\n        antiPopNode.gain.setValueAtTime(0, now);\n        antiPopNode.gain.linearRampToValueAtTime(1, now + 0.002);\n        \n        gainNode.gain.setValueAtTime(0, now);\n        gainNode.gain.linearRampToValueAtTime(config.volume, now + 0.01);\n        gainNode.gain.linearRampToValueAtTime(0, now + duration);\n        \n        antiPopNode.gain.linearRampToValueAtTime(0, now + duration + 0.002);\n        \n        // Start and stop with buffer to prevent clicks\n        oscillator.start(now);\n        oscillator.stop(now + duration + 0.01);\n        \n    } catch (error) {\n        console.warn(`Error playing character sound: ${error}`);\n    }\n}\n\n/**\n * Plays a sound for a specific character in robot speech.\n * @param {string} character - The character to generate sound for.\n */\nfunction playRobotSpeechSound(character) {\n    // The combined check in playCharacterSound will handle all conditions\n    playCharacterSound(character, CONFIG.robotSpeech, robotSpeechEnabled);\n}\n\n/**\n * Plays a sound for the intro typing effect.\n * @param {string} character - The character being typed.\n */\nfunction playIntroTypeSound(character) {\n    // The combined check in playCharacterSound will handle all conditions\n    playCharacterSound(character, CONFIG.introTyping, introTypingEnabled && isSoundEnabled);\n}\n\n/**\n * Initializes the robot speech audio system.\n * @returns {boolean} Whether initialization was successful.\n */\nfunction initRobotSpeech() {\n    if (!audioContext) {\n        try {\n            audioContext = new (window.AudioContext || window.webkitAudioContext)();\n        } catch (error) {\n            console.error(\"Could not initialize audio context for robot speech:\", error);\n            return false;\n        }\n    }\n    \n    if (audioContext.state === 'suspended') {\n        audioContext.resume().catch(e => {\n            console.warn(\"Could not resume audio context:\", e);\n        });\n    }\n    \n    return true;\n}\n\n/**\n * Plays a test sound to verify audio is working.\n */\nfunction playTestSound() {\n    if (!audioContext) {\n        if (!initRobotSpeech()) return;\n    }\n    \n    try {\n        const oscillator = audioContext.createOscillator();\n        const gainNode = audioContext.createGain();\n        \n        oscillator.connect(gainNode);\n        gainNode.connect(masterGainNode || audioContext.destination);\n        \n        oscillator.type = 'sine';\n        oscillator.frequency.value = 440; // A note\n        \n        gainNode.gain.setValueAtTime(0, audioContext.currentTime);\n        gainNode.gain.linearRampToValueAtTime(0.3, audioContext.currentTime + 0.01);\n        gainNode.gain.linearRampToValueAtTime(0, audioContext.currentTime + 0.5);\n        \n        oscillator.start();\n        oscillator.stop(audioContext.currentTime + 0.5);\n        \n        console.log(\"Test sound played\");\n    } catch (error) {\n        console.error(\"Error playing test sound:\", error);\n    }\n}\n\n/**\n * Toggles robot speech sounds on/off.\n * @returns {boolean} The new state of robot speech (enabled/disabled).\n */\nfunction toggleRobotSpeech() {\n    robotSpeechEnabled = !robotSpeechEnabled;\n    \n    // Notify any registered callback about the change (for UI updates)\n    if (robotToggleCallback) {\n        robotToggleCallback(robotSpeechEnabled);\n    }\n    \n    return robotSpeechEnabled;\n}\n\n/**\n * Register a callback for robot speech toggle state changes.\n * @param {Function} callback - The callback function to call when toggle state changes.\n */\nfunction onRobotSpeechToggle(callback) {\n    robotToggleCallback = callback;\n}\n\n// Export robot speech functionality\nexport const robotSpeech = {\n    play: playRobotSpeechSound,\n    toggle: toggleRobotSpeech,\n    onToggle: onRobotSpeechToggle,\n    isEnabled: () => robotSpeechEnabled,\n    init: initRobotSpeech,\n    playTestSound,\n    isAudioInitialized: () => audioInitialized // Export the audioInitialized state\n};\n\n// ----------------------------------------------------------------------------------------------------\n// BUTTON SOUNDS FUNCTIONS\n// ----------------------------------------------------------------------------------------------------\n\n/**\n * Preloads button sound effects\n * @returns {Promise<boolean>} Success state of the preloading\n */\nasync function preloadButtonSounds() {\n  if (buttonSoundsLoaded || buttonSoundsLoading) return true;\n  if (!audioContext) await createAudioContext();\n  if (!audioContext) return false;\n  \n  buttonSoundsLoading = true;\n  \n  try {\n    console.log(\"Preloading button sounds...\");\n    const loadPromises = [];\n    \n    // Function to load and decode a sound file\n    const loadSound = async (url, soundType) => {\n      try {\n        const response = await fetch(url);\n        if (!response.ok) throw new Error(`Failed to fetch ${soundType} sound: ${response.status}`);\n        const arrayBuffer = await response.arrayBuffer();\n        const decodedBuffer = await audioContext.decodeAudioData(arrayBuffer);\n        buttonSoundBuffers[soundType] = decodedBuffer;\n        return true;\n      } catch (error) {\n        console.warn(`Error loading ${soundType} sound:`, error);\n        return false;\n      }\n    };\n    \n    // Load all button sounds in parallel\n    const urls = CONFIG.buttonSounds.urls;\n    loadPromises.push(loadSound(urls.hover, 'hover'));\n    loadPromises.push(loadSound(urls.press, 'press'));\n    loadPromises.push(loadSound(urls.confirm, 'confirm'));\n    \n    // Wait for all loads to complete\n    const results = await Promise.all(loadPromises);\n    buttonSoundsLoaded = results.some(result => result); // At least one success\n    buttonSoundsLoading = false;\n    \n    console.log(`Button sounds preloaded ${buttonSoundsLoaded ? 'successfully' : 'with some errors'}`);\n    return buttonSoundsLoaded;\n  } catch (error) {\n    console.error(\"Failed to preload button sounds:\", error);\n    buttonSoundsLoading = false;\n    return false;\n  }\n}\n\n/**\n * Plays a button sound effect\n * @param {string} soundType - Type of button sound ('hover', 'press', or 'confirm')\n * @param {number} [volumeMultiplier=1.0] - Optional volume multiplier for the sound\n */\nfunction playButtonSound(soundType, volumeMultiplier = 1.0) {\n  // Add allSoundsActive check along with other conditions\n  if (!isSoundEnabled || !allSoundsActive || !audioContext || !CONFIG.buttonSounds.enabled) return;\n  if (!isPageVisible) return; // Don't play button sounds when page is hidden\n  \n  // Apply hover sound throttling to prevent sound spam\n  if (soundType === 'hover') {\n    const now = performance.now();\n    if (now - lastHoverSound < CONFIG.buttonSounds.hoverCooldown) return;\n    lastHoverSound = now;\n  }\n  \n  // Try to use preloaded buffer\n  const buffer = buttonSoundBuffers[soundType];\n  if (!buffer) {\n    // If buffer not available and not currently loading, try to load it now\n    if (!buttonSoundsLoading) {\n      preloadButtonSounds();\n    }\n    return;\n  }\n  \n  try {\n    // Create sound source\n    const source = audioContext.createBufferSource();\n    source.buffer = buffer;\n    \n    // Create gain node for volume control\n    const gainNode = audioContext.createGain();\n    gainNode.gain.value = CONFIG.buttonSounds.volume * volumeMultiplier;\n    \n    // Connect nodes\n    source.connect(gainNode);\n    gainNode.connect(masterGainNode || audioContext.destination);\n    \n    // Play the sound\n    source.start(0);\n    \n    // Clean up once playback is complete\n    source.onended = () => {\n      source.disconnect();\n      gainNode.disconnect();\n    };\n  } catch (error) {\n    console.warn(`Error playing ${soundType} button sound:`, error);\n  }\n}\n\n// Export button sound functionality\nexport const buttonSounds = {\n  preload: preloadButtonSounds,\n  play: playButtonSound\n};\n\n// Export the new function\nexport { playIntroTypeSound };\n\n// Export the custom event name\nexport const EVENTS = {\n  SOUND_CHOICE_MADE\n};\n", "/**\n * Consolidated View Toggling & 3D Button Module\n * \n * This module is now the sole handler for view toggling and widget animations.\n * The viewToggle.js and widgetAnimations.js modules have been deprecated.\n * \n * Responsibilities:\n * - Manages toggling between 3D buttons (only one active).\n * - Handles special buttons (like easter eggs) triggering views.\n * - Controls visibility of corresponding view sections.\n * - Manages staggered animation of widgets (.widget elements) when switching views.\n */\n\n// Import necessary modules\nimport { buttonSounds } from './sounds.js';\n\n// --- Configuration ---\nconst SCREEN_IDS = ['home-view', 'portfolio-view', 'contact-view', 'game-view']; // Added game-view\nconst WIDGET_ANIMATION_DURATION = 1000; // Max duration for stagger (in ms)\nconst WIDGET_BASE_DELAY = 50; // Base delay before starting animations\n\n// Special buttons that trigger views but don't have active states\nconst SPECIAL_BUTTONS = {\n  'easter-egg-button': 'game-view' // Map button ID to target view ID\n};\n\n// --- State ---\nlet transitionInProgress = false;\n\n/**\n * WidgetAnimationManager\n * A class that handles widget animations and view transitions in a more robust way\n */\nclass WidgetAnimationManager {\n  constructor() {\n    this.animationRegistry = new Map(); // Tracks running animations by view ID\n    this.completedAnimations = new Map(); // Tracks completed animations for cleanup\n    this.soundDelayTime = 50; // 50ms delay before playing sound\n  }\n  \n  /**\n   * Prepares widgets in a view for animation\n   * @param {Element} view - The view containing widgets\n   * @param {string} type - Either 'in' or 'out'\n   * @returns {Array} - Array of widgets\n   */\n  prepareWidgets(view, type) {\n    const widgets = Array.from(view.querySelectorAll('.widget'));\n    \n    if (type === 'in') {\n      // Prepare widgets for intro animation\n      widgets.forEach(widget => {\n        widget.style.opacity = '0.001';\n        widget.style.visibility = 'hidden';\n        widget.classList.remove('widget-intro', 'widget-outro');\n      });\n    } else if (type === 'out') {\n      // Prepare widgets for outro animation\n      widgets.forEach(widget => {\n        widget.classList.remove('widget-intro', 'widget-hidden');\n      });\n    }\n    \n    return widgets;\n  }\n  \n  /**\n   * Animate widgets in a view with precise control\n   * @param {Element} view - The view containing widgets\n   * @param {string} type - Either 'in' or 'out'\n   * @returns {Promise} - Resolves when all animations complete\n   */\n  animateWidgets(view, type) {\n    return new Promise(resolve => {\n      const viewId = view.id;\n      const widgets = this.prepareWidgets(view, type);\n      const numberOfWidgets = widgets.length;\n      \n      if (!numberOfWidgets) {\n        console.log(`No widgets found in ${viewId} to animate ${type}.`);\n        resolve(); // Nothing to animate\n        return;\n      }\n      \n      console.log(`Animating ${type} ${numberOfWidgets} widgets for ${viewId}`);\n      \n      // Track this animation in the registry\n      if (!this.animationRegistry.has(viewId)) {\n        this.animationRegistry.set(viewId, {\n          type,\n          count: 0,\n          total: numberOfWidgets,\n          complete: false\n        });\n      }\n      \n      // Shuffle widgets for random animation order\n      const shuffledWidgets = widgets.sort(() => Math.random() - 0.5);\n      \n      // Calculate delay step for staggered animation\n      const delayStep = numberOfWidgets > 1 \n        ? (WIDGET_ANIMATION_DURATION - WIDGET_BASE_DELAY) / numberOfWidgets \n        : 0;\n        \n      // Set up event handler for animation tracking\n      const handleAnimationEnd = (widget, index) => {\n        const record = this.animationRegistry.get(viewId);\n        \n        if (!record) return; // Safety check\n        \n        record.count++;\n        \n        // Check if all animations are complete\n        if (record.count >= record.total) {\n          record.complete = true;\n          \n          // Move to completed registry for cleanup\n          this.completedAnimations.set(viewId, Date.now());\n          this.animationRegistry.delete(viewId);\n          \n          // Resolve the promise\n          console.log(`All widget animations (${type}) complete for ${viewId}`);\n          resolve();\n        }\n      };\n      \n      // Handle each widget\n      shuffledWidgets.forEach((widget, index) => {\n        const delay = index * delayStep;\n        \n        if (type === 'in') {\n          // Make widget visible but transparent\n          widget.style.opacity = '1';\n          widget.style.visibility = 'visible';\n          \n          setTimeout(() => {\n            // Play sound with delay and reduced volume\n            setTimeout(() => {\n              buttonSounds.play('confirm', 0.05); // Reduced volume from 0.3 to 0.05\n            }, this.soundDelayTime);\n            \n            // Add animation class\n            widget.classList.add('widget-intro');\n            \n            // Listen for animation end\n            widget.addEventListener('animationend', () => {\n              widget.classList.remove('widget-intro');\n              handleAnimationEnd(widget, index);\n            }, { once: true });\n            \n          }, WIDGET_BASE_DELAY + delay);\n          \n        } else if (type === 'out') {\n          setTimeout(() => {\n            // Play sound with delay and reduced volume\n            setTimeout(() => {\n              buttonSounds.play('confirm', 0.03); // Reduced volume from 0.2 to 0.03\n            }, this.soundDelayTime);\n            \n            // Add animation class\n            widget.classList.add('widget-outro');\n            \n            // Listen for animation end\n            widget.addEventListener('animationend', () => {\n              widget.classList.remove('widget-outro');\n              widget.style.opacity = '0.001';\n              widget.style.visibility = 'hidden';\n              handleAnimationEnd(widget, index);\n            }, { once: true });\n            \n          }, WIDGET_BASE_DELAY + delay);\n        }\n      });\n      \n      // Safety timeout in case animations don't complete properly\n      const safetyTimeout = WIDGET_ANIMATION_DURATION + WIDGET_BASE_DELAY + 500;\n      setTimeout(() => {\n        if (this.animationRegistry.has(viewId) && !this.animationRegistry.get(viewId).complete) {\n          console.warn(`Safety timeout triggered for ${viewId} ${type} animations`);\n          \n          // Force completion\n          this.animationRegistry.delete(viewId);\n          \n          // If outro animation, ensure all widgets are hidden\n          if (type === 'out') {\n            widgets.forEach(widget => {\n              widget.style.opacity = '0.001';\n              widget.style.visibility = 'hidden';\n              widget.classList.remove('widget-outro');\n            });\n          }\n          \n          resolve();\n        }\n      }, safetyTimeout);\n    });\n  }\n  \n  /**\n   * Clean up any completed animations that are older than 5 seconds\n   */\n  cleanup() {\n    const now = Date.now();\n    for (const [viewId, timestamp] of this.completedAnimations.entries()) {\n      if (now - timestamp > 5000) {\n        this.completedAnimations.delete(viewId);\n      }\n    }\n  }\n  \n  /**\n   * Check if a view has active animations\n   * @param {string} viewId - The ID of the view to check\n   * @returns {boolean} - Whether the view has active animations\n   */\n  hasActiveAnimations(viewId) {\n    return this.animationRegistry.has(viewId);\n  }\n}\n\n// Create a singleton instance of the animation manager\nconst widgetAnimator = new WidgetAnimationManager();\n\n// --- Initialization ---\nexport function init3DButtons() {\n  console.log('Initializing consolidated button toggle, view, and widget animation system');\n  if (document.readyState === 'loading') {\n    document.addEventListener('DOMContentLoaded', initializeSystem);\n  } else {\n    initializeSystem();\n  }\n}\n\n/**\n * Core initialization function called after DOM is ready.\n */\nfunction initializeSystem() {\n  // 1. Prepare Views and Widgets for Initialization\n  prepareViewsAndWidgets();\n\n  // 2. Setup Regular 3D Button Listeners\n  const buttonWrappers = document.querySelectorAll('.btn-3d');\n  console.log('Found 3D button wrappers:', buttonWrappers.length);\n  buttonWrappers.forEach(wrapper => {\n    setupButtonEvents(wrapper);\n    console.log(`Set up events for 3D button: ${wrapper.id || wrapper.dataset.variant}`);\n  });\n\n  // 3. Setup Special Button Listeners\n  setupSpecialButtons();\n\n  // 4. Activate Home View by Default (after a slight delay for Lottie)\n  // We wait a bit to ensure Lottie has initialized before the first animation\n  setTimeout(() => {\n    const homeButtonWrapper = document.querySelector('.btn-3d[data-variant=\"home\"]');\n    const homeView = document.getElementById('home-view');\n\n    if (homeButtonWrapper && homeView) {\n      console.log('Activating home button and view by default');\n      \n      deactivateAllButtons();\n      homeButtonWrapper.classList.add('btn-3d--active');\n      \n      const innerButton = homeButtonWrapper.querySelector('.btn-3d__button');\n      if (innerButton) {\n        innerButton.setAttribute('aria-selected', 'true');\n      }\n      \n      void homeButtonWrapper.offsetWidth;\n      \n      console.log(`Home button wrapper activated: ${homeButtonWrapper.className}`);\n      \n      showViewElement(homeView);\n      widgetAnimator.animateWidgets(homeView, 'in');\n    } else {\n      console.warn('Home button wrapper or home view not found for default activation.');\n      if (!homeButtonWrapper) console.warn('Could not find .btn-3d[data-variant=\"home\"]');\n      if (!homeView) console.warn('Could not find #home-view');\n    }\n    \n    console.log('Consolidated system initialized.');\n  }, 100);\n}\n\n/**\n * Prepares views and widgets for initial load.\n * - Hides all views except home initially.\n * - Sets initial opacity for widgets to allow Lottie init.\n */\nfunction prepareViewsAndWidgets() {\n  console.log('Preparing views and widgets...');\n  SCREEN_IDS.forEach(id => {\n    const screen = document.getElementById(id);\n    if (screen) {\n      screen.style.position = 'absolute';\n      screen.style.top = '0';\n      screen.style.left = '0';\n      screen.style.width = '100%';\n      screen.style.opacity = '0';\n      screen.style.visibility = 'hidden';\n      screen.style.pointerEvents = 'none';\n      screen.classList.add('view--hidden');\n      screen.classList.remove('view--active');\n\n      widgetAnimator.prepareWidgets(screen, 'in');\n      console.log(`Prepared view: ${id}`);\n    } else {\n      console.warn(`View element with ID '${id}' not found during preparation.`);\n    }\n  });\n}\n\n// --- Event Setup ---\nfunction setupButtonEvents(wrapper) {\n  wrapper.addEventListener('click', handleButtonClick);\n  wrapper.addEventListener('mousedown', () => buttonSounds.play('press'));\n\n  const button = wrapper.querySelector('.btn-3d__button');\n  if (button) {\n    button.setAttribute('role', 'tab');\n    button.setAttribute('aria-selected', 'false');\n  }\n}\n\nfunction setupSpecialButtons() {\n  Object.entries(SPECIAL_BUTTONS).forEach(([buttonId, targetViewId]) => {\n    const button = document.getElementById(buttonId);\n    if (button) {\n      console.log(`Setting up special button: ${buttonId} -> ${targetViewId}`);\n      button.addEventListener('click', () => handleSpecialButtonClick(button, targetViewId));\n      button.addEventListener('mousedown', () => buttonSounds.play('press'));\n    } else {\n      console.warn(`Special button with ID '${buttonId}' not found in DOM.`);\n    }\n  });\n}\n\n// --- Event Handlers ---\nfunction handleButtonClick() {\n  if (transitionInProgress) {\n    console.log('View transition already in progress, ignoring click.');\n    return; \n  }\n  const buttonWrapper = this;\n  const buttonId = buttonWrapper.id;\n  const variant = buttonWrapper.dataset.variant;\n  const screenType = buttonId ? buttonId.replace('-button', '') : variant;\n  const targetScreenId = `${screenType}-view`;\n\n  console.log(`3D Button clicked: ${buttonId || variant} -> ${targetScreenId}`);\n\n  if (buttonWrapper.classList.contains('btn-3d--active')) {\n    console.log('Button already active, doing nothing.');\n    return;\n  }\n\n  transitionInProgress = true; \n\n  const previousScreen = getActiveScreenElement();\n  const targetScreen = document.getElementById(targetScreenId);\n\n  if (!targetScreen) {\n    console.error(`Target screen element #${targetScreenId} not found!`);\n    transitionInProgress = false;\n    return;\n  }\n\n  buttonSounds.play('confirm', 0.8);\n  deactivateAllButtons();\n  activateButton(buttonWrapper);\n  if (variant) {\n    let siblingSelector = `.btn-3d[data-variant=\"${variant}\"]`;\n    if (buttonId) {\n      siblingSelector += `:not(#${buttonId})`;\n    }\n    document.querySelectorAll(siblingSelector).forEach(siblingWrapper => {\n      activateButton(siblingWrapper);\n    });\n  }\n\n  performViewTransition(previousScreen, targetScreen);\n}\n\nfunction handleSpecialButtonClick(button, targetViewId) {\n  if (transitionInProgress) {\n    console.log('View transition already in progress, ignoring click.');\n    return;\n  }\n  console.log(`Special button clicked: ${button.id} -> ${targetViewId}`);\n\n  const targetScreen = document.getElementById(targetViewId);\n  if (!targetScreen) {\n    console.error(`Target screen element #${targetViewId} for special button not found!`);\n    return;\n  }\n\n  const previousScreen = getActiveScreenElement();\n\n  if (previousScreen && previousScreen.id === targetViewId) {\n    console.log('Already on the target screen, doing nothing.');\n    return;\n  }\n\n  transitionInProgress = true;\n\n  buttonSounds.play('confirm', 0.8);\n  deactivateAllButtons();\n  performViewTransition(previousScreen, targetScreen);\n}\n\n// --- View Transition Logic ---\nfunction performViewTransition(oldView, newView) {\n  console.log(`Transitioning from ${oldView ? oldView.id : 'none'} to ${newView.id}`);\n\n  // Hide ALL widgets in the new view BEFORE the transition\n  forceHideAllWidgetsInView(newView);\n\n  if (oldView) {\n    // Animate widgets out from current view\n    widgetAnimator.animateWidgets(oldView, 'out').then(() => {\n      // Once widgets are gone, switch views\n      hideViewElement(oldView);\n      \n      // First make the view visible but keep widgets hidden\n      showViewElement(newView);\n      \n      // Force hide widgets AGAIN to ensure they're invisible\n      forceHideAllWidgetsInView(newView);\n      \n      // Longer delay before starting widget intro animations to ensure clean separation\n      // Increased from 50ms to 200ms to ensure no overlap between transitions\n      setTimeout(() => {\n        // Now animate widgets in\n        widgetAnimator.animateWidgets(newView, 'in').then(() => {\n          transitionInProgress = false;\n        });\n      }, 200);\n    });\n  } else {\n    // No previous view, just show the new one\n    showViewElement(newView);\n    \n    // Force hide all widgets\n    forceHideAllWidgetsInView(newView);\n    \n    // Longer delay before starting widget intro animations to ensure clean separation\n    setTimeout(() => {\n      widgetAnimator.animateWidgets(newView, 'in').then(() => {\n        transitionInProgress = false;\n      });\n    }, 200);\n  }\n}\n\n/**\n * Force hide all widgets in a view immediately (no animation)\n * This is a crucial function to prevent any widget visibility during transitions\n * @param {Element} view - The view containing widgets\n */\nfunction forceHideAllWidgetsInView(view) {\n  if (!view) return;\n  \n  const widgets = view.querySelectorAll('.widget');\n  widgets.forEach(widget => {\n    // Use multiple techniques to ensure widgets are truly invisible\n    widget.style.opacity = '0';\n    widget.style.visibility = 'hidden';\n    widget.classList.remove('widget-intro', 'widget-outro');\n    widget.classList.add('widget-hidden');\n    \n    // Remove any inline transforms or transitions that might be active\n    widget.style.transition = 'none';\n    \n    // Force browser reflow to ensure changes are applied immediately\n    void widget.offsetHeight;\n  });\n  \n  console.log(`Forcefully hidden all widgets in ${view.id}`);\n}\n\nfunction showViewElement(view) {\n  // First, explicitly ensure all widgets in the view are hidden\n  const widgets = Array.from(view.querySelectorAll('.widget'));\n  widgets.forEach(widget => {\n    widget.style.opacity = '0'; // Explicitly set to 0, not 0.001\n    widget.style.visibility = 'hidden';\n    widget.classList.remove('widget-intro', 'widget-outro');\n    widget.classList.add('widget-hidden'); // Add a class for CSS control as well\n  });\n\n  // Then show the view container\n  view.style.position = 'relative';\n  view.style.opacity = '1';\n  view.style.visibility = 'visible';\n  view.style.pointerEvents = 'auto';\n  view.classList.add('view--active');\n  view.classList.remove('view--hidden');\n  console.log(`Showing view element: ${view.id} (with all widgets initially hidden)`);\n}\n\nfunction hideViewElement(view) {\n  view.style.position = 'absolute';\n  view.style.opacity = '0';\n  view.style.visibility = 'hidden';\n  view.style.pointerEvents = 'none';\n  view.classList.remove('view--active');\n  view.classList.add('view--hidden');\n  console.log(`Hiding view element: ${view.id}`);\n}\n\n// --- Button State Helpers ---\nfunction deactivateAllButtons() {\n  const allButtonWrappers = document.querySelectorAll('.btn-3d');\n  console.log(`[deactivateAllButtons] Deactivating all ${allButtonWrappers.length} 3D button wrappers.`);\n  let activeCount = 0;\n\n  allButtonWrappers.forEach(wrapper => {\n    if (wrapper.classList.contains('btn-3d--active')) {\n      activeCount++;\n      const id = wrapper.id || wrapper.dataset.variant || 'wrapper';\n      console.log(`\u2192 Deactivating wrapper: ${id}`);\n      \n      wrapper.classList.remove('btn-3d--active');\n      \n      const innerButton = wrapper.querySelector('.btn-3d__button');\n      if (innerButton) {\n        innerButton.setAttribute('aria-selected', 'false');\n        if (innerButton.classList.contains('btn-3d--active')) {\n          innerButton.classList.remove('btn-3d--active');\n        }\n      }\n    }\n  });\n\n  if (activeCount > 0) {\n    console.log(`[deactivateAllButtons] Found and deactivated ${activeCount} active wrapper(s).`);\n  } else {\n    console.log('[deactivateAllButtons] No active wrappers found to deactivate.');\n  }\n\n  const stillActiveWrappers = document.querySelectorAll('.btn-3d.btn-3d--active');\n  if (stillActiveWrappers.length > 0) {\n    console.warn(`[deactivateAllButtons] Warning: ${stillActiveWrappers.length} wrapper(s) still active after deactivation!`);\n  } else {\n    console.log('[deactivateAllButtons] All wrappers successfully deactivated (verified).');\n  }\n}\n\nfunction activateButton(wrapper) {\n  const innerButton = wrapper.querySelector('.btn-3d__button');\n  const id = wrapper.id || wrapper.dataset.variant || 'wrapper';\n\n  wrapper.classList.add('btn-3d--active');\n  console.log(`\u2192 Activated wrapper: ${id}`);\n\n  if (innerButton) {\n    innerButton.setAttribute('aria-selected', 'true');\n    if (innerButton.classList.contains('btn-3d--active')) {\n      innerButton.classList.remove('btn-3d--active');\n    }\n  } else {\n    console.warn(`Could not find inner .btn-3d__button for wrapper: ${id}`);\n  }\n  \n  console.log(`[activateButton] Activated wrapper: ${id}`);\n}\n\n// --- Utility ---\nfunction getActiveScreenElement() {\n  for (const id of SCREEN_IDS) {\n    const screen = document.getElementById(id);\n    if (screen && \n        (screen.classList.contains('view--active') || \n         (screen.style.visibility === 'visible' && screen.style.opacity === '1'))) {\n      return screen;\n    }\n  }      \n  const activeWrapper = document.querySelector('.btn-3d.btn-3d--active');\n  if (activeWrapper && activeWrapper.id) {\n    const screenType = activeWrapper.id.replace('-button', '');\n    return document.getElementById(`${screenType}-view`);\n  }\n  return null;\n}\n\n", "/**\n * Resize Overlay Module\n * --------------------\n * Manages the overlay that appears during browser resize events.\n * \n * This module:\n * - Shows an overlay during window resize to prevent layout jumps and visual glitches\n * - Uses debounced event handling to manage resize events efficiently\n * - Controls the CSS transitions for smooth fade in/out of the overlay\n * - Provides clean DOM management by setting display:none after transitions complete\n * - Prevents viewing in extreme aspect ratios or very small viewport sizes\n * - Displays alert message when viewport dimensions are unacceptable\n */\n\nconsole.log('Resize Overlay Module Initialized');\n\nfunction setupResizeOverlay() {\n  const overlay = document.getElementById('resize-overlay');\n  const alertElement = document.getElementById('resize-overlay-alert');\n  \n  if (!overlay) {\n    console.warn('Element with id \"resize-overlay\" not found');\n    return;\n  }\n  \n  if (!alertElement) {\n    console.warn('Element with id \"resize-overlay-alert\" not found');\n  }\n  \n  // Constants for viewport restrictions\n  const MIN_WIDTH = 300; // Minimum acceptable width in pixels\n  const MIN_HEIGHT = 400; // Minimum acceptable height in pixels\n  const MAX_RATIO = 3; // Maximum width:height or height:width ratio\n  \n  // Force the overlay to be hidden initially by setting style directly\n  overlay.style.opacity = '0';\n  overlay.style.display = 'none';\n  overlay.classList.add('resize-overlay--hidden');\n  \n  if (alertElement) {\n    alertElement.style.display = 'none';\n  }\n  \n  console.log('Resize overlay initialized and hidden');\n  \n  const TRANSITION_DURATION = 300; // Duration in ms for fade transition\n  const RESIZE_DELAY = 1000; // Keep overlay visible for 1 second after resize\n  \n  let resizeTimer;\n  let isResizing = false;\n  let overlayShownForSizeRestriction = false;\n  \n  // Function to check if viewport dimensions are acceptable\n  function isViewportAcceptable() {\n    const width = window.innerWidth;\n    const height = window.innerHeight;\n    const ratio = Math.max(width / height, height / width);\n    \n    return width >= MIN_WIDTH && height >= MIN_HEIGHT && ratio <= MAX_RATIO;\n  }\n  \n  // Function to show overlay\n  function showOverlay(showAlert = false) {\n    overlay.style.display = 'block';\n    \n    // Force a reflow before setting opacity to ensure transition works\n    overlay.offsetHeight;\n    \n    overlay.style.opacity = '1';\n    overlay.classList.remove('resize-overlay--hidden');\n    overlay.classList.add('resize-overlay--visible');\n    \n    if (showAlert && alertElement) {\n      alertElement.style.display = 'block';\n    }\n  }\n  \n  // Function to hide overlay\n  function hideOverlay() {\n    overlay.style.opacity = '0';\n    overlay.classList.remove('resize-overlay--visible');\n    overlay.classList.add('resize-overlay--hidden');\n    \n    if (alertElement) {\n      alertElement.style.display = 'none';\n    }\n    \n    // After transition completes, set display none\n    setTimeout(() => {\n      if (overlay.style.opacity === '0') {\n        overlay.style.display = 'none';\n      }\n    }, TRANSITION_DURATION);\n  }\n  \n  // Check viewport on initialization\n  if (!isViewportAcceptable()) {\n    showOverlay(true);\n    overlayShownForSizeRestriction = true;\n  }\n  \n  window.addEventListener('resize', () => {\n    const viewportIsAcceptable = isViewportAcceptable();\n    \n    if (!isResizing) {\n      isResizing = true;\n      \n      // Always show overlay during resize\n      showOverlay(!viewportIsAcceptable);\n    }\n    \n    if (resizeTimer) clearTimeout(resizeTimer);\n    \n    resizeTimer = setTimeout(() => {\n      if (viewportIsAcceptable) {\n        // Viewport is acceptable, hide overlay\n        hideOverlay();\n        overlayShownForSizeRestriction = false;\n      } else {\n        // Keep overlay visible with alert if viewport is unacceptable\n        showOverlay(true);\n        overlayShownForSizeRestriction = true;\n      }\n      \n      isResizing = false;\n    }, RESIZE_DELAY);\n  });\n}\n\nexport function initResizeOverlay() {\n  if (document.readyState === 'loading') {\n    document.addEventListener('DOMContentLoaded', setupResizeOverlay);\n  } else {\n    setupResizeOverlay();\n  }\n}\n", "/**\n * Cursor Tracker Module\n * --------------------\n * Tracks cursor movements, clicks and distance traveled.\n *\n * This module:\n * - Tracks total cursor travel distance with unit conversion\n * - Maintains click count statistics\n * - Uses requestAnimationFrame for optimized performance\n * - Exports cursor position data for use by other modules\n */\n\n// ------------------------------------------------------------\n// Annotations:\n// This code tracks cursor movements, click counts and distance traveled.\n// It uses requestAnimationFrame for continuous updates, performance.now()\n// for precise timing, and precomputed DPI for distance calculations.\n// ------------------------------------------------------------\n\n// **Constants**\nconst CM_PER_INCH = 2.54;\nconst INCHES_PER_MILE = 63360;\n\n// **DYNAMIC VARIABLES**\nlet cursorXPercent = 0;\nlet cursorYPercent = 0;\n\nlet prevMouseX = null,\n    prevMouseY = null,\n    prevTime = null;\nlet totalDistance = 0;\n\nlet clickCount = 0;\n\nlet currentDistanceMeters = 0;\nlet currentDistanceMiles = 0;\n\n// **DPI Calculation**\nlet dpi_x = window.devicePixelRatio ? 96 * window.devicePixelRatio : 96;\ndpi_x *= 5 / 6.5; // Adjusted based on measurement\n\n// **DOM Elements**\nlet clickCounterElement = null, distanceValueM = null, distanceValueMiles = null;\nlet isInitialized = false; // Flag to prevent multiple initializations\n\n// Initialize DOM elements lazily\nfunction ensureElementsInitialized() {\n  if (!clickCounterElement) clickCounterElement = document.getElementById('click-counter');\n  if (!distanceValueM) distanceValueM = document.getElementById('distance-value-m');\n  if (!distanceValueMiles) distanceValueMiles = document.getElementById('distance-value-miles');\n}\n\n// Distance calculations\nfunction updateDistanceMetrics() {\n  const distanceInches = totalDistance / dpi_x;\n  currentDistanceMeters = (distanceInches * CM_PER_INCH) / 100;\n  currentDistanceMiles = distanceInches / INCHES_PER_MILE;\n}\n\n// Format values to \"000.00\" format, capped at 999.99\nfunction formatValue(value) {\n  const cappedValue = Math.min(value, 999.99);\n  return cappedValue.toFixed(2).padStart(6, '0');\n}\n\n// Update DOM elements with tracking data\nfunction updateDebugDisplay() {\n  if (clickCounterElement) clickCounterElement.textContent = clickCount.toString();\n  if (distanceValueM) distanceValueM.textContent = formatValue(currentDistanceMeters);\n  if (distanceValueMiles) distanceValueMiles.textContent = formatValue(currentDistanceMiles);\n}\n\n// **Shared Pointer Move Logic**\nfunction handlePointerMove(x, y) {\n  const currentTime = performance.now();\n\n  cursorXPercent = x / window.innerWidth;\n  cursorYPercent = y / window.innerHeight;\n\n  if (prevMouseX !== null && prevMouseY !== null && prevTime !== null) {\n    const dx = x - prevMouseX;\n    const dy = y - prevMouseY;\n    const dt = (currentTime - prevTime) / 1000;\n\n    if (dt > 0) {\n      const distance = Math.hypot(dx, dy);\n      totalDistance += distance;\n    }\n  }\n\n  prevMouseX = x;\n  prevMouseY = y;\n  prevTime = currentTime;\n}\n\n// **Mouse tracking \u2013 Event Handlers**\nfunction setupEventHandlers() {\n  let ticking = false;\n  let lastEvent = null;\n\n  function requestTick() {\n    if (!ticking) {\n      requestAnimationFrame(() => {\n        if (lastEvent) {\n          if (lastEvent.type === 'mousemove') {\n            handlePointerMove(lastEvent.clientX, lastEvent.clientY);\n          } else if (lastEvent.type === 'touchmove' && lastEvent.touches.length > 0) {\n            const touch = lastEvent.touches[0];\n            handlePointerMove(touch.clientX, touch.clientY);\n          }\n          lastEvent = null;\n        }\n        ticking = false;\n      });\n    }\n    ticking = true;\n  }\n\n  document.addEventListener(\"mousemove\", e => {\n    lastEvent = e;\n    requestTick();\n  });\n\n  document.addEventListener(\"touchmove\", e => {\n    e.preventDefault();\n    lastEvent = e;\n    requestTick();\n  }, { passive: false });\n\n  document.addEventListener(\"touchstart\", (e) => {\n    if (e.touches.length > 0) {\n      const touch = e.touches[0];\n      const touchX = touch.clientX;\n      const touchY = touch.clientY;\n\n      prevMouseX = touchX;\n      prevMouseY = touchY;\n      prevTime = performance.now();\n\n      cursorXPercent = touchX / window.innerWidth;\n      cursorYPercent = touchY / window.innerHeight;\n    }\n  });\n\n  document.addEventListener(\"touchend\", () => {\n    // Handle touch end similar to mouseout\n  });\n\n  document.addEventListener(\"mouseout\", (e) => {\n    if (!e.relatedTarget && !e.toElement) {\n      // Consider resetting prevMouseX/Y/Time here if needed\n    }\n  });\n\n  document.addEventListener(\"click\", () => {\n    clickCount++;\n    if (clickCounterElement) clickCounterElement.textContent = clickCount.toString();\n  });\n}\n\n// **Animation loop**\nfunction animationLoop() {\n  ensureElementsInitialized();\n\n  updateDistanceMetrics();\n\n  updateDebugDisplay();\n\n  requestAnimationFrame(animationLoop);\n}\n\n// **Initialization**\nexport function initcursorTracker() {\n  if (isInitialized) {\n    return;\n  }\n\n  setupEventHandlers();\n  animationLoop();\n\n  isInitialized = true;\n}\n\nexport { cursorXPercent, cursorYPercent };\n\n\n", "export function initLightGrid(selector = '.light-grid') {\n  console.log('%c[LightGrid.js] initLightGrid FUNCTION CALLED', 'color: #00ff00; font-weight: bold;');\n\n  // New animation parameters for Nostromo-style blinking\n  const MIN_ON_DURATION_MS = 400;      // Min time a light stays fully on\n  const MAX_ON_DURATION_MS = 700;     // Max time a light stays fully on\n  const MIN_OFF_DURATION_MS = 500;    // Min time a light stays off (minOpacity)\n  const MAX_OFF_DURATION_MS = 4000;   // Max time a light stays off\n  \n  const FLICKER_PER_FRAME_CHANCE = 0.0002; // Reduced: Chance per frame for an \"on\" light to start flickering\n  const FLICKER_DURATION_MS = 180;       // How long a flicker sequence lasts\n  const FLICKER_INTERVAL_MS = 45;        // Time between on/off states during a flicker\n\n  const dotSizePx = 5;       // Fixed dot size - CHANGED\n  const minOpacity = 0.15;    // Base opacity for \"off\" or dim state\n  const maxOpacity = 0.9;     // Opacity for \"on\" state\n\n  class Grid {\n    constructor(container) {\n      this.container = container;\n      console.log('%c[LightGrid.js Grid Instance] Constructor for:', 'color: #7f00ff;', container);\n      this.canvas = document.createElement('canvas');\n      this.canvas.className = 'light-grid-canvas';\n      \n      this.dotColor = '#00ff00'; // Default fallback color, will be updated in setup\n\n      // Ensure container can hold an absolutely positioned canvas\n      if (getComputedStyle(this.container).position === 'static') {\n        this.container.style.position = 'relative';\n      }\n      this.container.appendChild(this.canvas);\n      this.ctx = this.canvas.getContext('2d');\n      console.log('%c[LightGrid.js Grid Instance] Canvas created and appended to:', 'color: #7f00ff;', container);\n\n      this.cols = parseInt(container.dataset.cols, 10) || 5;\n      this.rows = parseInt(container.dataset.rows, 10) || 5;\n      this.dots = [];\n      this.resizeObserver = null;\n      this.lastTimestamp = 0; // For deltaTime calculation\n\n      this.setup(); // Initial setup\n\n      if (window.ResizeObserver) {\n        this.resizeObserver = new ResizeObserver(() => {\n          console.log('%c[LightGrid.js Grid Instance] ResizeObserver triggered for:', 'color: #7f00ff;', container);\n          this.setup();\n        });\n        this.resizeObserver.observe(this.container);\n      } else {\n        window.addEventListener('resize', () => this.setup());\n      }\n    }\n\n    setup() {\n      // const rect = this.container.getBoundingClientRect(); // Old method\n      const width = this.container.offsetWidth;\n      const height = this.container.offsetHeight;\n      \n      console.log(`%c[LightGrid.js Grid Instance] setup() for ${this.container.id || '(no ID)'}. OffsetDims: W=${width} H=${height}`, 'color: #7f00ff;');\n\n      // Get --color-1 from CSS custom properties\n      const computedStyle = getComputedStyle(this.container);\n      this.dotColor = computedStyle.getPropertyValue('--color-1').trim() || '#00ff00'; // Use fetched color or fallback to green\n      if (!computedStyle.getPropertyValue('--color-1').trim()) {\n        console.warn(`%c[LightGrid.js Grid Instance] --color-1 not found for ${this.container.id || '(no ID)'}. Defaulting to green.`, 'color: #ff9900;');\n      }\n\n      if (width === 0 || height === 0) {\n        console.warn(`%c[LightGrid.js Grid Instance] ${this.container.id || '(no ID)'} has zero dimensions (offsetWidth/offsetHeight). Canvas will be hidden.`, 'color: #ff9900;');\n        this.canvas.style.display = 'none';\n        this.dots = [];\n        return;\n      }\n      this.canvas.style.display = 'block';\n\n      const dpr = window.devicePixelRatio || 1;\n      this.canvas.width = width * dpr;\n      this.canvas.height = height * dpr;\n      this.canvas.style.width = `${width}px`;\n      this.canvas.style.height = `${height}px`;\n      this.ctx.scale(dpr, dpr);\n\n      this.dots = [];\n      const colWidth = width / this.cols;\n      const rowHeight = height / this.rows;\n\n      for (let r = 0; r < this.rows; r++) {\n        for (let c = 0; c < this.cols; c++) {\n          const initialOffDuration = MIN_OFF_DURATION_MS + Math.random() * (MAX_OFF_DURATION_MS - MIN_OFF_DURATION_MS);\n          this.dots.push({\n            x: colWidth * c + (colWidth - dotSizePx) / 2,\n            y: rowHeight * r + (rowHeight - dotSizePx) / 2,\n            size: dotSizePx,\n            \n            isCurrentlyOn: false, // Start off\n            onDuration: MIN_ON_DURATION_MS + Math.random() * (MAX_ON_DURATION_MS - MIN_ON_DURATION_MS),\n            offDuration: initialOffDuration,\n            timeInCurrentState: Math.random() * initialOffDuration, // Start at a random point in its first off-cycle\n\n            isFlickering: false,\n            flickerEndTime: 0,\n            flickerNextToggleTime: 0,\n            flickerIsCurrentlyOn: false\n          });\n        }\n      }\n      this.lastTimestamp = performance.now(); // Initialize for first deltaTime calculation\n      console.log(`%c[LightGrid.js Grid Instance] Setup complete for ${this.container.id || '(no ID)'}. Dots: ${this.dots.length}`, 'color: #7f00ff;');\n    }\n\n    draw(timestamp) {\n      if (!this.ctx || this.canvas.style.display === 'none') {\n        return;\n      }\n      \n      const deltaTime = timestamp - this.lastTimestamp;\n      this.lastTimestamp = timestamp;\n\n      if (this.dots.length === 0 && (this.canvas.width === 0 || this.canvas.height === 0)) {\n          // If setup resulted in no dots (e.g. zero dimension container) and canvas is zero, skip drawing.\n          return;\n      }\n      \n      const w = this.canvas.width / (window.devicePixelRatio || 1);\n      const h = this.canvas.height / (window.devicePixelRatio || 1);\n      this.ctx.clearRect(0, 0, w, h);\n\n      for (const dot of this.dots) {\n        dot.timeInCurrentState += deltaTime;\n        let currentDotOpacity = dot.isCurrentlyOn ? maxOpacity : minOpacity;\n\n        if (dot.isFlickering) {\n          if (timestamp >= dot.flickerEndTime) {\n            dot.isFlickering = false;\n            // Ensure it settles into its intended state post-flicker\n            currentDotOpacity = dot.isCurrentlyOn ? maxOpacity : minOpacity;\n          } else {\n            if (timestamp >= dot.flickerNextToggleTime) {\n              dot.flickerIsCurrentlyOn = !dot.flickerIsCurrentlyOn;\n              dot.flickerNextToggleTime = timestamp + FLICKER_INTERVAL_MS;\n            }\n            currentDotOpacity = dot.flickerIsCurrentlyOn ? maxOpacity : minOpacity * 0.5; // Flicker can be dimmer\n          }\n        } else { // Not flickering\n          if (dot.isCurrentlyOn) {\n            if (dot.timeInCurrentState >= dot.onDuration) {\n              dot.isCurrentlyOn = false;\n              dot.timeInCurrentState = 0;\n              dot.offDuration = MIN_OFF_DURATION_MS + Math.random() * (MAX_OFF_DURATION_MS - MIN_OFF_DURATION_MS);\n              currentDotOpacity = minOpacity;\n            } else {\n              // Chance to start flickering while on\n              if (Math.random() < FLICKER_PER_FRAME_CHANCE) {\n                dot.isFlickering = true;\n                dot.flickerEndTime = timestamp + FLICKER_DURATION_MS;\n                dot.flickerNextToggleTime = timestamp; // Start flicker immediately\n                dot.flickerIsCurrentlyOn = dot.isCurrentlyOn; // Flicker starts from current on/off state\n              }\n            }\n          } else { // Currently off\n            if (dot.timeInCurrentState >= dot.offDuration) {\n              dot.isCurrentlyOn = true;\n              dot.timeInCurrentState = 0;\n              dot.onDuration = MIN_ON_DURATION_MS + Math.random() * (MAX_ON_DURATION_MS - MIN_ON_DURATION_MS);\n              currentDotOpacity = maxOpacity;\n            }\n          }\n        }\n        \n        // this.ctx.globalAlpha = currentDotOpacity; // Old\n        \n        this.ctx.globalAlpha = currentDotOpacity;\n        this.ctx.fillStyle = this.dotColor; // Use instance-specific color\n        this.ctx.beginPath();\n        this.ctx.arc(dot.x + dot.size / 2, dot.y + dot.size / 2, dot.size / 2, 0, Math.PI * 2);\n        this.ctx.fill();\n      }\n      this.ctx.globalAlpha = 1; // Reset global alpha\n    }\n\n    destroy() {\n      if (this.resizeObserver) {\n        this.resizeObserver.disconnect();\n      }\n      if (this.canvas && this.canvas.parentNode) {\n        this.canvas.parentNode.removeChild(this.canvas);\n      }\n      console.log('%c[LightGrid.js Grid Instance] Destroyed:', 'color: #7f00ff;', this.container);\n    }\n  }\n\n  const initializeGrids = () => {\n    console.log('%c[LightGrid.js] initializeGrids CALLED', 'color: #00ccff; font-weight: bold;');\n    const containers = document.querySelectorAll(selector);\n    if (!containers.length) {\n      console.warn(`%c[LightGrid.js] NO ELEMENTS FOUND for selector \"${selector}\"`, 'color: #ff9900; font-weight: bold;');\n      return;\n    }\n    console.log(`%c[LightGrid.js] Found ${containers.length} elements for \"${selector}\"`, 'color: #00ccff;', containers);\n\n    // Destroy existing grids before reinitializing if any\n    if (window.lightGridInstances && window.lightGridInstances.length > 0) {\n        console.log(`%c[LightGrid.js] Destroying ${window.lightGridInstances.length} existing grid instances.`, 'color: #ff9900;');\n        window.lightGridInstances.forEach(grid => grid.destroy());\n    }\n    \n    window.lightGridInstances = Array.from(containers).map(container => new Grid(container));\n\n    let animFrameId;\n    function animateLoop(ts) { // ts is timestamp from requestAnimationFrame\n      window.lightGridInstances.forEach(grid => grid.draw(ts));\n      animFrameId = requestAnimationFrame(animateLoop);\n    }\n    \n    if (window.lightGridGlobalAnimationId) {\n        cancelAnimationFrame(window.lightGridGlobalAnimationId);\n    }\n    animFrameId = requestAnimationFrame(animateLoop);\n    window.lightGridGlobalAnimationId = animFrameId;\n    console.log(`%c[LightGrid.js] Animation loop started. Global ID: ${window.lightGridGlobalAnimationId}`, 'color: #00ccff;');\n  };\n\n  if (document.readyState === 'loading') {\n    console.log('%c[LightGrid.js] DOM loading, deferring init.', 'color: #ff9900;');\n    document.addEventListener('DOMContentLoaded', initializeGrids);\n  } else {\n    console.log('%c[LightGrid.js] DOM ready, initializing now.', 'color: #00ff00; font-weight: bold;');\n    initializeGrids();\n  }\n}", "/**\n * @module dateDisplay\n * @description A module that handles date formatting and display for webpage elements.\n * It updates DOM elements with formatted date information in British format.\n * \n * Usage: Import and call initDateDisplay() to initialize the date display functionality.\n * The module will update elements with IDs \"greeting\" and \"logbook\" with formatted date text.\n * \n * @example\n * import { initDateDisplay } from './modules/dateDisplay.js';\n * initDateDisplay();\n */\n\n/**\n * Initializes the date display functionality.\n * Updates the greeting element with the current day of week and the logbook element\n * with a formatted date including ordinal suffix (e.g. \"Logbook 21st Mar 2023\").\n * Uses British date format and Europe/London timezone.\n * @function initDateDisplay\n */\n\n\nconsole.log('Date Display module intialized');\n\n\nexport function initDateDisplay() {\n    const updateDateDisplay = () => {\n      const now = new Date();\n      const fmt = new Intl.DateTimeFormat('en-GB', {\n        timeZone: 'Europe/London',\n        weekday: 'long',\n        day: 'numeric',\n        month: 'short',\n        year: 'numeric'\n      });\n      const parts = fmt.formatToParts(now);\n      let weekday, day, month, year;\n      parts.forEach(p => {\n        if (p.type === 'weekday') weekday = p.value.toLowerCase();\n        if (p.type === 'day') day = parseInt(p.value);\n        if (p.type === 'month') month = p.value;\n        if (p.type === 'year') year = p.value;\n      });\n      // Helper for ordinal suffix (e.g., 1st, 2nd, 3rd, etc.)\n      const ordinal = n => n + (n % 100 >= 11 && n % 100 <= 13 ? \"th\" \n                                : [\"th\", \"st\", \"nd\", \"rd\"][n % 10] || \"th\");\n  \n      const greetingEl = document.getElementById(\"weekday\");\n      const logbookEl = document.getElementById(\"date\");\n      if (greetingEl) greetingEl.textContent = `it's ${weekday}`;\n      if (logbookEl) logbookEl.textContent = `Logbook ${ordinal(day)} ${month} ${year}`;\n    };\n  \n    // Ensure the DOM is ready before updating\n    if (document.readyState === \"loading\") {\n      document.addEventListener(\"DOMContentLoaded\", updateDateDisplay);\n    } else {\n      updateDateDisplay();\n    }\n  }", "/**\n * Marquee Content Module\n * --------------------\n * Handles scrolling marquee text animations.\n * \n * This module:\n * - Duplicates content within marquee elements for continuous scrolling\n * - Identifies all elements with the 'marquee' class\n * - Creates clones of the content to ensure seamless looping\n * - Works with CSS animations to create the scrolling effect\n */\n\nconsole.log('Marquee Content Duplicator Initialised');\n\n// Duplicate marquee content for continuous scrolling\nexport function initMarqueeContent() {\n  const marqueeContents = document.querySelectorAll('.marquee-content');\n  marqueeContents.forEach(container => {\n    // Get all child elements of the marquee-content container\n    const children = Array.from(container.children);\n    \n    // Clone each child and append it back to the container\n    children.forEach(child => {\n      const clone = child.cloneNode(true);\n      container.appendChild(clone);\n    });\n  });\n}", "/**\n * London Clock Module\n * --------------------\n * Renders and updates an analog clock showing London time.\n * \n * This module:\n * - Accesses the system time and converts it to London timezone\n * - Calculates the appropriate angles for hour, minute and second hands\n * - Applies rotation transforms to clock hand DOM elements\n * - Updates clock display once per second\n * - Provides start/stop controls for the clock animation\n */\n\nconsole.log('London Clock Module Initialized');\n\nlet clockInterval = null;\n\n/**\n * Updates the London clock by calculating and applying rotations for the clock hands\n */\nfunction updateLondonClock() {\n  // 1) Get current London time via timeZone\n  const londonTimeString = new Date().toLocaleString(\"en-US\", { timeZone: \"Europe/London\" });\n  const londonTime = new Date(londonTimeString);\n  \n  const hours = londonTime.getHours();\n  const minutes = londonTime.getMinutes();\n  const seconds = londonTime.getSeconds();\n\n  // 2) Calculate each hand's rotation:\n  // Hour hand: each hour = 30\u00B0, plus a fraction for the minutes\n  const hourDegrees = (hours % 12) * 30 + (minutes / 60) * 30;\n  \n  // Minute hand: each minute = 6\u00B0\n  const minuteDegrees = minutes * 6;\n  \n  // Second hand: each second = 6\u00B0\n  const secondDegrees = seconds * 6;\n\n  // 3) Apply the rotations to each hand\n  const hourHand = document.getElementById(\"hour_hand\");\n  const minuteHand = document.getElementById(\"minute_hand\");\n  const secondHand = document.getElementById(\"second_hand\");\n  \n  // Only apply transformations if elements exist\n  if (hourHand) hourHand.style.transform = `rotate(${hourDegrees}deg)`;\n  if (minuteHand) minuteHand.style.transform = `rotate(${minuteDegrees}deg)`;\n  if (secondHand) secondHand.style.transform = `rotate(${secondDegrees}deg)`;\n}\n\n/**\n * Initializes the London clock\n * @returns {Object} Control object with start and stop methods\n */\nexport function initLondonClock() {\n  // Clear any existing interval to prevent duplicates\n  if (clockInterval) clearInterval(clockInterval);\n  \n  // Update the clock once per second\n  clockInterval = setInterval(updateLondonClock, 1000);\n  \n  // Kick things off immediately\n  updateLondonClock();\n  \n  // Return control object\n  return {\n    start: () => {\n      if (!clockInterval) {\n        clockInterval = setInterval(updateLondonClock, 1000);\n        updateLondonClock();\n      }\n    },\n    stop: () => {\n      if (clockInterval) {\n        clearInterval(clockInterval);\n        clockInterval = null;\n      }\n    }\n  };\n}\n\nexport default initLondonClock;\n", "/**\n * Robot Animation Module - Performance Optimized\n */\n\nconsole.log(\"Robot animation module initialized\");\n\n// Import the sound system for speech effects\nimport { robotSpeech } from './sounds.js';\n\n// Variable to track if animation has started\nlet animationStarted = false;\n\nexport function initRobot() {\n    // =======================\n    // 1. CONFIG / CONSTANTS\n    // =======================\n    const CONFIG = {\n        BLINK_DURATION: 200,\n        MIN_BLINK_INTERVAL: 1000,\n        MAX_BLINK_INTERVAL: 3000,\n        TYPEWRITER_SPEED: 60,\n        DEFAULT_DISPLAY_TIME: 2000,\n        JOKE_PAUSE_TIME: 6000, \n        RANDOM_SPEED_VARIATION: 30,\n        EYE_MOVE_INTERVAL: 7000, \n        SMILE_DURATION: 2000,\n        MOUTH_UPDATE_FREQUENCY: 2,\n        DEBUG: true, // Enable debug temporarily to diagnose audio issues \n    };\n\n    // DOM elements cached for performance\n    const robotFace = document.getElementById('robot-display');\n    const bubble = document.getElementById('speech-bubble');\n    const speechBubbleText = document.getElementById('speech-bubble-text'); // NEW: Get the text element\n\n    if (!robotFace || !bubble || !speechBubbleText) { // Check for the new element\n        console.error(\"Robot face, speech bubble, or speech bubble text not found. Animation cannot start.\");\n        return;\n    }\n\n    let isSmiling = false;\n    \n    // Pre-compiled character type maps for faster lookups\n    const charTypeMap = {\n        vowels: new Set(\"AEIOUaeiou\"),\n        bilabial: new Set(\"MBPmbp\"),\n        nasals: new Set(\"Nn\"),\n        sibilants: new Set(\"SZszCcJj\"),\n        dentals: new Set(\"TDtd\"),\n        pauses: new Set(\",.;:!?-\")\n    };\n\n    // ================\n    // 2. SHAPES\n    // ================\n    const mouthShapes = {\n        neutral: [[3, 6], [4, 6], [5, 6]],\n        vowel: [[3, 5], [4, 5], [5, 5], [2, 6], [6, 6], [3, 7], [4, 7],[5, 7]],\n        bilabial: [[4, 6]],\n        wide: [[2, 6], [3, 6], [4, 6], [5, 6], [6, 6]],\n        idle: [[4, 5], [3, 6], [5, 6], [4, 7]],\n        nasal: [[3, 6], [4, 6], [5, 6], [3, 7], [4, 7], [5, 7]],\n        smile: [[2, 5],[3, 6],[4, 6],[5, 6],[6, 5]] \n    };\n\n    const eyeShapes = {\n        open: [[3, 2], [5, 2], [3, 3], [5, 3]],\n        closed: [[3, 3], [5, 3]],\n        left: [[2, 2], [4, 2], [2, 3], [4, 3]],\n        right: [[4, 2], [6, 2], [4, 3], [6, 3]],\n        squint: [[2, 3],[3, 2],[3, 3],[5, 2],[6, 3],[5, 3]]\n    };\n\n    // =====================\n    // 3. GET EXISTING FACE GRID\n    // =====================\n    \n    // Cache all robot dots for performance\n    const robotDots = Array.from(robotFace.querySelectorAll('.robot-dot'));\n    \n    if (robotDots.length === 0) {\n        console.error(\"No robot dots found in the SVG. Animation cannot start.\");\n        return;\n    }\n    \n    // More efficient dot map creation - no unnecessary calculations\n    const dotMap = new Map();\n    const mouthDotCache = {};\n    const eyeDotCache = {};\n    \n    // Pre-compute and cache all possible dot configurations\n    robotDots.forEach(dot => {\n        const row = parseInt(dot.getAttribute('data-row'));\n        const col = parseInt(dot.getAttribute('data-col'));\n        const key = `${col},${row}`;\n        dotMap.set(key, dot);\n    });\n    \n    // Pre-cache all mouth shape dots\n    Object.entries(mouthShapes).forEach(([shapeName, coords]) => {\n        mouthDotCache[shapeName] = coords\n            .map(([col, row]) => dotMap.get(`${col},${row}`))\n            .filter(Boolean);\n    });\n    \n    // Pre-cache all eye shape dots\n    Object.entries(eyeShapes).forEach(([shapeName, coords]) => {\n        eyeDotCache[shapeName] = coords\n            .map(([col, row]) => dotMap.get(`${col},${row}`))\n            .filter(Boolean);\n    });\n\n    if (CONFIG.DEBUG) {\n        console.log(\"Dot map created with\", dotMap.size, \"dots\");\n        console.log(\"Mouth cache created with\", Object.keys(mouthDotCache).length, \"shapes\");\n        console.log(\"Eye cache created with\", Object.keys(eyeDotCache).length, \"shapes\");\n    }\n    \n    // =====================\n    // 4. HELPER FUNCTIONS - OPTIMIZED\n    // =====================\n    \n    // Track current states to avoid unnecessary DOM updates\n    let currentMouthShape = null;\n    let currentEyeShape = null;\n    \n    // Optimized to use cached dots and avoid unnecessary DOM operations\n    function setMouth(shape) {\n        if (currentMouthShape === shape) return; // Skip if already set\n        \n        requestAnimationFrame(() => {\n            // Remove current mouth shape\n            if (currentMouthShape && mouthDotCache[currentMouthShape]) {\n                mouthDotCache[currentMouthShape].forEach(dot => \n                    dot.classList.remove('robot-dot--mouth'));\n            }\n            \n            // Apply new mouth shape\n            if (mouthDotCache[shape]) {\n                mouthDotCache[shape].forEach(dot => \n                    dot.classList.add('robot-dot--mouth'));\n                currentMouthShape = shape;\n            }\n        });\n    }\n\n    // Optimized eye setting function\n    function setEyes(shape) {\n        if (isSmiling && shape !== 'squint') return;\n        if (currentEyeShape === shape) return; // Skip if already set\n        \n        requestAnimationFrame(() => {\n            // Remove current eye shape\n            if (currentEyeShape && eyeDotCache[currentEyeShape]) {\n                eyeDotCache[currentEyeShape].forEach(dot => \n                    dot.classList.remove('robot-dot--eye'));\n            }\n            \n            // Apply new eye shape\n            if (eyeDotCache[shape]) {\n                eyeDotCache[shape].forEach(dot => \n                    dot.classList.add('robot-dot--eye'));\n                currentEyeShape = shape;\n            }\n        });\n    }\n\n    function setNeutralExpression() {\n        setMouth('neutral');\n        setEyes('open');\n    }\n\n    function setLaughExpression() {\n        setMouth('smile');\n        setEyes('open');\n    }\n\n    let blinkTimeout;\n\n    function blinkEyes() {\n        if (isSmiling) return;\n        setEyes('closed');\n        setTimeout(() => setEyes('open'), CONFIG.BLINK_DURATION);\n\n        const nextBlink = Math.random() * (CONFIG.MAX_BLINK_INTERVAL - CONFIG.MIN_BLINK_INTERVAL) + CONFIG.MIN_BLINK_INTERVAL;\n        blinkTimeout = setTimeout(blinkEyes, nextBlink);\n    }\n\n    function stopBlinking() {\n        clearTimeout(blinkTimeout);\n    }\n\n    function resumeBlinking() {\n        blinkEyes();\n    }\n\n    function moveEyesRandomly() {\n        if (isSmiling) return;\n        const positions = ['left', 'right', 'open'];\n        const randomPosition = positions[Math.floor(Math.random() * positions.length)];\n        setEyes(randomPosition);\n    }\n\n    // Optimized mouth shape selection with pre-computed character sets\n    function updateMouthShape(letter) {\n        if (charTypeMap.vowels.has(letter)) {\n            setMouth('vowel');\n        } else if (charTypeMap.bilabial.has(letter)) {\n            setMouth('bilabial');\n        } else if (charTypeMap.nasals.has(letter)) {\n            setMouth('nasal');\n        } else if (charTypeMap.sibilants.has(letter)) {\n            setMouth('wide');\n        } else if (charTypeMap.dentals.has(letter)) {\n            setMouth('neutral');\n        } else if (charTypeMap.pauses.has(letter)) {\n            setMouth('idle');\n        } else if (letter === ' ' && Math.random() < 0.3) {\n            setMouth('neutral');\n        } else {\n            // Use a simple array for better performance than Object.keys\n            const availableMouths = ['wide', 'neutral', 'vowel', 'nasal', 'idle'];\n            setMouth(availableMouths[Math.floor(Math.random() * availableMouths.length)]);\n        }\n    }\n\n    // Simplified delay function\n    const delay = ms => new Promise(resolve => setTimeout(resolve, ms));\n\n    // More reliable visibility check\n    const checkVisibility = () => {\n        try {\n            const rect = robotFace.getBoundingClientRect();\n            if (rect.width === 0 || rect.height === 0) {\n                console.warn('Robot face may not be visible');\n            } else if (CONFIG.DEBUG) {\n                console.log('Robot face is visible');\n            }\n        } catch (e) {\n            console.warn('Error checking robot visibility:', e);\n        }\n    };\n\n    // More efficient text handling with fragment\n    function prefillSpeechBubble(phrase) {\n        speechBubbleText.textContent = ''; // Clear existing text\n    }\n\n    // ============================================\n    // 5. MAIN TEXT ANIMATION - STREAMLINED\n    // ============================================\n    const jokeIntroductions = [\n        \"Here's one for you:\",\n        \"How about this joke?\",\n        \"Here's a little humor:\",\n        \"Got a joke:\",\n        \"Here's a classic:\",\n        \"Let me tell you a joke:\",\n        \"Heard this one?\"\n    ];\n\n    const wisdomIntroductions = [\n        \"Here's a design thought:\",\n        \"Consider this:\",\n        \"Quick design insight:\",\n        \"A bit of design wisdom:\",\n        \"Remember this principle:\",\n        \"Food for thought:\",\n        \"From the design archives:\"\n    ];\n\n    const designWisdoms = [\n        [\"Fitt's Law isn't just about button size;\", \"it's a reminder that interaction cost is physical.\", \"How can you minimize pointer travel in complex UIs?\"],\n        [\"The Von Restorff effect highlights uniqueness.\", \"But consider its sibling, the Serial Position Effect:\", \"primacy and recency also heavily influence recall.\"],\n        [\"Hick's Law counsels choice reduction.\", \"Yet, for expert users, broader choice can be empowering.\", \"The key is balancing discoverability with efficiency.\"],\n        [\"Cognitive Load Theory distinguishes intrinsic, extraneous, and germane load.\", \"Effective design minimizes extraneous load to free resources for germane load (learning).\"],\n        [\"The Aesthetic-Usability effect is potent.\", \"However, beauty can mask underlying usability flaws,\", \"delaying their discovery during testing.\"],\n        [\"Progressive disclosure is crucial for onboarding.\", \"For power users, consider 'progressive exposure' of advanced features\", \"based on demonstrated expertise or task frequency.\"],\n        [\"Variable fonts offer performance and flexibility.\", \"But their impact on perceived performance can be just as significant,\", \"reducing layout shifts and FOUT/FOIT.\"],\n        [\"Beyond avoiding dark patterns, champion 'bright patterns'.\", \"These are ethical designs that actively empower users\", \"and foster genuine trust and loyalty.\"],\n        [\"The 'fold' is less about a fixed pixel height,\", \"and more about maintaining information scent and engagement\", \"to motivate scrolling down a compelling narrative.\"],\n        [\"Microinteractions, when chained effectively,\", \"can form 'macro-moments' that define a product's feel.\", \"Think beyond single tasks to entire user flows.\"],\n        [\"A11y isn't a checklist, but a mindset.\", \"Shift from 'compliance' to 'inclusive design thinking'.\", \"Solutions for edge cases often benefit all users.\"],\n        [\"Semantic HTML is foundational.\", \"But consider ARIA's role in conveying dynamic states and properties\", \"for complex, JavaScript-driven components.\"],\n        [\"Eye-tracking patterns like F or Z are heuristics.\", \"Real engagement is driven by clear visual hierarchy\", \"and compelling content, not just layout conventions.\"],\n        [\"Gestalt principles are powerful.\", \"But be mindful of cultural variations in perception.\", \"What constitutes 'closure' or 'proximity' can differ.\"],\n        [\"A consistent color language is vital.\", \"Extend this to include 'semantic color' for states (error, success, warning)\", \"and ensure sufficient contrast ratios (WCAG AA/AAA).\"],\n        [\"Typography's role extends beyond legibility.\", \"It shapes voice, conveys emotion, and builds brand identity.\", \"Consider its rhythmic and structural qualities.\"],\n        [\"Content-first design is a great starting point.\", \"But iterative 'content-and-design' sprints often yield better results,\", \"allowing content and layout to co-evolve.\"],\n        [\"Mobile-first indexing is standard.\", \"Now, consider 'AI-first' content optimization.\", \"How will your information be parsed and understood by LLMs?\"],\n        [\"Performance is a core design tenet.\", \"Beyond load times, consider 'interaction performance'.\", \"Are transitions smooth? Is feedback immediate?\"],\n        [\"The Rule of Thirds is a compositional aid.\", \"But dynamic symmetry and other compositional theories\", \"can lead to more sophisticated and engaging layouts.\"],\n        [\"Visual hierarchy directs attention.\", \"Use it not just for importance, but to guide users through tasks,\", \"reducing cognitive friction at each step.\"],\n        [\"Whitespace (negative space) is active, not passive.\", \"It's a tool for grouping, separating, and creating rhythm.\", \"Its deliberate use is a hallmark of mature design.\"],\n        [\"Personas are useful, but can oversimplify.\", \"Consider 'Jobs-to-be-Done' for a more task-oriented perspective,\", \"or 'Archetypes' to capture behavioral patterns.\"],\n        [\"A/B testing optimizes local maxima.\", \"For breakthrough innovation, complement it with qualitative insights\", \"and bold, hypothesis-driven design leaps.\"],\n        [\"The Doherty Threshold (400ms) is critical for flow.\", \"But for complex operations, managing expectations with clear feedback\", \"is more important than hitting an arbitrary number.\"],\n        [\"Skeuomorphism vs. Flat vs. Neumorphism is a stylistic choice.\", \"The underlying principle should be 'interactional honesty'.\", \"Does the form clearly communicate its function?\"],\n        [\"UX writing should be clear, concise, and consistent.\", \"But also consider its role in shaping brand voice and personality.\", \"Can your error messages be empathetic or even witty?\"],\n        [\"Design systems ensure consistency and efficiency.\", \"Their true power lies in freeing designers to focus on complex problems,\", \"rather than reinventing basic components.\"],\n        [\"Kerning and tracking are typographic details.\", \"But collectively, such details contribute to a polished, professional feel\", \"that signals quality and care to the user.\"],\n        [\"Serif vs. Sans-serif is a classic debate.\", \"Consider context, accessibility (dyslexia-friendly options),\", \"and the overall typographic system, not just isolated headlines.\"],\n        [\"The Golden Ratio can be a useful guide.\", \"But don't let it become a dogmatic constraint.\", \"Trust your eye and test with users for perceived harmony.\"],\n        [\"Occam's Razor: simpler is often better.\", \"However, 'simplicity' is subjective. Aim for 'optimal complexity'\u2014\", \"as simple as possible, but no simpler for the task at hand.\"],\n        [\"Digital wayfinding relies on clear navigation.\", \"But also consider 'serendipitous discovery'.\", \"How can users explore and find unexpected value?\"],\n        [\"Constructive error handling is key.\", \"Go beyond recovery; use errors as teaching moments\", \"to help users understand the system better.\"],\n        [\"Affordances signal utility.\", \"But in a mature digital landscape, 'signifiers' often do the heavy lifting,\", \"especially for non-visual or gestural interactions.\"],\n        [\"The Paradox of Choice is real.\", \"Mitigate it with smart defaults, categorization, filtering,\", \"and personalized recommendations based on user behavior.\"],\n        [\"'Don't Make Me Think' is a great mantra.\", \"But for complex domains, 'Help Me Think Clearly' might be more apt.\", \"Provide tools and structures for sense-making.\"],\n        [\"User journey maps visualize experiences.\", \"Extend them with 'service blueprints' to map frontstage and backstage actions,\", \"revealing operational dependencies and opportunities.\"],\n        [\"Atomic Design provides a structural metaphor.\", \"Its real value is in fostering a shared vocabulary\", \"and enabling collaborative, scalable design systems.\"],\n        [\"The Uncanny Valley is a known pitfall in realism.\", \"Stylization, abstraction, or focusing on expressive animation\", \"can often create more relatable and appealing characters.\"],\n        [\"Platform guidelines (Material, HIG) are starting points.\", \"Adapt them to your brand and user needs, creating a unique\", \"yet familiar experience. Don't just copy-paste.\"],\n        [\"Gamification can be effective, but also manipulative.\", \"Focus on intrinsic motivators like mastery, autonomy, and purpose,\", \"rather than just extrinsic rewards (points, badges).\"],\n        [\"The Peak-End Rule influences memory of experiences.\", \"Strategically design memorable peaks and a positive end,\", \"even if the overall experience has some friction.\"],\n        [\"Confirmation bias is a cognitive trap for designers.\", \"Actively cultivate 'intellectual humility' and seek disconfirming evidence\", \"through diverse user research and peer critique.\"],\n        [\"Iterative design is fundamental.\", \"Embrace 'dual-track agile' where discovery and delivery happen in parallel,\", \"ensuring you're building the right thing, and building it right.\"],\n        [\"Empathy is the bedrock of UX.\", \"Translate empathic understanding into tangible design decisions\", \"that demonstrably improve users' lives or workflows.\"],\n        [\"Visual weight creates focal points.\", \"Consider 'temporal visual hierarchy' in animations and transitions,\", \"guiding the eye through changes over time.\"],\n        [\"WCAG guidelines are crucial for color contrast.\", \"Also, test your designs in grayscale to assess hierarchy without color,\", \"and use tools to simulate various forms of color blindness.\"],\n        [\"The Pareto Principle (80/20 rule) is a useful heuristic.\", \"But be wary of neglecting the 'long tail' of features or users;\", \"niche functionalities can be critical for specific segments.\"],\n        [\"Mental models guide user expectations.\", \"When an interface must deviate, provide clear signposting and onboarding\", \"to help users build an accurate new mental model.\"],\n        [\"Graceful degradation and progressive enhancement are two sides of the same coin.\", \"The goal is a robust, accessible core experience for all,\", \"with enhancements layered for capable browsers/devices.\"],\n        [\"The Law of Pr\u00E4gnanz favors simplicity in perception.\", \"Use this to create clear, uncluttered interfaces where elements\", \"are easily grouped and understood at a glance.\"],\n        [\"Feedback loops confirm actions.\", \"Consider different feedback modalities (visual, auditory, haptic)\", \"and ensure feedback is timely, appropriate, and informative.\"],\n        [\"Consistency reduces cognitive load.\", \"Strive for 'functional consistency' (elements that look similar, behave similarly)\", \"and 'aesthetic consistency' (a cohesive visual style).\"],\n        [\"Storytelling in UX builds emotional connection.\", \"Use narrative structures to frame user onboarding, explain complex features,\", \"or showcase the impact of your product.\"],\n        [\"Color palettes define brand and guide interaction.\", \"Develop a systematic approach: primary, secondary, accent, semantic (error/success),\", \"and neutral shades with defined usage rules.\"],\n        [\"Iconography requires clarity and cultural sensitivity.\", \"Test icons for recognizability within your target demographic,\", \"and always provide text labels for critical functions.\"],\n        [\"Grid systems bring order to layouts.\", \"Explore 'modular grids' and 'baseline grids' for more sophisticated control\", \"over rhythm and harmony across different screen sizes.\"],\n        [\"Responsive vs. Adaptive: the debate continues.\", \"Often, a hybrid approach is best\u2014fluid grids with adaptive content strategies\", \"at key breakpoints to optimize for context.\"],\n        [\"First impressions are critical.\", \"Optimize for 'perceived performance' as much as actual speed.\", \"Use skeleton screens, optimistic updates, and engaging loading states.\"],\n        [\"User research uncovers needs, not solutions.\", \"It's the designer's role to synthesize research findings\", \"into innovative and effective design solutions.\"],\n        [\"Design debt, if unaddressed, erodes user trust.\", \"Establish regular 'design reviews' and 'debt retrospectives'\", \"to prioritize and tackle accumulated UX issues.\"],\n        [\"KISS: Keep It Simple, Stupid.\", \"But remember Einstein's addendum: 'Everything should be made as simple as possible,\", \"but not simpler.' Context and user expertise matter.\"],\n        [\"Invisible design is often the best design.\", \"It seamlessly supports the user's goals without drawing attention to itself.\", \"Strive for 'flow' and effortless interaction.\"],\n        [\"Whitespace is an active design element.\", \"Master its use to improve readability, create focus, and convey sophistication.\", \"It's about the 'art of subtraction'.\"]\n    ];\n\n    const jokes = [\n        [\"Why did the font go to jail?\", \"It was caught kerning in public.\"],\n        [\"Why did the div cross the road?\", \"To style the chicken on the other side.\"],\n        [\"A no-code developer walked into a bar.\", \"The bar auto-saved.\"],\n        [\"What\u2019s a computer\u2019s favorite snack?\", \"Microchips.\"],\n        [\"Why do 3D modelers make terrible baristas?\", \"They are too meshy!\"],\n        [\"Why did the designer fail their driving test?\", \"They couldn\u2019t stop aligning to the left.\"],\n        [\"Why do programmers prefer dark mode?\", \"Because light attracts bugs.\"],\n        [\"A Figma file, a no-code developer, and a UX designer walk into a bar.\", \"The bartender says, 'This joke has too many layers.'\"],\n        [\"Why did the div go to therapy?\", \"It couldn\u2019t deal with its boundaries.\"],\n        [\"Why did the UX designer break up with the developer?\", \"They said, 'You\u2019re just not responsive anymore.'\"],\n        [\"AI-generated art is just clipart\", \"with delusions of grandeur.\"],\n        [\"Mac users measure time in battery percentages.\", \"Android users measure time in updates they refuse to install.\"],\n        [\"Every junior designer secretly believes\", \"they invented minimalism.\"],\n        [\"UX writing is just apologising to users\", \"in fewer words.\"],\n        [\"Somewhere, an AI is trying to decide if your website is good\", \"or if you\u2019re just using a lot of drop shadows.\"],\n        [\"Nobody talks about how much emotional damage\", \"a bad colour palette can cause.\"],\n        [\"Graphic design is 90% knowing shortcuts\", \"and 10% remembering which layer you\u2019re on.\"],\n        [\"Figma\u2019s tagline should just be:\", \"'Who touched my frame?'\"],\n        [\"90% of UX is saying 'It depends'\", \"until the client gives up.\"],\n        [\"The Figma file isn\u2019t too big.\", \"You\u2019re just not emotionally prepared to open it.\"],\n        [\"UX designers don\u2019t have impostor syndrome.\", \"They have edge case syndrome \u2014 what if someone scrolls backward on a smartwatch during a solar eclipse?\"],\n        [\"UI design will break your heart.\", \"But printers will break your spirit.\"],\n        [\"Typography jokes make me so x-heighted.\", \"\"],\n        [\"Are you my Photoshop file?\", \"Because I forgot your name.\"],\n        [\"How many designers does it take to screw in a lightbulb?\", \"Does it have to be a lightbulb?\"],\n        [\"I don\u2019t need glasses.\", \"I just prefer to view the world in a constant Gaussian blur.\"],\n        [\"I would tell you a joke about kerning,\", \"but it\u2019s too spacey.\"],\n        [\"Two fonts walk into a bar.\", \"The barman says, 'Sorry lads, we don\u2019t serve your type.'\"],\n        [\"Why did the programmer quit his job?\", \"Because he didn\u2019t get arrays.\"],\n        [\"An SEO expert walks into a bar, bars, pub, tavern,\", \"public house, Irish pub, drinks, beer, alcohol.\"],\n        [\"Web designer?\", \"I hardly knew her!\"]\n    ];\n\n    const allSpeechSources = [\n        ...jokes.map(joke => ({ type: 'joke', content: joke })),\n        ...designWisdoms.map(wisdom => ({ type: 'wisdom', content: wisdom })) // content is now an array of strings\n    ];\n\n    function getRandomSpeechItem() {\n        const selectedItem = allSpeechSources[Math.floor(Math.random() * allSpeechSources.length)];\n\n        if (selectedItem.type === 'joke') {\n            const intro = jokeIntroductions[Math.floor(Math.random() * jokeIntroductions.length)];\n            // selectedItem.content is [setup, punchline]\n            return { type: 'joke', parts: [intro, ...selectedItem.content] }; \n        } else { // wisdom\n            const intro = wisdomIntroductions[Math.floor(Math.random() * wisdomIntroductions.length)];\n            // selectedItem.content is now an array of wisdom parts\n            return { type: 'wisdom', parts: [intro, ...selectedItem.content] }; \n        }\n    }\n\n    async function revealText() {\n        const phrase = currentPhrase;\n        let displayedText = '';\n        let mouthUpdateCounter = 0;\n    \n        for (let i = 0; i < phrase.length; i++) {\n            const character = phrase[i];\n    \n            mouthUpdateCounter++;\n            if (mouthUpdateCounter >= CONFIG.MOUTH_UPDATE_FREQUENCY) {\n                updateMouthShape(character);\n                mouthUpdateCounter = 0;\n            }\n    \n            robotSpeech.play(character);\n    \n            displayedText += character;\n            speechBubbleText.textContent = displayedText;\n    \n            const speedVariation = Math.floor(Math.random() * CONFIG.RANDOM_SPEED_VARIATION) - (CONFIG.RANDOM_SPEED_VARIATION / 2);\n            await delay(CONFIG.TYPEWRITER_SPEED + speedVariation);\n        }\n    }\n\n    let currentPhrase = '';\n\n    async function typeWriter() {\n        while (true) {\n            const speechItem = getRandomSpeechItem();\n            if (speechItem.type === 'joke') {\n                await animateJoke(speechItem.parts);\n            } else if (speechItem.type === 'wisdom') {\n                await animateWisdom(speechItem.parts); // Pass parts array\n            }\n            await delay(CONFIG.JOKE_PAUSE_TIME); \n        }\n    }\n\n    async function animateJoke(jokeParts) { // jokeParts is an array: [intro, setup, punchline]\n        for (let phrase of jokeParts) {\n            bubble.style.display = \"block\";\n            currentPhrase = phrase;\n            prefillSpeechBubble(phrase);\n            await revealText();\n            await delay(CONFIG.DEFAULT_DISPLAY_TIME);\n        }\n        bubble.style.display = \"none\";\n\n        stopBlinking();\n        isSmiling = true;\n        setLaughExpression();\n        await delay(CONFIG.SMILE_DURATION);\n        setNeutralExpression();\n        isSmiling = false;\n        resumeBlinking();\n    }\n\n    async function animateWisdom(wisdomParts) { // wisdomParts is an array: [intro, wisdomText]\n        for (let phrase of wisdomParts) {\n            bubble.style.display = \"block\";\n            currentPhrase = phrase;\n            prefillSpeechBubble(phrase);\n            await revealText();\n            await delay(CONFIG.DEFAULT_DISPLAY_TIME);\n        }\n        bubble.style.display = \"none\";\n        setNeutralExpression(); \n    }\n\n    // Toggle speech sounds using the sound system\n    function toggleSpeechSounds() {\n        return robotSpeech.toggle();\n    }\n\n    // ======================\n    // 7. INIT & START - IMPROVED\n    // ======================\n    function init() {\n        if (CONFIG.DEBUG) console.log(\"Initializing robot animation...\");\n        \n        // Set up multiple event listeners to initialize audio\n        const audioTriggerEvents = ['click', 'touchstart', 'keydown'];\n        \n        audioTriggerEvents.forEach(eventType => {\n            document.addEventListener(eventType, () => {\n                if (!robotSpeech.isAudioInitialized()) {\n                    robotSpeech.init();\n                    // Only play test sound on explicit interaction\n                    if (eventType === 'click') {\n                        setTimeout(robotSpeech.playTestSound, 500);\n                    }\n                }\n            }, { once: true, passive: true });\n        });\n        \n        // Initialize face but don't start animation yet\n        setNeutralExpression();\n        blinkEyes();\n        checkVisibility();\n        \n        // Use more efficient passive event listeners\n        const moveEyesInterval = setInterval(moveEyesRandomly, CONFIG.EYE_MOVE_INTERVAL);\n        \n        // Clean up on page unload\n        window.addEventListener('unload', () => {\n            clearInterval(moveEyesInterval);\n            clearTimeout(blinkTimeout);\n        }, { passive: true });\n\n        // Listen for intro completion to initialize audio\n        document.addEventListener('intro:complete', () => {\n            if (!robotSpeech.isAudioInitialized()) {\n                robotSpeech.init();\n            }\n        }, { once: true, passive: true });\n        \n        // Automatically start speaking\n        if (!animationStarted) {\n            animationStarted = true;\n            bubble.style.display = \"block\";\n            typeWriter().catch(err => console.error('Animation error:', err));\n            console.log(\"Robot animation started automatically\");\n        }\n    }\n\n    // More efficient initialization\n    if (document.readyState !== \"loading\") {\n        init();\n    } else {\n        document.addEventListener(\"DOMContentLoaded\", init, { once: true });\n    }\n    \n    // Return a more robust controller (keeping startSpeaking for backward compatibility)\n    return {\n        startSpeaking: () => {\n            // This is now just a wrapper for existing functionality\n            if (!animationStarted) {\n                if (!robotSpeech.isAudioInitialized()) {\n                    robotSpeech.init();\n                }\n                \n                animationStarted = true;\n                bubble.style.display = \"block\";\n                typeWriter().catch(err => console.error('Animation error:', err));\n                console.log(\"Robot animation started manually\");\n            }\n        },\n        // Add ability to check status\n        isActive: () => animationStarted\n    };\n}\n\n// Add method to exported function to allow external control\ninitRobot.toggleSpeechSounds = function() {\n    return robotSpeech.toggle();\n};", "export function initProcessorAnimation1() {\n    const className = '.processor1';\n    const elements = document.querySelectorAll(className);\n    elements.forEach((element) => {\n        setInterval(() => {\n            element.textContent = generateRandomString(10);\n        }, 50); // Reduced interval to 50ms\n    });\n}\n\nexport function initProcessorAnimation2() {\n    const className = '.processor2';\n    const frames = [\n        \".............\",\n        \"\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\",\n        \"|||||||||||||\",\n        \"<<<<<<<<<>>>>\",\n        \">>>>>>>>><<<<\",\n        \"+++++++++++++\",\n        \"((((((((((((((\",\n        \"))))))))))))))\",\n        \"  /\\\\    /\\\\  \",\n\n        \" /  \\\\  /  \\\\ \",\n\n        \"/    \\\\/    \\\\\",\n\n        \"\\\\    /\\\\    /\",\n\n        \" \\\\  /  \\\\  / \",\n\n        \"  \\\\/    \\\\/  \",\n\n        \"  /\\\\    /\\\\  \",\n\n        \" /  \\\\  /  \\\\ \",\n        \"O            \",\n\n        \" O           \",\n\n        \"  O          \",\n\n        \"   O         \",\n\n        \"    O        \",\n\n        \"     O       \",\n\n        \"      O      \",\n\n        \"       O     \",\n\n        \"        O    \",\n\n        \"         O   \",\n\n        \"          O  \",\n\n        \"           O \",\n\n        \"            O\",\n\n        \"           O \",\n\n        \"          O  \",\n    ];\n    const elements = document.querySelectorAll(className);\n    elements.forEach((element) => {\n        let frameIndex = 0;\n        setInterval(() => {\n            element.textContent = frames[frameIndex];\n            frameIndex = (frameIndex + 1) % frames.length;\n        }, 30); // Reduced interval to 30ms\n    });\n}\n\nexport function initProcessorAnimation3() {\n    const className = '.processor3';\n    const elements = document.querySelectorAll(className);\n    elements.forEach((element) => {\n        setInterval(() => {\n            let str = \"\u00D7\u00D7\u00D7\u00D7\u00D7\u00D7\u00D7\u00D7\u00D7\u00D7\u00D7\u00D7\u00D7\u00D7\u00D7\u00D7\u00D7\";\n            const pos1 = Math.floor(Math.random() * str.length);\n            const pos2 = Math.floor(Math.random() * str.length);\n            const pos3 = Math.floor(Math.random() * str.length);\n            str = str.split(\"\");\n            str[pos1] = getRandomCharacter();\n            str[pos2] = getRandomCharacter();\n            str[pos3] = getRandomCharacter();\n            element.textContent = str.join(\"\");\n        }, 50); // Reduced interval to 50ms\n    });\n}\n\n\nexport function initProcessorAnimation4() {\n    const className = '.processor4';\n    const PROCESSOR_TEXT = \"Assimilating designs..., Drafting wireframes\u2026, Pixel pushing in progress\u2026, Strategizing user journeys\u2026, Colour palette wrangling\u2026, Component crafting in session\u2026, Polishing pixels to perfection\u2026, Icon ideation underway\u2026, UX flowchart frenzy\u2026, Design system architecting\u2026, Prototyping in hyperdrive\u2026, Typography tweaking\u2026, Usability testing adventure\u2026, Interface illusionist at work\u2026, User empathy engine running\u2026, Wireframe wizardry\u2026, Accessibility advocating\u2026, Sketching sleek solutions\u2026, Feedback loop gymnastics\u2026, Iteration initiation\u2026, Responsive design refining\u2026, Developer handoff magic\u2026, Innovation incubation\u2026, Detail detective on duty\u2026, Experience enchantment ongoing\u2026,\";\n    const elements = document.querySelectorAll(className);\n    const length = PROCESSOR_TEXT.length;\n    elements.forEach((element) => {\n        let index = 0;\n        setInterval(() => {\n            const displayedText = PROCESSOR_TEXT.substring(index, index + 20);\n            element.textContent = displayedText;\n            index = (index + 1) % length;\n        }, 50); // Reduced interval to 50ms\n    });\n}\n", "/**\n * Diffusion Text Animation Module - Optimized for performance\n */\n\nclass DiffusionTextAnimator {\n  constructor(options) {\n    // Core configuration\n    this.texts = options.texts;\n    this.animateInDuration = options.animateInDuration;\n    this.legiblePauseDuration = options.legiblePauseDuration;\n    this.animateOutDuration = options.animateOutDuration;\n    this.frameInterval = options.frameInterval;\n    this.letterPool = options.letterPool;\n    this.container = options.container;\n    \n    // State machine setup - minimal properties\n    this.STATES = { IN: 0, PAUSE: 1, OUT: 2 };\n    this.currentState = this.STATES.IN;\n    this.currentTextIndex = 0;\n    this.currentText = this.texts[this.currentTextIndex];\n    this.stepCount = 0;\n    this.totalStepsIn = Math.ceil(this.animateInDuration / this.frameInterval);\n    this.totalStepsOut = Math.ceil(this.animateOutDuration / this.frameInterval);\n    this.inThresholds = this.computeThresholds(this.currentText, this.totalStepsIn, true);\n    this.outThresholds = [];\n    this.stateStartTime = 0;\n    this.lastFrameTime = 0;\n    \n    // Pre-allocate output buffer to avoid GC\n    this.outputBuffer = new Array(this.currentText.length);\n    \n    // Pre-generate random character cache\n    this.randomCharsCache = new Array(200);\n    this.refreshRandomCache();\n    this.randomCharIndex = 0;\n    \n    // Bind update method once\n    this.update = this.update.bind(this);\n    this.isRunning = false;\n  }\n  \n  // Fast random char getter using pre-cached values\n  getCachedRandomChar() {\n    const char = this.randomCharsCache[this.randomCharIndex];\n    this.randomCharIndex = (this.randomCharIndex + 1) % this.randomCharsCache.length;\n    return char;\n  }\n  \n  // Compute thresholds for diffusion phases\n  computeThresholds(text, totalSteps, isInPhase) {\n    const length = text.length;\n    const thresholds = new Array(length);\n    const noiseRange = Math.floor(totalSteps * 0.3);\n    const baseThreshold = Math.floor(totalSteps * 0.7);\n    \n    for (let i = 0; i < length; i++) {\n      // Fast space check\n      if (text[i] === ' ' || text[i] === '\\n' || text[i] === '\\t') {\n        thresholds[i] = isInPhase ? 0 : totalSteps;\n      } else {\n        thresholds[i] = isInPhase ? \n          (Math.random() * noiseRange + baseThreshold) | 0 : // Bitwise OR with 0 for faster integer conversion\n          (Math.random() * noiseRange + baseThreshold) | 0;\n      }\n    }\n    return thresholds;\n  }\n  \n  // Fill random character cache\n  refreshRandomCache() {\n    const poolLength = this.letterPool.length;\n    for (let i = 0; i < this.randomCharsCache.length; i++) {\n      this.randomCharsCache[i] = this.letterPool.charAt((Math.random() * poolLength) | 0);\n    }\n  }\n  \n  // Main animation frame handler\n  update(timestamp) {\n    if (!this.isRunning) return;\n    \n    // Enforce frame rate limit\n    if (!this.lastFrameTime) this.lastFrameTime = timestamp;\n    if (timestamp - this.lastFrameTime < this.frameInterval) {\n      requestAnimationFrame(this.update);\n      return;\n    }\n    this.lastFrameTime = timestamp;\n    \n    // State machine\n    switch (this.currentState) {\n      case this.STATES.IN:\n        this.updateInState();\n        if (++this.stepCount > this.totalStepsIn) {\n          this.container.textContent = this.currentText;\n          this.currentState = this.STATES.PAUSE;\n          this.stateStartTime = timestamp;\n          this.stepCount = 0;\n        }\n        break;\n        \n      case this.STATES.PAUSE:\n        if (timestamp - this.stateStartTime >= this.legiblePauseDuration) {\n          this.currentState = this.STATES.OUT;\n          this.outThresholds = this.computeThresholds(this.currentText, this.totalStepsOut, false);\n          this.stepCount = 0;\n          this.refreshRandomCache();\n        }\n        break;\n        \n      case this.STATES.OUT:\n        this.updateOutState();\n        if (++this.stepCount > this.totalStepsOut) {\n          this.currentTextIndex = (this.currentTextIndex + 1) % this.texts.length;\n          this.currentText = this.texts[this.currentTextIndex];\n          \n          // Resize output buffer if needed\n          if (this.outputBuffer.length < this.currentText.length) {\n            this.outputBuffer = new Array(this.currentText.length);\n          }\n          \n          this.inThresholds = this.computeThresholds(this.currentText, this.totalStepsIn, true);\n          this.currentState = this.STATES.IN;\n          this.stepCount = 0;\n        }\n        break;\n    }\n    \n    requestAnimationFrame(this.update);\n  }\n  \n  // Update diffusion-in state\n  updateInState() {\n    const text = this.currentText;\n    const buffer = this.outputBuffer;\n    const step = this.stepCount;\n    const thresholds = this.inThresholds;\n    \n    for (let i = 0; i < text.length; i++) {\n      const char = text[i];\n      if (char === ' ' || char === '\\n' || char === '\\t') {\n        buffer[i] = char;\n      } else {\n        buffer[i] = step >= thresholds[i] ? char : this.getCachedRandomChar();\n      }\n    }\n    \n    this.container.textContent = buffer.join('');\n  }\n  \n  // Update diffusion-out state\n  updateOutState() {\n    const text = this.currentText;\n    const buffer = this.outputBuffer;\n    const step = this.stepCount;\n    const thresholds = this.outThresholds;\n    \n    for (let i = 0; i < text.length; i++) {\n      const char = text[i];\n      if (char === ' ' || char === '\\n' || char === '\\t') {\n        buffer[i] = char;\n      } else {\n        buffer[i] = step >= thresholds[i] ? this.getCachedRandomChar() : char;\n      }\n    }\n    \n    this.container.textContent = buffer.join('');\n  }\n  \n  // Start animation\n  start() {\n    if (!this.isRunning) {\n      this.isRunning = true;\n      requestAnimationFrame(this.update);\n    }\n  }\n  \n  // Stop animation\n  stop() {\n    this.isRunning = false;\n  }\n}\n\n/**\n * Initialize the diffusion text animator\n */\nexport function initDiffusionText() {\n  // Find target elements\n  const textContainer = document.getElementById('diffusion-text');\n  const authorContainer = document.getElementById('diffusion-text-author');\n  const skillsContainer = document.getElementById('diffusion-text-skills'); // New container for skills\n\n  if (!textContainer) {\n    console.warn(\"No element with ID 'diffusion-text' found. Diffusion text animation not initialized.\");\n    // return null; // Keep this commented or adjust if skills animation should run independently\n  }\n\n  // Quote collection with text and authors\n  const quotes = [\n    {\n      text: \"No great discovery was ever made without a bold guess.\",\n      author: \"\u2013 Isaac Newton\"\n    },\n    {\n      text: \"Simplicity is the ultimate sophistication.\",\n      author: \"\u2013 Leonardo da Vinci\"\n    },\n    {\n      text: \"Obsessions make my life worse and my work better.\",\n      author: \"\u2013 Stefan Sagmeister\"\n    },\n    {\n      text: \"Creativity is intelligence having fun.\",\n      author: \"\u2013 Albert Einstein\"\n    },\n    {\n      text: \"Inspiration exists, but it has to find you working.\",\n      author: \"\u2013 Pablo Picasso\"\n    },\n    {\n      text: \"Innovation is saying 'no' to a thousand things.\",\n      author: \"\u2013 Steve Jobs\"\n    },\n    {\n      text: \"Imagination is the bridge to everywhere.\",\n      author: \"\u2013 Albert Einstein\"\n    },\n    {\n      text: \"The details are not the details. They make the design.\",\n      author: \"\u2013 Charles Eames\"\n    }\n  ];\n\n  // Extract quote texts for the main animator\n  const quoteTexts = quotes.map(quote => quote.text);\n\n  let textAnimator = null;\n  if (textContainer) {\n    textAnimator = new DiffusionTextAnimator({\n      texts: quoteTexts,\n      animateInDuration: 1500,\n      legiblePauseDuration: 2000,\n      animateOutDuration: 1500,\n      frameInterval: 200, // Original frame interval for quotes\n      letterPool: \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()+-=[]{}|;:,.<>/*\u201A\u00B7\u00B0\u2021\u203A\u2039\u00AC\u2206\u0192\u2202\u03C0\u00F8\u00A5\u2020\u00AE\u2211 */?/~`\",\n      container: textContainer\n    });\n    textAnimator.start();\n  }\n\n  // If author container exists, create and start the author animator\n  let authorAnimator = null;\n  if (authorContainer && textAnimator) {\n    const authorTexts = quotes.map(quote => quote.author);\n\n    authorAnimator = new DiffusionTextAnimator({\n      texts: authorTexts,\n      animateInDuration: 1500,\n      legiblePauseDuration: 2000,\n      animateOutDuration: 1500,\n      frameInterval: 200,\n      letterPool: \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()+-=[]{}|;:,.<>/*\u201A\u00B7\u00B0\u2021\u203A\u2039\u00AC\u2206\u0192\u2202\u03C0\u00F8\u00A5\u2020\u00AE\u2211 */?/~`\",\n      container: authorContainer\n    });\n    \n    // Synchronize with the text animator's state changes\n    const originalUpdateMethod = textAnimator.update;\n    textAnimator.update = function(timestamp) {\n      const prevState = textAnimator.currentState;\n      const prevIndex = textAnimator.currentTextIndex;\n      \n      originalUpdateMethod.call(textAnimator, timestamp);\n      \n      // If text animator changes state or index, update author animator too\n      if (prevState !== textAnimator.currentState || prevIndex !== textAnimator.currentTextIndex) {\n        authorAnimator.currentState = textAnimator.currentState;\n        authorAnimator.currentTextIndex = textAnimator.currentTextIndex;\n        authorAnimator.stepCount = textAnimator.stepCount;\n        authorAnimator.stateStartTime = textAnimator.stateStartTime;\n      }\n    };\n    \n    authorAnimator.start();\n  }\n\n  // --- New Skills Animator ---\n  let skillsAnimator = null;\n  if (skillsContainer) {\n    const skillTexts = [\n      \"End-to-End Product Design (UX/UI/Code)\",\n      \"Strategic Thinking & Digital Vision\",\n      \"Front-End Development (HTML, CSS, JS, WebGL)\",\n      \"AI-Enhanced Design Workflows\",\n      \"Motion Design & Microinteraction Craft\",\n      \"Design Systems & Component Libraries\",\n      \"Typography & Visual Systems\",\n      \"Creative Technology & Prototyping\",\n      \"Team Leadership & Stakeholder Alignment\",\n      \"Inventive Problem Solving\"\n    ];\n\n    skillsAnimator = new DiffusionTextAnimator({\n      texts: skillTexts,\n      animateInDuration: 1000, // Faster\n      legiblePauseDuration: 1000, // More frequent changes\n      animateOutDuration: 1000, // Faster\n      frameInterval: 100, // Smoother/faster animation steps\n      letterPool: \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()+-=[]{}|;:,.<>/*\u201A\u00B7\u00B0\u2021\u203A\u2039\u00AC\u2206\u0192\u2202\u03C0\u00F8\u00A5\u2020\u00AE\u2211 */?/~`\",\n      container: skillsContainer\n    });\n    skillsAnimator.start();\n  } else {\n    console.warn(\"No element with ID 'diffusion-text-skills' found. Skills diffusion text animation not initialized.\");\n  }\n\n  return {\n    textAnimator,\n    authorAnimator,\n    skillsAnimator // Return the new animator as well\n  };\n}\n", "// This module applies/removes an Interference effect that simulates sporadic widget flickering\nexport function applyInterference(widget) {\n    const fixedDuration = 3; // seconds for interference animation\n    widget.style.setProperty('--interference-duration', `${fixedDuration}s`);\n    const randomDelay = Math.random() * 2; // random delay between 0-2 seconds\n    widget.style.setProperty('--interference-delay', `${randomDelay}s`);\n    widget.classList.add('widget-interference');\n}\n\nexport function removeInterference(widget) {\n    widget.classList.remove('widget-interference');\n}\n\n// New centralized initialization function for interference\nexport function initInterference() {\n    console.log('Interference module initialized');\n    // Optionally, set default CSS variables on :root if needed.\n}\n"],
  "mappings": "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",
  "names": ["main_exports", "__export", "webflowEnv", "prefersDarkMode", "COLOR_PRESETS", "COLOR_LINE_PRESETS", "detectBrowser", "ua", "detected", "applyBrowserColors", "eventSource", "browser", "mode", "browserPreset", "linePreset", "browserColor", "lineColor", "metaThemeColor", "textAnimConfig", "textElement", "currentGroupIndex", "currentMessageIndex", "activeTimer", "isActive", "updateText", "group", "moveToNextGroup", "text", "randomFactor", "delay", "initLoadingText", "elementId", "stopAnimation", "handlePageLoad", "EventEmitter", "event", "fn", "args", "_config", "_state", "_conversion", "ScrollTracker", "__privateAdd", "wheelTicking", "wheelDelta", "delta", "rawImpulse", "__privateGet", "accelerationImpact", "dampFactor", "pxps", "mph", "kph", "speed", "getConfig", "scrollTracker", "SOUND_CHOICE_MADE", "audioContext", "ambientSource", "engineSource", "isUserActive", "idleTimeout", "isSoundEnabled", "animationFrameId", "activityEventListeners", "isPageVisible", "visibilityTimeout", "visibilityFadeNode", "masterGainNode", "scrollSpeed", "engineStarted", "CONFIG", "soundToggle", "soundToggleKnob", "soundToggleLight", "robotSpeechEnabled", "robotToggleCallback", "audioInitialized", "buttonSoundBuffers", "lastHoverSound", "buttonSoundsLoaded", "buttonSoundsLoading", "introTypingEnabled", "allSoundsActive", "createEnhancedFade", "node", "targetValue", "duration", "type", "now", "currentValue", "initialRamp", "mainRamp", "actualTarget", "createFadeNode", "createAudioContext", "error", "setupVisibilityTracking", "handleVisibilityChange", "handlePageHidden", "handlePageVisible", "currentGain", "err", "setupAmbient", "response", "arrayBuffer", "buffer", "gainNode", "antiPopNode", "compressor", "smoothingFilter", "dcFilter", "source", "errorMsg", "setupEngineSound", "bufferSize", "noiseBuffer", "channel", "output", "b0", "b1", "b2", "b3", "b4", "b5", "i", "white", "lowpassFilter", "defaultFreq", "subBassFilter", "bandpassFilter", "panner", "startDelay", "handleActivity", "targetVolume", "getEngineVolumeForSpeed", "fadeTo", "fadeOutDuration", "speed", "speedRatio", "updateSoundParameters", "topSpeed", "scrollTracker", "timeInSec", "ambientPitch", "engineVolume", "filterFreq", "subGain", "cleanupAudioResources", "event", "handler", "updateToggleUI", "isOn", "enableSoundSystem", "data", "lastMouseMoveTime", "handleMouseMove", "evt", "handleSoundChoice", "enableSound", "toggleSound", "initSoundSystem", "resumeAudio", "e", "preloadButtonSounds", "btnOn", "btnOff", "newToggle", "playCharacterSound", "character", "config", "enabled", "oscillator", "frequency", "charMappings", "playRobotSpeechSound", "initRobotSpeech", "audioContext", "error", "playTestSound", "oscillator", "gainNode", "masterGainNode", "toggleRobotSpeech", "robotSpeechEnabled", "robotToggleCallback", "onRobotSpeechToggle", "callback", "robotSpeech", "playRobotSpeechSound", "audioInitialized", "preloadButtonSounds", "buttonSoundsLoaded", "buttonSoundsLoading", "createAudioContext", "loadPromises", "loadSound", "url", "soundType", "response", "arrayBuffer", "decodedBuffer", "buttonSoundBuffers", "urls", "CONFIG", "result", "playButtonSound", "volumeMultiplier", "isSoundEnabled", "allSoundsActive", "isPageVisible", "now", "lastHoverSound", "buffer", "source", "buttonSounds", "EVENTS", "SOUND_CHOICE_MADE", "SCREEN_IDS", "WIDGET_ANIMATION_DURATION", "WIDGET_BASE_DELAY", "SPECIAL_BUTTONS", "transitionInProgress", "WidgetAnimationManager", "view", "type", "widgets", "widget", "resolve", "viewId", "numberOfWidgets", "shuffledWidgets", "delayStep", "handleAnimationEnd", "index", "record", "delay", "buttonSounds", "safetyTimeout", "now", "timestamp", "widgetAnimator", "init3DButtons", "initializeSystem", "prepareViewsAndWidgets", "buttonWrappers", "wrapper", "setupButtonEvents", "setupSpecialButtons", "homeButtonWrapper", "homeView", "deactivateAllButtons", "innerButton", "showViewElement", "id", "screen", "handleButtonClick", "button", "buttonId", "targetViewId", "handleSpecialButtonClick", "buttonWrapper", "variant", "targetScreenId", "previousScreen", "getActiveScreenElement", "targetScreen", "activateButton", "siblingSelector", "siblingWrapper", "performViewTransition", "oldView", "newView", "forceHideAllWidgetsInView", "hideViewElement", "allButtonWrappers", "activeCount", "stillActiveWrappers", "activeWrapper", "screenType", "setupResizeOverlay", "overlay", "alertElement", "MIN_WIDTH", "MIN_HEIGHT", "MAX_RATIO", "TRANSITION_DURATION", "RESIZE_DELAY", "resizeTimer", "isResizing", "overlayShownForSizeRestriction", "isViewportAcceptable", "width", "height", "ratio", "showOverlay", "showAlert", "hideOverlay", "viewportIsAcceptable", "initResizeOverlay", "cursorXPercent", "cursorYPercent", "prevMouseX", "prevMouseY", "prevTime", "totalDistance", "clickCount", "currentDistanceMeters", "currentDistanceMiles", "dpi_x", "clickCounterElement", "distanceValueM", "distanceValueMiles", "isInitialized", "ensureElementsInitialized", "updateDistanceMetrics", "distanceInches", "formatValue", "value", "updateDebugDisplay", "handlePointerMove", "x", "y", "currentTime", "dx", "dy", "distance", "setupEventHandlers", "ticking", "lastEvent", "requestTick", "touch", "e", "touchX", "touchY", "animationLoop", "initcursorTracker", "initLightGrid", "selector", "MIN_ON_DURATION_MS", "MAX_ON_DURATION_MS", "MIN_OFF_DURATION_MS", "MAX_OFF_DURATION_MS", "FLICKER_PER_FRAME_CHANCE", "FLICKER_DURATION_MS", "FLICKER_INTERVAL_MS", "dotSizePx", "minOpacity", "maxOpacity", "Grid", "container", "width", "height", "computedStyle", "dpr", "colWidth", "rowHeight", "r", "c", "initialOffDuration", "timestamp", "deltaTime", "w", "h", "dot", "currentDotOpacity", "initializeGrids", "containers", "grid", "animFrameId", "animateLoop", "ts", "initDateDisplay", "updateDateDisplay", "now", "parts", "weekday", "day", "month", "year", "p", "ordinal", "n", "greetingEl", "logbookEl", "initMarqueeContent", "container", "child", "clone", "clockInterval", "updateLondonClock", "londonTimeString", "londonTime", "hours", "minutes", "seconds", "hourDegrees", "minuteDegrees", "secondDegrees", "hourHand", "minuteHand", "secondHand", "initLondonClock", "animationStarted", "initRobot", "CONFIG", "robotFace", "bubble", "speechBubbleText", "isSmiling", "charTypeMap", "mouthShapes", "eyeShapes", "robotDots", "dotMap", "mouthDotCache", "eyeDotCache", "dot", "row", "key", "shapeName", "coords", "col", "currentMouthShape", "currentEyeShape", "setMouth", "shape", "setEyes", "setNeutralExpression", "setLaughExpression", "blinkTimeout", "blinkEyes", "nextBlink", "stopBlinking", "resumeBlinking", "moveEyesRandomly", "positions", "randomPosition", "updateMouthShape", "letter", "availableMouths", "delay", "ms", "resolve", "checkVisibility", "rect", "e", "prefillSpeechBubble", "phrase", "jokeIntroductions", "wisdomIntroductions", "designWisdoms", "allSpeechSources", "joke", "wisdom", "getRandomSpeechItem", "selectedItem", "revealText", "currentPhrase", "displayedText", "mouthUpdateCounter", "i", "character", "robotSpeech", "speedVariation", "typeWriter", "speechItem", "animateJoke", "animateWisdom", "jokeParts", "wisdomParts", "toggleSpeechSounds", "init", "eventType", "moveEyesInterval", "err", "initProcessorAnimation1", "element", "initProcessorAnimation2", "className", "frames", "frameIndex", "initProcessorAnimation3", "str", "pos1", "pos2", "pos3", "initProcessorAnimation4", "PROCESSOR_TEXT", "elements", "length", "index", "displayedText", "DiffusionTextAnimator", "options", "char", "text", "totalSteps", "isInPhase", "length", "thresholds", "noiseRange", "baseThreshold", "i", "poolLength", "timestamp", "buffer", "step", "initDiffusionText", "textContainer", "authorContainer", "skillsContainer", "quotes", "quoteTexts", "quote", "textAnimator", "authorAnimator", "authorTexts", "originalUpdateMethod", "prevState", "prevIndex", "skillsAnimator", "skillTexts", "initInterference", "webflowEnv", "buttonSounds", "err", "initLightGrid", "applyBrowserColors", "initLoadingText", "prefersDarkMode", "init3DButtons", "resolve", "initSoundSystem", "EVENTS", "initcursorTracker", "initResizeOverlay", "initDateDisplay", "initMarqueeContent", "initLondonClock", "initRobot", "initProcessorAnimation1", "initProcessorAnimation2", "initProcessorAnimation3", "initProcessorAnimation4", "initDiffusionText", "initInterference", "error"]
}
